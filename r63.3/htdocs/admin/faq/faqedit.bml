<?_info
nocache=>1
_info?><?page
title=><?_code return $FORM{'id'} ? "Edit FAQ Item #$FORM{'id'}" : "Add to FAQ"; _code?>
body<=

<CENTER>
<A HREF="./"><B>(Back to FAQ Index)</B></A>
</CENTER>


<?_code

 $id = $FORM{'id'} + 0;
 $ret = "";

 my $dbh = LJ::get_db_writer();

 my $remote = LJ::get_remote();
 my %ac_edit;
 my %ac_add;
 LJ::remote_has_priv($remote, "faqadd", \%ac_add);
 LJ::remote_has_priv($remote, "faqedit", \%ac_edit);
 my $faqd = LJ::Lang::get_dom("faq");
 my $rlang = LJ::Lang::get_root_lang($faqd);
 my ($question, $summary, $answer, $faqcat, $sortorder);
 my ($sev_question, $sev_summary, $sev_answer);

 if ($id)
 {
     my $sth = $dbh->prepare("SELECT question, summary, answer, faqcat, sortorder FROM faq WHERE faqid=$id");
     $sth->execute;
     ($question, $summary, $answer, $faqcat, $sortorder) = $sth->fetchrow_array or
         return "<b>Error:</b> FAQ #$id does not exist.";

     unless ($ac_edit{'*'} || $ac_edit{$faqcat}) {
         if (%ac_edit) {
             return "<B>Error: </B> You do not have access to edit a FAQ question in the \"$faqcat\" category.";
         } else {
             return "<B>Error: </B> You do not have access to edit the FAQ.";
         }
     }
 }
 else
 {
     unless ($ac_add{'*'} || $ac_add{$FORM{'faqcat'}}) {
         return "<B>Error: </B> You do not have access to add to the FAQ.";
     }
 }


 $sortorder += 0;
 $sortorder ||= 50;

 if ( LJ::did_post() ) {
     $question = $FORM{q};
     $summary = $FORM{s};
     $answer = $FORM{a};
     $faqcat = $FORM{faqcat};
     $sortorder = $FORM{sortorder} + 0 || 50;
     $sev_question = $FORM{sev_question} + 0;
     $sev_summary = $FORM{sev_summary} + 0;
     $sev_answer = $FORM{sev_answer} + 0;

     if ( $POST{'action:save'} ) { # Save FAQ
         return "<b>$ML{'Error'}</b> $ML{'error.invalidform'}" unless LJ::check_form_auth();

         unless ($rlang) { undef $faqd; }
         my $opts_question = { changeseverity => $sev_question };
         my $opts_summary = { changeseverity => $sev_summary };
         my $opts_answer = { changeseverity => $sev_answer };
         my $do_trans = sub {
             my $id = shift;
             return unless $faqd;
             LJ::Lang::set_text($dbh, $faqd->{'dmid'}, $rlang->{'lncode'},
                                "$id.1question", $question, $opts_question);
             LJ::Lang::set_text($dbh, $faqd->{'dmid'}, $rlang->{'lncode'},
                                "$id.3summary", $summary, $opts_summary);
             LJ::Lang::set_text($dbh, $faqd->{'dmid'}, $rlang->{'lncode'},
                                "$id.2answer", $answer, $opts_answer);
         };

         if ($id == 0) {
             unless ($FORM{'faqcat'})
             {
                 return "<B>Error: </B> You did not select a FAQ category.";
             }
             $dbh->do("INSERT INTO faq (faqid, question, summary, answer, faqcat, sortorder, lastmoduserid, lastmodtime) "
                      . "VALUES (NULL, ?, ?, ?, ?, ?, ?, NOW())",
                      undef, $question, $summary, $answer, $faqcat, $sortorder, $remote->{userid});
             $id = $dbh->{'mysql_insertid'};
             $ret .= $dbh->errstr || "Added FAQ item.  All good.";

             $opts_question->{'childrenlatest'} = 1;
             $opts_summary->{'childrenlatest'} = 1;
             $opts_answer->{'childrenlatest'} = 1;
             $do_trans->($id) if $id;
         } elsif ($question =~ /\S/) {
             $dbh->do("UPDATE faq SET question=?, summary=?, answer=?, faqcat=?, lastmoduserid=?, lastmodtime=NOW(), sortorder=? WHERE faqid=?",
                      undef, $question, $summary, $answer, $faqcat, $remote->{userid}, $sortorder, $id);
             $ret .= "Updated FAQ item.  All good.  faqid is <b><a href='$LJ::SITEROOT/support/faqbrowse.bml?faqid=$id'>$id</a></b>";

             $do_trans->($id);
         } else {
             $dbh->do("DELETE FROM faq WHERE faqid=$id");
             $ret .= "FAQ item deleted.";

             # TODO: delete translation from ml_* ?
         }

         return $ret;
     }

    if ( $POST{'action:preview'} ) { # Preview FAQ
        # FIXME: make lastmodtime look more like in LJ::Faq->load
        my $fake_faq
            = LJ::Faq->new( faqid => $id, question => $question,
                            summary => $summary, answer => $answer,
                            faqcat => $faqcat, lang => $rlang->{lncode},
                            lastmoduserid => $remote->{userid},
                            sortorder => $sortorder, unixmodtime => time,
                            lastmodtime => scalar gmtime );

        # Get remote username and journal URL, or example user's username
        # and journal URL
        my ( $user, $user_url );
        if ( $remote ) {
            $user = $remote->user;
            $user_url = $remote->journal_base;
        } else {
            my $u = LJ::load_user( $LJ::EXAMPLE_USER_ACCOUNT );
            $user = $u
                ? $u->user
                : "<b>[Unknown or undefined example username]</b>";
            $user_url = $u
                ? $u->journal_base
                : "<b>[Unknown or undefined example username]</b>";
        }

        $fake_faq->render_in_place( { user => $user, url => $user_url } );
        # Always display answer. (Except if hook says not to - see below)
        my $display_answer = 1;
        # Display summary if enabled and present.
        my $display_summary = $fake_faq->has_summary;

        # escape question
        # FIXME: do we still need to check for \n? Did we ever?
        my $q_html
            = LJ::html_newlines( LJ::trim( $fake_faq->question_html ) );

        # Clean this as if it were an entry, but don't allow lj-cuts
        my $s_html = $fake_faq->summary_html;
        LJ::CleanHTML::clean_event( \$s_html, { ljcut_disable => 1 } )
            if $display_summary;
        my $a_html = $fake_faq->answer_raw;
        LJ::CleanHTML::clean_event( \$a_html, { ljcut_disable => 1 } )
            if $display_answer;

        # run hook to transform the text of this FAQ before it's rendered
        # FIXME: hook is responsible for clean-up if it changes $display_*
        # from false to true. Should that be checked/enforced here instead?
        # FIXME: do we even need that hook? It looks like LJ only ever used
        # it to add stuff to LJ Talk FAQs, for Gizmo sponsorship.
        LJ::run_hook( "faq.$id.transform", $remote, answer => \$a_html,
                      question => \$q_html, summary => \$s_html,
                      display_summary => \$display_summary,
                      display_answer => \$display_answer )
            if LJ::are_hooks( "faq.$id.transform" );

        # display output
        $ret .= "<hr /><?h1 $q_html h1?>";
        $ret .= "<div style='margin-left: 20px;'>";
        $ret .= "<div name='summary' id='summary'>$s_html</div><br />"
            if $display_summary;

        $ret .= "<div id='answer' name='answer'>$a_html</div>"
            if $display_answer;

        $ret .= "</div>";

        # FIXME: lastmodtime and lastmodwho should be vars in .lastupdated
        # Also, using the string in htdocs/support/faqbrowse.bml.text for
        # now, but this may change (either duplicate it here, or remove it
        # altogether, since $remote presumably knows who they are and what
        # time it is).
        $ret .= "<p align='right'><b>$ML{'/support/faqbrowse.bml.lastupdated'}</b><br />"
            . $fake_faq->lastmodtime . " (" . $remote->user . ")</p><hr />";
    }
    # Fall through to form
 }

 $ret .= "<form action='faqedit.bml' method='post'>";
 $ret .= LJ::form_auth();
 $ret .= LJ::html_hidden('id', $id);
 $ret .= "<p>Category: ";

 my $sth = $dbh->prepare("SELECT faqcat, faqcatname FROM faqcat ORDER BY catorder");
 $sth->execute;
 my @cats;
 push @cats, '';push @cats, '';
 my $faqd = LJ::Lang::get_dom("faq");

 while (($fc, $fcname) = $sth->fetchrow_array)
 {
     if ($id) {
         next unless ($ac_add{'*'} || $ac_add{$fc} || ($fc eq $faqcat));
     } else {
         next unless ($ac_add{'*'} || $ac_add{$fc});
     }

     push @cats, $fc;
     push @cats, $fcname;
 }

 $ret .= LJ::html_select({
     'name'     => 'faqcat',
     'selected' => $faqcat,},
                         @cats);

 $ret .= "&nbsp;SortOrder: ";
 $ret .= LJ::html_text({
     'name'      => 'sortorder',
     'value'     => $sortorder,
     'size'      => 5,
     'maxlength' => 4,
 });

 $ret .= "<br><i>(sort order is how to sort within the category.  categories themselves are also sorted.)</i></p>";

 $ret .= "<?h1 Question h1?> <?p (as brief as possible, do not span multiple lines) p?><p>";

 $ret .= LJ::html_textarea({
     'name'  => 'q',
     'value' => $question,
     'rows'  => 2,
     'cols'  => 70,
     'wrap'  => 'soft'
     });
 $ret .= "<br /><i>(erase question to delete FAQ entry)</i></p>";
 
 if ($faqd && $id != 0) {
     $ret .= "<p><b>Select modification level for question:</b> ";
     $ret .= LJ::html_select({ 'name' => "sev_question", "selected" => 0 },
                             0 => "Typo/etc (no notify)",
                             1 => "Minor (notify translators)",
                             2 => "Major (require translation updates)");
     $ret .= "</p>";
 }

 $ret .= "<?h1 Summary h1?> <?p (should be a shortish paragraph, urls are automatically linked, same markup as journal entries, no lj-cut) p?><p>";

 $ret .= LJ::html_textarea({
     'name'  => 's',
     'value' => $summary,
     'rows'  => '10',
     'cols'  => '70',
     'wrap'  => 'soft'
     });
 $ret .= "</p>";

 if ($faqd && $id != 0) {
     $ret .= "<p><b>Select modification level for summary:</b> ";
     $ret .= LJ::html_select({ 'name' => "sev_summary", "selected" => 0 },
                             0 => "Typo/etc (no notify)",
                             1 => "Minor (notify translators)",
                             2 => "Major (require translation updates)");
     $ret .= "</p>";
 }

 $ret .= "<?h1 Answer h1?> <?p (long as you want, urls are automatically linked, same markup as journal entries, no lj-cut) p?><p>";

 $ret .= LJ::html_textarea({
     'name'  => 'a',
     'value' => $answer,
     'rows'  => '15',
     'cols'  => '70',
     'wrap'  => 'soft'
     });
 $ret .= "</p>";

 if ($faqd && $id != 0) {
     $ret .= "<p><b>Select modification level for answer:</b> ";
     $ret .= LJ::html_select({ 'name' => "sev_answer", "selected" => 0 },
                             0 => "Typo/etc (no notify)",
                             1 => "Minor (notify translators)",
                             2 => "Major (require translation updates)");
     $ret .= "</p>";
 }


 $ret .= "<p>" . LJ::html_submit('action:save', 'Add/Edit FAQ Item');
 $ret .= " " . LJ::html_submit( 'action:preview', 'Preview FAQ Item')
         . "</p>";
 return $ret;

 _code?>

</FORM>

<=body
page?><?_c <LJDEP>
lib: cgi-bin/ljlib.pl
post: htdocs/admin/faq/faqedit_do.bml
</LJDEP> _c?>
