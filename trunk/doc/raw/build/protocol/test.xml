

<refentry id="ljp.csp.xml-rpc.ref.login">
  <refnamediv>
    <refname>login</refname>
    <refpurpose>
validate user's password and get base information needed for client to function
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Login to the server, while announcing your client version.  The server returns with whether the password is good or not, the user's name, an optional message to be displayed to the user, the list of the user's friend groups, and other things.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">clientversion</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Although optional, this should be a string of the form Platform-ProductName/ClientVersionMajor.Minor.Rev, like Win32-MFC/1.2.7 or Gtk-LoserJabber/1.0.4.  Note in this case that &quot;Gtk&quot; is not a platform, but rather a toolkit, since the toolkit is multi-platform (Linux, FreeBSD, Solaris, Windows...).  You make the judge what is best to send, but if it's of this form, we'll give you cool statistics about your users.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">getmoods</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If your client supports moods, send this key with a value of the highest mood ID you have cached/stored on the user's computer.  For example, if you logged in last time with and got mood IDs 1, 2, 4, and 5, then send &quot;5&quot; as the value of &quot;getmoods&quot;.  The server will return every new mood that has an internal MoodID greater than 5.  If you've never downloaded moods before, send &quot;0&quot;.  If you don't care about getting any moods at all (if your client doesn't support them), then don't send this key at all.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">getmenus</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Send something for this key if you want to get a list/tree of web jump menus to show in your client.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">getpickws</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If your client supports picture keywords and you want to receive that list, send something for this key, like &quot;1&quot;, and you'll receieve the list of picture keywords the user has defined.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">getpickwurls</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If your client supports picture keywords and can also display the pictures somehow, send something for this key, like &quot;1&quot;, and you'll receieve the list of picture keyword URLs that correspond to the picture keywords.  You must send getpickws for this option to even matter.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The user's full name.  Often, clients use this to change the top-level window's title bar text to say something like &quot;LiveJournal - User name&quot;.  You can just ignore this if you'd like.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">message</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
A message that should be displayed in a dialog box (or to the screen in a console application).  The message is rarely present but when used notifies the user of software updates they've requested to hear about, problems with their account (if mail is bouncing to them, we'd like them to give us a current email address), etc.  To test this if you're developing a client, use the user account test with the password test and a message will always be returned.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">friendgrounds</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">id</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The bit number for this friend group, from 1-30.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The name of this friend group.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">sortorder</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The sort integer for this friend group, from 0-255.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">public</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Either '0' or '1' for if this friend group is public.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">usejournals</emphasis>:
  <itemizedlist>
List of shared/news/community journals that the user has permission
to post in.

List of shared/news/community journals that the user has permission
to post in.
<listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
Username of community journal.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">moods</emphasis>:
  <itemizedlist>
          If you sent the 'getmoods' key in your request, this is returned.  The contents are the new moods that have been added on the server since you last requested the list.  Your client should cache the mood list on the client's computer to avoid requesting the whole list everytime.
        
          If you sent the 'getmoods' key in your request, this is returned.  The contents are the new moods that have been added on the server since you last requested the list.  Your client should cache the mood list on the client's computer to avoid requesting the whole list everytime.
        <listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">id</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
                The integer moodid.
            </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
                The mood name.
            </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">parent</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
                The mood's parent (base) moodid.
            </para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">pickws</emphasis>:
  <itemizedlist>
This is requrned if you set &quot;getpickws&quot; in your request.  Picture keywords are used to identify which userpic (100x100 icon) to use for that particular post.  For instance, the user may have &quot;Angry&quot;, &quot;Happy&quot;, and &quot;Sleepy&quot; picture keywords which map to certain pictures.  The client should also do a case-insensitive compare on this list when a mood is selected or entered, and auto-select the current picture keyword.  That way it seems that selecting a mood also sets their corresponding picture.

This is requrned if you set &quot;getpickws&quot; in your request.  Picture keywords are used to identify which userpic (100x100 icon) to use for that particular post.  For instance, the user may have &quot;Angry&quot;, &quot;Happy&quot;, and &quot;Sleepy&quot; picture keywords which map to certain pictures.  The client should also do a case-insensitive compare on this list when a mood is selected or entered, and auto-select the current picture keyword.  That way it seems that selecting a mood also sets their corresponding picture.
<listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
The picture keyword.	    
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">pickwurls</emphasis>:
  <itemizedlist>
The URLs of the user pictures.  They correspond with the list of
picture keywords returned.  Note that the content behind these URLs
can never change, so if your client downloads these to display, just
cache them locally and never hit the servers again to re-download them
or to even check if they've been modified.

The URLs of the user pictures.  They correspond with the list of
picture keywords returned.  Note that the content behind these URLs
can never change, so if your client downloads these to display, just
cache them locally and never hit the servers again to re-download them
or to even check if they've been modified.
<listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
The picture URL.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fastserver</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
LiveJournal sites may have priority servers for paying customers.  If this key is both present and set to value &quot;1&quot;, then the client has permission to set the &quot;ljfastserver&quot; cookie in subsequent requests.  The HTTP request header to send is &quot;Cookie: ljfastserver=1&quot;.  If you send this header without getting permission from the login mode, your requests will fail.  That is, you'll trick the load balancer into directing your request towards the priority servers, but the server you end up hitting won't be happy that you're trying to scam faster access and will deny your request.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">userid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The userid of this user on the system.  Not required for any other requests to
the server, but some developers have wanted it.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">menus</emphasis>:
  <itemizedlist>Returned if you set &quot;getmenus&quot; in your request.Returned if you set &quot;getmenus&quot; in your request.<listitem><para><emphasis>[list]</emphasis>(required)List of menu items in order that should be in the LiveJournal web menu in the client application.
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">text</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
     The text of the menu item, or &quot;-&quot; for a separator. 
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">url</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
     The URL the menu item should launch, present for all menu items
     except separators and submenus.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">sub</emphasis>:
  <itemizedlist>
     If this is present, this menu item is a submenu.   
  
     If this is present, this menu item is a submenu.   
  <listitem><para><emphasis>[list]</emphasis>(optional; multiple allowed)Same format as top-level menu structure
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist/></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.postevent">
  <refnamediv>
    <refname>postevent</refname>
    <refpurpose>
The most important mode, this is how a user actually submits a new log entry to the server.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Given all of the require information on a post, optioanlly adding security or meta data, will create a new entry. Will return the itemid of the new post.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">event</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The event/log text the user is submitting. Carriage returns are okay (0x0A, 0x0A0D, or 0x0D0A), although 0x0D are removed internally to make everything into Unix-style line-endings (just \ns). Posts may also contain HTML, but be aware that the LiveJournal server converts newlines to HTML &lt;BR&gt;s when displaying them, so your client should not try to insert these itself.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lineendings</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Specifies the type of line-endings you're using. Possible values are unix (0x0A (\n)), pc (0x0D0A (\r\n)), or mac (0x0D (\r) ). The default is not-Mac. Internally, LiveJournal stores all text as Unix-formatted text, and it does the conversion by removing all \r characters. If you're sending a multi-line event on Mac, you have to be sure and send a lineendings value of mac  or your line endings will be removed. PC and Unix clients can ignore this setting, or you can send it. It may be used for something more in the future.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">subject</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The subject for this post. Limited to 255 characters. No newlines.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">security</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Specifies who can read this post. Valid values are public (default), private and usemask. When value is usemask, viewability is controlled by the allowmask.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">allowmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Relevant when security is usemask. A 32-bit unsigned integer representing which of the user's groups of friends are allowed to view this post. Turn bit 0 on to allow any defined friend to read it. Otherwise, turn bit 1-30 on for every friend group that should be allowed to read it. Bit 31 is reserved.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">year</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The current 4-digit year (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">mon</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The current 1- or 2-digit month (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">day</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The current 1- or 2-digit day of the month (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hour</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The current 1- or 2-digit hour from 0 to 23 (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">min</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The current 1- or 2-digit minute (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">props</emphasis>:
  <itemizedlist>
Set an arbitrary (but restricted) meta-data property to this log item. See the document on properties for the discussion of them and the list of valid names. You may send zero or more keys like this, one for each property you're setting.

Set an arbitrary (but restricted) meta-data property to this log item. See the document on properties for the discussion of them and the list of valid names. You may send zero or more keys like this, one for each property you're setting.
</itemizedlist></para></listitem><listitem><para><emphasis role="bold">usejournal</emphasis>:
  <itemizedlist>
If posting to a shared journal, include this key and the username you wish to post to. By default, you post to the journal of &quot;user&quot; as specified above.

If posting to a shared journal, include this key and the username you wish to post to. By default, you post to the journal of &quot;user&quot; as specified above.
<listitem><para><emphasis>[scalar]</emphasis>(required)
Journal username that authenticating user has 'usejournal' access in, as given in the 'login' mode.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">itemid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The unique number the server assigned to this post. Currently nothing else in the protocol requires the use of this number so it's pretty much useless, but somebody requested it be returned, so it is.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.editevent">
  <refnamediv>
    <refname>editevent</refname>
    <refpurpose>
Edit or delete a user's past journal entry
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Modify an already created event. If fields are empty, it will delete the event.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">itemid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The unique ItemID of the item being modified or deleted.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">event</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The revised event/log text the user is submitting. Or, to delete an entry, just send no text at all. Carriage returns are okay (0x0A, 0x0A0D, or 0x0D0A), although 0x0D are removed internally to make everything into Unix-style line-endings (just \ns). Posts may also contain HTML, but be aware that the LiveJournal server converts newlines to HTML &lt;BR&gt;s when displaying them, so your client should not try to insert these itself.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lineendings</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Specifies the type of line-endings you're using. Possible values are unix (0x0A (\n)), pc (0x0D0A (\r\n)), or mac (
0x0D (\r) ). The default is not-Mac. Internally, LiveJournal stores all text as Unix-form
atted text, and it does the conversion by removing all \r characters. If you're sending a
 multi-line event on Mac, you have to be sure and send a lineendings value of mac  or you
r line endings will be removed. PC and Unix clients can ignore this setting, or you can s
end it. It may be used for something more in the future.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">subject</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The subject for this post. Limited to 255 characters. No newlines.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">security</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Specifies who can read this post. Valid values are public (default), private and usemask. When value is usemask, viewability is controlled by the allowmask.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">allowmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Relevant when security is usemask. A 32-bit unsigned integer representing which of the user's groups of friends are allowed to view this post. Turn bit 0 on to allow any defined friend to read it. Otherwise, turn bit 1-30 on for every friend group that should be allowed to read it. Bit 31 is reserved.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">props</emphasis>:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist>
Properties and their values for the item being returned.
</itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">usejournal</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If editing a shared journal entry, include this key and the username you wish to edit the entry in. By default, you edit the entry as if it were in user &quot;user&quot;'s journal, as specified above.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">year</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If modifying only, the 4-digit year of the event (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">mon</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If modifying only, the 1- or 2-digit month of the event (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">day</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If modifying only, the 1- or 2-digit day of the month of the event (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hour</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If modifying only, the 1- or 2-digit hour from 0 to 23 of the event (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">min</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If modifying only, the 1- or 2-digit minute of the event (from the user's local timezone).
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">itemid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The unique ItemID of the item being modified or deleted.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.editfriendgroups">
  <refnamediv>
    <refname>editfriendgroups</refname>
    <refpurpose>
Edit the user's defined groups of friends.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Given several optional lists, will add/delete/update/rename the friends groups for a user.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">groupmasks</emphasis>:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist>
A structure of friend userids. The values of each are a string representing an unsigned 32-bit integer with bit 0 set (or the server will force it on anyway), bits 1-30 set for each group the friend belongs to, and bit 31 unset (reserved for future use).
</itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">set</emphasis>:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist>
Given the bit of a friend group, the value contains a structure of information on it.
<listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      Create or rename the friend group by sending this key. The value is the name of the group.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">sort</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      This field should be sent to indicate the sorting order of this group. The value must be in the range of 0-255. The default is 50.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">public</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      If this is &quot;1&quot;, then this group is marked as public. If public, other users can see the name of the group and the people that are in it.
  </para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">delete</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
A number of a friend group to delete (which can be from 1-30, inclusive). The server will modify all old entries that allow access to that friend group, so a new friend group using that number won't have access to old non-related entries. However, it is the client's responsibility to modify each friend's groupmask to remove them from the group as it's deleted.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist/></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.editfriends">
  <refnamediv>
    <refname>editfriends</refname>
    <refpurpose>
Add, edit, or delete friends from the user's friends list.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Takes up to two lists, one of friends to delete and one of friends to add. Several options are allowed to be specified when adding a friend. It returns a verbose list of the friends added, if any were.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">delete</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
A list of variable of this form removes the friend users from the user's friend list. It is not an error to delete an already non-existant friend. The value should just be 1.

  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
A username of a friend to remove.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">add</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
To add friends, send a variable list of this form.

  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      A username of a friend to remove.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      Sets the text color of the friend being added. This value is a HTML-style hex-triplet, and must either be of the form #rrggbb or not sent at all. By default, the value assumed is #000000, black.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">bgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      Sets the background color of the friend being added. This value is a HTML-style hex-triplet, and must either be of the form #rrggbb or not sent at all. By default, the value assumed is #FFFFFF, white.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">groupmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      Sets this user's groupmask. Only use this in clients if you've very recently loaded the friend groups. If your client has been loaded on the end user's desktop for days and you haven't loaded friend groups since it started, they may be inaccurate if they've modified their friend groups through the website or another client. In general, don't use this key unless you know what you're doing.
  </para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">added</emphasis>:
  <itemizedlist>
A list of the users who have been added with this transaction.

A list of the users who have been added with this transaction.
<listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      The username of the friend that was added.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fullname</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
      The full name of the friend that was added.
  </para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.getevents">
  <refnamediv>
    <refname>getevents</refname>
    <refpurpose>
Download parts of the user's journal.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Given a set of specifications, will return a segment of entries up to a limit set by the server. Has a set of options for less, extra, or special data to be returned.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">truncate</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
A value that if greater than or equal to 4, truncates the length of the returned events (after being decoded) to the value specified. Entries less than or equal to this length are left untouched. Values greater than this length are truncated to the specified length minus 3, and then have &quot;... &quot; appended to them, bringing the total length back up to what you specified. This is good for populating list boxes where only the beginning of the entry is important, and you'll double-click it to bring up the full entry.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">prefersubject</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If this setting is set to true (1 ), then no subjects are returned, and the events are actually subjects if they exist, or if not, then they're the real events. This is useful when clients display history and need to give the user something to double-click. The subject is shorter and often more informative, so it'd be best to download only this.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">noprops</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If this setting is set to true (1), then no meta-data properties are returned.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">selecttype</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Determines how you want to specify what part of the journal to download. Valid values are day to download one entire day, lastn to get the most recent n entries (where n is specified in the howmany field), one to download just one specific entry, or syncitems to get some number of items (which the server decides) that have changed since a given time (specified in the lastsync  parameter&gt;). Not that because the server decides what items to send, you may or may not be getting everything that's changed. You should use the syncitems selecttype in conjuntions with the syncitems protocol mode.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lastsync</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of syncitems, the date (in &quot;yyyy-mm-dd hh:mm:ss&quot; format) that you want to get updates since.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">year</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of day, the 4-digit year of events you want to retrieve.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">month</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of day, the 1- or 2-digit month of events you want to retrieve.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">day</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of day, the 1- or 2-digit day of the month of events you want to retrieve.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">howmany</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of lastn, how many entries to get. Defaults to 20. Maximum is 50.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">beforedate</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of lastn, you can optionally include this variable and restrict all entries returned to be before the date you specify, which must be of the form yyyy-mm-dd hh:mm:ss.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">itemid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
For a selecttype of one, the journal entry's unique ItemID for which you want to retrieve. Or, to retrieve the most recent entry, use the value -1. Using -1 has the added effect that the data is retrieved from the master database instead of a replicated slave.  Clients with an &quot;Edit last entry&quot; feature might want to send -1, to make sure the data that comes back up is accurate, in case a slave database is a few seconds behind in replication.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lineendings</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Specifies the type of line-endings you're using. Possible values are unix (0x0A (\n)), pc (0x0D0A (\r\n)), or mac (0x0D (\r) ). The default is not-Mac. Internally, LiveJournal stores all text as Unix-formatted text, and it does the conversion by removing all \r characters. If you're sending a multi-line event on Mac, you have to be sure and send a lineendings value of mac  or your line endings will be removed. PC and Unix clients can ignore this setting, or you can send it. It may be used for something more in the future.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">usejournal</emphasis>:
  <itemizedlist>
If getting the history of a shared journal, include this key and the username you wish to get the history of. By default, you load the history of &quot;user&quot; as specified above.

If getting the history of a shared journal, include this key and the username you wish to get the history of. By default, you load the history of &quot;user&quot; as specified above.
<listitem><para><emphasis>[scalar]</emphasis>(required)
Journal username that authenticating user has 'usejournal' access in, as given in the 'login' mode.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">events</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
A list of structs for all of the returned events.

  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">itemid</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The unique integer ItemID of the item being returned.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">eventtime</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The time the user posted (or said they posted, rather, since users can back-date posts) the item being returned.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">security</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If this variable is not returned, then the security of the post is public, otherwise this value will be private or usemask.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">allowmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If security is usemask then this is defined with the 32-bit unsigned int bit-mask of who is allowed to access this post.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">subject</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The subject of the journal entry. This won't be returned if &quot;prefersubjects&quot; is set, instead the subjects will show up as the events.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">event</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The  event text itself. This value is first truncated if the truncate variable is set, and then it is URL-encoded (alphanumerics stay the same, weird symbols to %hh, and spaces to + signs, just like URLs or post request). This allows posts with line breaks to come back on one line.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">props</emphasis>:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist>
Properties and their values for the item being returned.
</itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.getfriends">
  <refnamediv>
    <refname>getfriends</refname>
    <refpurpose>
Returns a list of which other LiveJournal users this user lists as their friend.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Returns a verbose list of information on friends a user has listed. Optionally able to include their friends of list, the friends group associated with each user, and a limit on the number of friends to return.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">includefriendof</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If set to 1, you will also get back the info from the &quot;friendof&quot; mode. Some clients show friends and friendof data in separate tabs/panes. If you're always going to load both, then use this flag (as opposed to a tabbed dialog approach, where the user may not go to the second tab and thus would not need to load the friendof data.) friendof request variables can be used.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">includegroups</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If set to 1, you will also get back the info from the &quot;getfriendgroups&quot; mode. See above for the reason why this would be useful.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">friendlimit</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If set to a numeric value greater than zero, this mode will only return the number of results indicated. Useful only for building pretty lists for display which might have a button to view the full list nearby.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">id</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The bit number for this friend group, from 1-30.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The name of this friend group.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">sortorder</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The sort integer for this friend group, from 0-255.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">public</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Either '0' or '1' for if this friend group is public.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">friendofs</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The username of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fullname</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The full name of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">journaltype</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The type of journal the friend item is.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The foreground color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">bgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The background color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">groupmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If the group mask is not &quot;1&quot; (just bit 0 set), then this variable is returned with an 32-bit unsigned integer with a bit 0 always set, and bits 1-30 set for each group this friend is a part of. Bit 31 is reserved.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">friends</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The username of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fullname</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The full name of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">journaltype</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The type of journal the friend item is.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The foreground color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">bgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The background color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">groupmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If the group mask is not &quot;1&quot; (just bit 0 set), then this variable is returned with an 32-bit unsigned integer with a bit 0 always set, and bits 1-30 set for each group this friend is a part of. Bit 31 is reserved.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.friendof">
  <refnamediv>
    <refname>friendof</refname>
    <refpurpose>
Returns a list of which other LiveJournal users list this user as their friend.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Returns a &quot;friends of&quot; list for a specified user. An optional limit of returned friends can be supplied.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">friendoflimit</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If set to a numeric value greater than zero, this mode will only return the number of results indicated. Useful only for building pretty lists for display which might have a button to view the full list nearby.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">friendofs</emphasis>:
  <itemizedlist>
The list of people who list this user as a friend.

The list of people who list this user as a friend.
<listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The username of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fullname</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The full name of the friend.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">journaltype</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The type of journal the friend item is.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">fgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The foreground color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">bgcolor</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The background color of the friend item.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">groupmask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
If the group mask is not &quot;1&quot; (just bit 0 set), then this variable is returned with an 32-bit unsigned integer with a bit 0 always set, and bits 1-30 set for each group this friend is a part of. Bit 31 is reserved.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.getfriendgroups">
  <refnamediv>
    <refname>getfriendgroups</refname>
    <refpurpose>
Retrieves a list of the user's defined groups of friends.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Retrieves a list of the user's defined groups of friends.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">friendgroups</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">id</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The bit number for this friend group, from 1-30.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">name</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The name of this friend group.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">sortorder</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The sort integer for this friend group, from 0-255.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">public</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Either '0' or '1' for if this friend group is public.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.getdaycounts">
  <refnamediv>
    <refname>getdaycounts</refname>
    <refpurpose>
This mode retrieves the number of journal entries per day.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
This mode retrieves the number of journal entries per day. Useful for populating calendar widgets in GUI clients. Optionally a journal can be specified. It returns a list of the dates and accompanied counts.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">usejournal</emphasis>:
  <itemizedlist>
If getting the day counts of a shared journal, include this key and the username you wish to get the counts of. By default, you load the counts of &quot;user&quot; as specified above.

If getting the day counts of a shared journal, include this key and the username you wish to get the counts of. By default, you load the counts of &quot;user&quot; as specified above.
<listitem><para><emphasis>[scalar]</emphasis>(required)
Journal username that authenticating user has 'usejournal' access in, as given in the 'login' mode.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">daycounts</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist>
For each day that the user has posted a journal entry, a struct is returned in the list.
<listitem><para><emphasis role="bold">date</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)The date, in yyyy-dd-mm format.</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">count</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)The number of journal entries on that date.</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.syncitems">
  <refnamediv>
    <refname>syncitems</refname>
    <refpurpose>
Returns a list of all the items that have been created or updated for a user.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Returns a list (or part of a list) of all the items (journal entries, to-do items, comments) that have been created or updated on LiveJournal since you last downloaded them. Note that the items themselves are not returned --- only the item type and the item number. After you get this you have to go fetch the items using another protocol mode. For journal entries (type &quot;L&quot;), use the getevents mode with a selecttype of &quot;syncitems&quot;.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lastsync</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The date you last downloaded synced, in &quot;yyyy-mm-dd hh:mm:ss&quot; format. Note:  do not make this date up from the client's local computer... send the date from this mode's response of the newest item you have saved on disk.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">syncitems</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">item</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The nth item, in the form &quot;Type-Number&quot;. Type can be one of &quot;L&quot; for log entries (journal entries), &quot;C&quot; for comments (not implemented), &quot;T&quot; for to-do items (not implemented), or many other things presumably. If your client doesn't know how to fetch an item of a certain type, just ignore them. A new version of your client could later see that it has never downloaded anything of type &quot;T&quot; and go back and fetch everything of that type from the beginning.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">action</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
Either &quot;create&quot; or &quot;update&quot;. This field isn't too useful, but you may want to make your client verbose and tell the user what it's doing. For example, &quot;Downloading entry 5 of 17: Updated&quot;.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">time</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The server time (in the form &quot;yyyy-mm-dd hh:mm:ss&quot;) that this creation or update took place. Remember in your local store the most recent for each item type (&quot;L&quot;, &quot;T&quot;, &quot;C&quot;, etc...). This is what you send in subsequent requests in lastsync.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">count</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The number of items that are contained in this response (numbered started at 1). If sync_count is equal to sync_total, then you can stop your sync after you complete fetching every item in this response.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">total</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The total number of items that have been updated since the time specified.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.checkfriends">
  <refnamediv>
    <refname>checkfriends</refname>
    <refpurpose>
Checks to see if your friends list has been updated since a specified time.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
Mode that clients can use to poll the server to see if their friends list has been updated. This request is extremely quick, and is the preferred way for users to see when their friends list is updated, rather than pounding on reload in their browser, which is stressful on the serves.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">lastupdate</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The time that this mode request returned last time you called it. If this is the first time you've ever called it (since your client has been running), leave this blank. It's strongly recommended that you do not remember this value across invocations of your client, as it's very likely your friends will update since the client was running so the notification is pointless... the user probably read his/her friends page already before starting the client.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">mask</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The friend group(s) in which the client is checking for new entries, represented as a 32-bit unsigned int. Turn on any combination of bits 1-30 to check for entries by friends in the respective friend groups. Turn on bit 0, or leave the mask off entirely, to check for entries by any friends.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">new</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
This is what you should use to determine if there are new entries. Its value is &quot;1&quot; if there is new stuff, or &quot;0&quot; if there isn't. A few people requested that this return the number of new entries, but that's a lot more resource intensive, and this protocol mode is supposed to be very quick and painless. In the future we may add a &quot;new_count&quot; response value that says how many new items there are. Note that once this values becomes &quot;1&quot; and you alert the user, stop polling! It'd be pointless to have the client hitting the server all night while the user slept. Once the user acknowleges the notifcation (double-clicks the system tray or panel applet or whatnot), then resume your polling.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">interval</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
How many seconds you must wait before polling the server again. If your client disobeys, this protocol will just return error messages saying &quot;slow down, bad client!&quot; instead of giving you the data you were trying to cheat to obtain. Note that this also means your client should have an option to disable polling for updates, since some users run multiple operating systems with multiple LiveJournal clients, and both would be fighting each other.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">count</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The number of items that are contained in this response (numbered started at 1). If sync_count is equal to sync_total, then you can stop your sync after you complete fetching every item in this response.
</para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">total</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
The total number of items that have been updated since the time specified.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

<refentry id="ljp.csp.xml-rpc.ref.consolecommand">
  <refnamediv>
    <refname>consolecommand</refname>
    <refpurpose>
Run an administrative command.
</refpurpose>
  </refnamediv>
  <refsect1>
    <title>Mode Description</title>
    <para>
The LiveJournal server has a text-based shell-like admininistration
console where less-often used commands can be entered.  There's a web
interface to this shell online, and this is another gateway to that.
</para>
  </refsect1>
  <refsect1>
    <title>Arguments</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">username</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Username of user logging in.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">password</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    Password of user logging in in plaintext.  Either this or &quot;hpassword&quot; must be present.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">hpassword</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
    MD5 digest of user's password.  Not much more secure than password, but at least it's not in plain text.
  </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">commands</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(optional; multiple allowed)
The commands to send, with double quotes around any arguments with spaces,
and double quotes escaped by backslashes, and backslashes escaped with 
backslashes.  Optionally, you can send a listref instead of a string
for this argument, in which case, we'll use your argument separation
and not parse it ourselves.
</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
  <refsect1>
    <title>Return Values</title>
    <orderedlist>
      <listitem>
        <para><emphasis>[struct]</emphasis>(required)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">results</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
            One stuct returned for each command run, 
            that struct containing both the overall return value,
            and the line-by-line output of the command, with
            each line of output being tagged by type (think
            stdout vs. stderr, but with stdinfo also).  The web interface
            shows 'error' with red, '' (stdout) with black, and 'info'
            with green.  Clients are encouraged to also, if possible.
          
  Containing items:
  <itemizedlist><listitem><para><emphasis>[struct]</emphasis>(optional; multiple allowed)
Containing keys:
  <itemizedlist><listitem><para><emphasis role="bold">success</emphasis>:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
              Return status of nth command.  0 or 1.
          </para></listitem></itemizedlist></para></listitem><listitem><para><emphasis role="bold">output</emphasis>:
  <itemizedlist><listitem><para><emphasis>[list]</emphasis>(required)
  Containing items:
  <itemizedlist><listitem><para><emphasis>[scalar]</emphasis>(required)
                    Type of output line.  Either &quot;&quot; (normal output), &quot;error&quot;, or &quot;info&quot;,
                    something to be emphasized over normal output.
                  </para></listitem><listitem><para><emphasis>[scalar]</emphasis>(required)
                    The text of that line.
                    </para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem></itemizedlist></para>
      </listitem>
    </orderedlist>
  </refsect1>
</refentry>

    

