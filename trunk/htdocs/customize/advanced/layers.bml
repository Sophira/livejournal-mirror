<?_code # -*-bml-*-
{
    use strict;
    use vars qw(%GET %POST $title $body);

    $title = "Your Layers";
    $body = "<div style='margin-bottom: 10px'>";
    $body .= BML::ml("Backlink", {
        'link' => './',
        'text' => 'Advanced Customization',
    }) . "</div>\n";

    my $err = sub {
        $title = "Error";
        $body = shift;
        return;        
    };

    my $pub = LJ::S2::get_public_layers();

    my $id;
    if ($POST{'id'} =~ /^\d+$/) {
        $id = $POST{'id'};
    }

    my $dbr = LJ::get_db_reader();
    my $remote = LJ::get_remote();
    return $err->('You must be logged in to view your layers.') 
        unless $remote;

    my $has_priv = LJ::get_cap($remote, 's2styles');

    ### perform actions ###

    # create
    if ($POST{'action:create'}) {
        return $err->("Account type doesn't permit creating styles") unless $has_priv;
        my $err_badparid = "No/bogus parent layer ID given (for layouts and core languages, use core parent ID; for themes and layout languages, use layout ID)";
        my $type = $POST{'type'} or return $err->("No layer type selected.");
        my $parid = $POST{'parid'}+0 or return $err->($err_badparid);
        return $err->("Invalid layer type") unless $type =~ /^layout|theme|i18nc?$/;
        my $parent_type = ($type eq "theme" || $type eq "i18n") ? "layout" : "core";
        
        if ($pub->{$parid}) {
            # parent ID is public, but of the wrong type
            return $err->($err_badparid) if $pub->{$parid}->{'type'} ne $parent_type;
        } else {
            my $parlay = LJ::S2::load_layer($dbr, $parid);
            return $err->($err_badparid) if 
                ! $parlay ||
                $parlay->{'userid'} != $remote->{'userid'} ||
                $parlay->{'type'} != $parent_type;
        }

        my $id = LJ::S2::create_layer($remote, $parid, $type);
        return $err->("Error creating layer") unless $id;

        my $lay = { 
            'userid' => $remote->{'userid'},
            'type' => $type,
            'b2lid' => $parid,
            's2lid' => $id,
        };

        # help user out a bit, creating the beginning of their layer.
        my $s2 = "layerinfo \"type\" = \"$type\";\n";
        $s2 .= "layerinfo \"name\" = \"\";\n\n";
        my $error;
        unless (LJ::S2::layer_compile($lay, \$error, { 's2ref' => \$s2 })) {
            return $err->("Error setting up &amp; compiling layer: $error");
        }

        # redirect so they can't refresh and create a new layer again
        return BML::redirect('layers.bml');
    }

    # delete
    if ($POST{'action:del'}) {
        return $err->("Account type doesn't permit modifying layers") unless $has_priv;
        my $id = $POST{'id'}+0;
        my $lay = LJ::S2::load_layer($dbr, $id) or return $err->("Non-existant layer");
        return $err->("Not your layer") unless $lay->{'userid'} == $remote->{'userid'};

        unless ($POST{'confirm'}) {
            LJ::S2::load_layer_info($lay, $id);
            my $name = $lay->{'name'} ? "'$lay->{'name'}'" : "#$id";

            $title = "Deleting layer $name";
            $body .= "<form method='post' action='layers.bml'>";
            $body .= LJ::html_hidden('id', $id);
            $body .= LJ::html_hidden('action:del', 'action:del');
              
            $body .= "Are you sure you want to delete $lay->{'type'} layer $name?";
            $body .= "<p>" . LJ::html_submit('confirm', 'Delete') . "</p>\n";;
            $body .= "</form>\n";
            return;
        }

        LJ::S2::delete_layer($id);
        return BML::redirect('layers.bml');
    }

    # show list of layers
    my $ulay = LJ::S2::get_layers_of_user($remote);
    
    $body .= "<?h1 Your Layers h1?>";
    if (%$ulay) {
        $body .= "<table style='margin-bottom: 10px' cellpadding='3' border='1' class='postheading'>";
        $body .= "<tr><td><b>LayerID</b></td><td><b>Type</b></td><td><b>Name</b></td><td><b>Actions</b></td></tr>\n";
        my $lastbase = 0;
        foreach my $lid (sort { $ulay->{$a}->{'b2lid'} <=> $ulay->{$b}->{'b2lid'} || $a <=> $b } 
                         keys %$ulay) 
        {
            my $bid = $ulay->{$lid}->{'b2lid'};
            if ($bid != $lastbase) {
                $lastbase = $bid;
                my $parlay = $ulay->{$bid} || $pub->{$bid};
                my $pname = LJ::ehtml($parlay->{'name'});
                $body .= "<tr><td colspan='4'><small>Child of <a href='layerbrowse.bml?id=$bid'>layer $bid</a>: $pname</small></td></tr>\n";
            }
            my $lay = $ulay->{$lid};
            my $name = LJ::ehtml($lay->{'name'}) || "<i>(none)</i>";
            $body .= "<tr><td><a href='layerbrowse.bml?id=$lid'>$lid</a></td><td>$lay->{'type'}</td><td>$name</td><td>";
            $body .= "<form method='post' style='display:inline' action='layeredit.bml?id=$lid'>";
            $body .= "<input type='submit' name='action:edit' value='Edit...' /></form>\n";
            $body .= "<form method='post' style='display:inline' action='layers.bml'>";
            $body .= LJ::html_hidden('id', $lid);
            $body .= "<input type='submit' name='action:del' value='Delete...' />";
            $body .= "</form>\n";
            $body .= "</td></tr>"
        }
        $body .= "</table>";
    } else {
        $body .= "<?p <i>None</i> p?>";
    }


    # create layer
    $body .= "<?h1 Create Layer h1?>";
    unless ($has_priv) {
        $body .= "<?p Your account type doesn't allow layer creation. p?>";
        return;
    }

    $body .= "<?h2 Create top-level layer h2?>\n";
    $body .= "<form class='postheading' method='post' action='layers.bml'>";
    
    $body .= "Type: " . LJ::html_select({ 'name' => 'type' },
                                        "" => "",
                                        "layout" => "Layout",
                                        "i18nc" => "Language",
                                        );
    $body .= " Core Version: " . LJ::html_select({ 'name' => 'parid' }, 
                                                 map { $_, $pub->{$_}->{'majorversion'} }
                                                 sort { $pub->{$a}->{'name'} cmp $pub->{$b}->{'name'} ||
                                                        $a <=> $b }
                                                 grep { $pub->{$_}->{'b2lid'} == 0 &&
                                                        $pub->{$_}->{'type'} eq 'core' && /^\d+$/}
                                                 keys %$pub) . "\n";
    $body .= LJ::html_submit("action:create", "Create");
    $body .= "</form>\n\n";

    $body .= "<?h2 Create layout-specific layer h2?>\n";
    $body .= "<form class='postheading' method='post' action='layers.bml'>\n";
    $body .= "Type: " . LJ::html_select({ 'name' => 'type' },
                                        "" => "",
                                        "theme" => "Theme",
                                        "i18n" => "Language",
                                        "user" => "User"
                                        ) . "\n";

    my @layouts = ('', '');
    push @layouts, map { $_, $pub->{$_}->{'name'} }
                   sort { $pub->{$a}->{'name'} cmp $pub->{$b}->{'name'} || $a <=> $b}
                   grep { $pub->{$_}->{'type'} eq 'layout' && /^\d+$/} 
                   keys %$pub;
    if (%$ulay) {
        push @layouts, ('', '---');
        push @layouts, map { $_, "$ulay->{$_}->{'name'} (#$_)" } 
                       sort { $ulay->{$a}->{'name'} cmp $ulay->{$b}->{'name'} || $a <=> $b}
                       keys %$ulay;
    }

    $body .= "Layout: " . LJ::html_select({ 'name' => 'parid' }, @layouts);

    $body .= LJ::html_submit("action:create", "Create");
    $body .= "</form>";
    
    return;
}
_code?><?page
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
page?>
    
