<style>
    em.error { font-weight: bold; color: red; font-style: normal; }
    textarea.s2 { width: 100%; height: 80%; display: block; clear: both; padding: 2px; }
</style>
<?_code # -*-bml-*-
{
    use strict;
    use vars qw(%GET %POST);

    my $pub = LJ::S2::get_public_layers();

    my $dbh = LJ::get_db_writer();
    my $remote = LJ::get_remote() or return "Must be logged in.";

    my $id = $GET{'id'}+0 or return BML::redirect('layers.bml');
    my $lay = LJ::S2::load_layer($dbh, $id) or return "Bogus layer";

    my $has_priv = LJ::get_cap($remote, "s2styles");

    unless ($remote && ($remote->{'userid'} == $lay->{'userid'})) {
        return "Unauthorized.";
    }

    my $ret;
    $ret .= "<form method='post' action='layeredit.bml?id=$id'>";
    $ret .= BML::ml('backlink', { 'text' => 'Layers', 'link' => 'layers.bml' });

    my $s2 = $POST{'s2'};
    $s2 = $dbh->selectrow_array("SELECT s2code FROM s2source WHERE s2lid=?",
                                undef, $lay->{'s2lid'}) unless $s2;

    # we tried to compile something
    if ($POST{'action'} eq "compile" && $has_priv) {
        $ret .= "<div style='margin: 20px 0 20px 40px'>\n";
        $ret .= "<b>Compiler Output</b><br />\n";

        my $error;
        unless (LJ::S2::layer_compile($lay, \$error, { 's2ref' => \$POST{'s2'} })) {

            $error =~ s/LJ::S2,.+//s;
            $error =~ s!, .+?(src/s2|cgi-bin)/!, !g;

            $ret .= "Error compiling layer:<pre>$error</pre>";

            # display error with helpful context
            if ($error =~ /^compile error: line (\d+)/i) {
                my $errline = $1;
                my $kill = $errline - 5 < 0 ? 0 : $errline - 5;
                my $prehilite = $errline - 1 > 4 ? 4: $errline - 1;
                my $snippet = $s2;

                # make sure there's a newlilne at the end
                chomp $snippet;
                $snippet .= "\n";

                # and now, fun with regular expressions
                my $ct = 0;
                $snippet =~ s!(.*?)\n!sprintf("%3d", ++$ct) . ": " . 
                    LJ::ehtml($1) . "\n"!ge;                      # add line breaks and numbering

                $snippet =~ s!^((?:.*?\n){$kill,$kill})           # kill before relevant lines
                               ((?:.*?\n){$prehilite,$prehilite}) # captuure context before error
                               (.*?\n){0,1}                       # capture error
                               ((?:.*?\n){0,4})                   # capture context after error
                               .*                                 # kill after relevant lines
                             !$2<em class='error'>$3</em>$4!sx;

                $ret .= "<b>Context</b><br /><pre>$snippet</pre>\n";
            }

        } else {
            $ret .= "No errors\n";
        }
        $ret .= "</div>\n\n";
    }

    my @dis = $has_priv ? () : ( 'disabled' => 'disabled' );
    $ret .= LJ::html_hidden("action", "compile");
    $ret .= LJ::html_submit('submit', 'Compile', { @dis,
                                                   'style' => 'float: right; margin-bottom: 2px' } );
    $ret .= "<b>Edit layer source</b>\n";
    $ret .= "<textarea class='s2' cols='50' name='s2' wrap='off' rows='40'>";
    $ret .= LJ::eall($s2);
    $ret .= "</textarea>\n";
    $ret .= LJ::html_submit('submit', 'Compile', { @dis }) . "</form>\n";

}
_code?>
