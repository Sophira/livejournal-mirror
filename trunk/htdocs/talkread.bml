<?page
body<=
<?_code

 use strict;
 use vars qw($r_head $r_title %GET %ML);

 # make refs to both title and head, that work in cached or non-cached contexts
 # $_[0] is the BML $req object, $_[1] is a pre-request scratch area.
 $r_head = "";
 $r_title = "";
 my $head = $_[1] ? \$_[1]->{'head'} : \$r_head;
 my $title = $_[1] ? \$_[1]->{'title'} : \$r_title;

 $$head .= "
    <script language='Javascript' type='text/javascript'>
    <!--
    var lastDiv;
    lastDiv = 'qrdiv';

    function quickreply(dtid, pid, newsubject) {
        if (! document.getElementById) return true;

        // Mac IE 5.x does not like the replaceChild function!
        // Cannot understand a crash report since it has no useful debug info in it.
        if ((navigator.userAgent.indexOf('Mac') != -1) && (navigator.appName == 'Microsoft Internet Explorer')) return true;

        var ptalkid = document.getElementById('parenttalkid');
        ptalkid.value = pid;

        var rto = document.getElementById('replyto');
        rto.value = pid;

        var subject = document.getElementById('subject');
        subject.value = newsubject;

        var dtid_field = document.getElementById('dtid');
        dtid_field.value = dtid;

        var qr_div = document.getElementById('qrdiv');
        var cur_div = document.getElementById(dtid);

        if (lastDiv == 'qrdiv') {
            qr_div.style.display = 'inline';

            // only one swap
            swapnodes(qr_div, cur_div);
        } else if (lastDiv != dtid) {
              var last_div = document.getElementById(lastDiv);

              // Two swaps
              swapnodes(last_div, cur_div);
              swapnodes(qr_div, last_div);
        }

        lastDiv = dtid;

        var multi_form = document.getElementById('multiform');
        multi_form.action = '/talkpost_do.bml';

        // So it doesn't follow the link
        return false;
    }

    function moreopts()
    {
        var multi_form = document.getElementById('multiform');
        var basepath = document.getElementById('basepath');
        var dtid = document.getElementById('dtid');

        multi_form.action = basepath.value + dtid.value;
        return true;
    }

   function submitform()
   {
        var submit = document.getElementById('submitpost');
        submit.disabled = true;

        var submitmore = document.getElementById('submitmoreopts');
        submitmore.disabled = true;

        var multi_form = document.getElementById('multiform');
        multi_form.submit();
   }

   function swapnodes (orig, to_swap) {
        var parent_node = orig.parentNode;
        var next_sibling = orig.nextSibling;
        to_swap.parentNode.replaceChild(orig, to_swap);
        parent_node.insertBefore(to_swap, next_sibling);
        return true;
   }

   function checkLength() {
        if (!document.getElementById) return true;
        var textbox = document.getElementById('body');
        if (!textbox) return true;
        if (textbox.value.length > 4300) {
             alert('Sorry, but your comment of ' + textbox.value.length + ' characters exceeds the maximum character length of 4300.  Please try shortening it and then post again.');
             return false;
        }
        return true;
   }

    //  -->
    </script>\n";

 return LJ::server_down_html() if $LJ::SERVER_DOWN;

 my $pics = LJ::Talk::get_subjecticons();

 ## workaround mail client bug when don't understand quoted-printable.
 ## Only correct 'journal' if 'itemid' was also broken, to avoid the 
 ## unlikely clash with a journal name.
 if ($GET{'itemid'} =~ s/^3D//) {
     $GET{'journal'} =~ s/^3D//;
     $GET{'thread'} =~ s/^3D//; 
 }

 my $r = Apache->request;
 $r->notes("codepath" => "bml.talkread");

 my $uri = BML::get_uri();
 my $itemid;

 if ($uri =~ m!/(\d+)\.html$!) {
     $itemid = $1;
     $GET{'itemid'} = $itemid;
     $GET{'journal'} = $r->notes("_journal");
     BML::set_language_scope("/talkread.bml");
 }

 # pre-load common strings for little speed and less typing later
 # (we're doing this *after* set_language_scope is called, because
 # two below are relative strings)
 my %T = qw(postcomments   talk.commentpost
            readcomments   talk.commentsread
            parent         talk.parentlink
            thread         talk.threadlink
            replythis      talk.replytothis
            frozen         talk.frozen
            link           talk.commentpermlink
            deleted        .subjectdeleted
            nosubject      .nosubject
            );
 foreach (keys %T) { $T{$_} = $ML{$T{$_}}; }

 my $init = LJ::Talk::init(\%GET);

 my $u = $init->{'journalu'};
 return $ML{'talk.error.nojournal'} unless $u;

 my $ditemid = $init->{'ditemid'}+0;

 # redirect if account was renamed
 if ($u->{'journaltype'} eq "R") {
     LJ::load_user_props($u, "renamedto");
     if ($u->{'renamedto'} ne "") {
         return BML::redirect(LJ::journal_base($u->{'renamedto'}) . "/$ditemid.html");
     }
 }

 # now check for init->error, since we know the account wasn't renamed
 return "<?h1 $ML{'Error'} h1?><?p $init->{'error'} p?>" if $init->{'error'}; 

 LJ::load_user_props($u, "opt_blockrobots") if $u->{'statusvis'} eq 'V';
 if ($u->{'statusvis'} ne 'V' || $u->{'opt_blockrobots'}) {
     $$head .= LJ::robot_meta_tags();
 }

 $r->notes("journalid" => $u->{'userid'});

 my $thread = $init->{'thread'};
 my $dthread = $init->{'dthread'};
 $itemid = $init->{'itemid'}+0;

 my $stylemine = $init->{'style'} eq "mine" ? "style=mine" : "";

 my $item = LJ::Talk::get_journal_item($u, $itemid);

 if ($init->{'oldurl'} && $item) {
     $init->{'anum'} = $item->{'anum'};
     $init->{'ditemid'} = $init->{'itemid'}*256 + $item->{'anum'};
     $ditemid = $init->{'ditemid'} + 0;
 }

 unless ($item && $item->{'anum'} == $init->{'anum'}) {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'talk.error.noentry'} p?>";
 }

 my $jarg = "journal=$u->{'user'}&";
 my $jargent ="journal=$u->{'user'}&amp;";
 my $talkurl = LJ::journal_base($u) . "/$ditemid.html";

 my $ret = "";

 my $props = $item->{'props'};

 ### load users
 my ($up);  # $up = user posted journal item
 LJ::load_userids_multiple([ $item->{'posterid'} => \$up, ], [ $u ]);

 LJ::text_out(\$u->{'name'});

 my $remote = LJ::get_remote();

 # set viewall/viewsome
 my $viewall = 0;
 my $viewsome = 0;
 if ($GET{viewall} && LJ::check_priv($remote, 'canview')) {
     LJ::statushistory_add($u->{'userid'}, $remote->{'userid'}, 
                           "viewall", "entry: $u->{'user'}, itemid: $item->{'itemid'}, statusvis: $u->{'statusvis'}");
     $viewall = LJ::check_priv($remote, 'canview', '*');
     $viewsome = $viewall || LJ::check_priv($remote, 'canview', 'suspended');
 }

 # check for deleted/suspended/security
 unless ($viewsome) {
     # check suspended
     return "<?h1 $ML{'talk.error.suspended.title'} h1?><?p $ML{'talk.error.suspended'} p?>"
         if ($u->{'statusvis'} eq "S" || $up->{'statusvis'} eq "S");

     # check deleted
     return "<?h1 $ML{'talk.error.deleted.title'} h1?><?p $ML{'talk.error.deleted'} p?>"
         if ($u->{'statusvis'} eq "D");
 }

 unless ($viewall) {
     ####  Check security before viewing this post
     my $errtxt;
     return $errtxt unless LJ::Talk::check_viewable($remote, $item, \%GET, \$errtxt);
 }

 my $showmultiform = $remote &&
    ($remote->{'user'} eq $u->{'user'} ||
     $remote->{'user'} eq $up->{'user'} ||
     LJ::can_manage($remote, $u));
 my $multiform_selects = 0;  # are there select boxes?  don't show form if not.

 my $event = $item->{'event'};

 LJ::expand_embedded($u, $ditemid, $remote, \$event);
 LJ::CleanHTML::clean_event(\$event, $props->{'opt_preformatted'});
 BML::ebml(\$event);

 # make the title
{
    my $subject = $item->{'subject'} || $event;
    LJ::CleanHTML::clean_subject_all(\$subject);
    $subject =~ s/\n.*//s;
    # yes, the 3 param to text_trim is chars, and length returns bytes, but
    # it works, as bytes >= chars:
    $subject = LJ::text_trim($subject, 0, length($item->{'subject'}) || 40);
    $$title = "$u->{'user'}: $subject";
}

 $ret .= "<p>";
 $ret .= "<table><tr valign='middle'>";

 my $picid = LJ::get_picid_from_keyword($up, $props->{'picture_keyword'});

 my %userpics;
 if ($picid) {
     LJ::load_userpics(\%userpics, [ $picid ]);
     my $alt = $up->{'name'};
     if ($props->{'picture_keyword'}) {
         $alt .= ": $props->{'picture_keyword'}";
     }
     LJ::text_out(\$alt);
     $alt = LJ::ehtml($alt);
     $ret .= "<td><img src='$LJ::USERPIC_ROOT/$picid/$up->{'userid'}' width='$userpics{$picid}->{'width'}' ".
         "height='$userpics{$picid}->{'height'}' align='absmiddle' ".
         "hspace='3' title='$alt' alt=''></td>";
 }

 $ret .= "<td>";
 my $is_shared = $u->{'journaltype'} eq 'C' || $u->{'journaltype'} eq 'S';
 if ($is_shared) {
     $ret .= BML::ml("talk.somebodywrote_comm", { 'realname' => LJ::ehtml($up->{'name'}),
                                                  'userlink' => LJ::ljuser($up),
                                                  'commlink' => LJ::ljuser($u) });
 } else {
     $ret .= BML::ml("talk.somebodywrote", { 'realname' => LJ::ehtml($up->{'name'}),
                                             'userlink' => LJ::ljuser($up) });
 }

 my $etime = $item->{'eventtime'};
 $etime =~ s!(\d\d\d\d)-(\d\d)-(\d\d)!LJ::date_to_view_links($u, $&)!e;
 $ret .= "<br /><font size='-1'>@ $etime</font>";
 $ret .= "</td></tr></table>";

 ## standout bar
 $ret .= LJ::Talk::link_bar({ 'u' => $u, 'up' => $up, 'headref' => $head,
                              'remote' => $remote, 'itemid' => $ditemid, });

 ## dump the log entry, unless we're browsing a thread.
 my %current;
 if ($props->{'current_mood'} || $props->{'current_moodid'}) {
     $current{'Mood'} = LJ::current_mood_str($up->{'moodthemeid'},
                                             $props->{'current_moodid'},
                                             $props->{'current_mood'});
 }
 if ($props->{'current_music'}) {
     $current{'Music'} = LJ::current_music_str($props->{'current_music'});
 }

 $ret .= "<div style='margin-left: 30px'>";

 if (%current) 
 {
     $ret .= "<table border=0>\n";
     foreach (sort keys %current) {
         my $curkey = "talk.curname_" . $_;
         my $curname = BML::ml($curkey);
         $curname = "<b>Current $_:</b>" unless $curname;
         $ret .= "<tr><td align=right>$curname</td><td>$current{$_}</td></tr>\n";
     }
     $ret .= "</table><p>\n";
 }

 ### security indicator
 my $sec = "";
 if ($item->{'security'} eq "private") {
     $sec = BML::fill_template("securityprivate");
 } elsif ($item->{'security'} eq "usemask") {
     $sec = BML::fill_template("securityprotected");
 }

 $sec .= "<br />\n" unless $sec eq "" or $item->{'subject'};
 $ret .= $sec;

 ###
 if ($item->{'subject'}) {
     my $subject = $item->{'subject'};
     LJ::CleanHTML::clean_subject(\$subject);
     BML::ebml(\$subject);
     $ret .= "<font face='Arial,Helvetica' size='+1'><i><b>$subject</b></i></font><br />\n";
 }

 $ret .= $event;
 $ret .= "</div>";

 $ret .= "<br clear='all' /><hr width='100%' size='2' align='center' />";

 my %user;
 my $opts = {
     'thread' => $thread,
     'page' => $GET{'page'},
     'view' => $GET{'view'},
     'userpicref' => \%userpics,
     'userref' => \%user,
     'up' => $up,
     'viewall' => $viewall,
 };

 my @comments = LJ::Talk::load_comments($u, $remote, "L", $itemid, $opts);
 return $ML{'error.nodbmaintenance'} if $opts->{'out_error'} eq "nodb";

 my $page = $opts->{'out_page'};
 my $pages = $opts->{'out_pages'};

 ########## make the navcrap
 my $navcrap;
 $navcrap .= "<a name='comments'></a>";
 if ($pages > 1) {
     $navcrap .= "<table style='font-weight: bold'>";
     $navcrap .= "<tr><td align='center' colspan='3'>";
     $navcrap .= BML::ml('ljlib.pageofpages',{'page'=>$page, 'total'=>$pages});
     $navcrap .= "</td></tr>";
     my $left = "&lt;&lt;";
     if ($page > 1) { $left = "<a href='" . BML::self_link({ 'page' => $page-1 }) . "#comments'>$left</a>"; }

     my $right = "&gt;&gt;";
     if ($page < $pages) { $right = "<a href='" . BML::self_link({ 'page' => $page+1 }) . "#comments'>$right</a>"; }

     $navcrap .= "<tr><td style='font-size: 85%' align='center'>$left</td><td style='font-size: 85%' align='center'>";

     for (my $i=1; $i<=$pages; $i++) {
         my $link = "[$i]";
         if ($i != $page) { $link = "<a href='" . BML::self_link({ 'page' => $i }) . "#comments'>$link</a>"; }
         else { $link = "<span style='font-size: 130%; font-weight: bolder'>$link</span>"; }
         $navcrap .= "$link ";
         if ($i == 11)  { $navcrap .= "<br />"; }
         elsif ($i > 10 && $i % 10 == 0) { $navcrap .= "<br />"; }
     }

     $navcrap .= "</td><td style='font-size: 85%' align='center'>$right</td></tr>";
     $navcrap .= "</table>\n";
     $navcrap = BML::fill_template("standout", { 'DATA' => $navcrap });
 }
 ####### end navcrap

 # Quick reply variables.  Not always set.
 my ($qr_jid, $qr_talkid);

 my $recurse_post = sub
 {
     my ($self_sub, $post, $opts) = @_;

     $opts ||= { 'depth' => 0 };

     my $tid = $post->{'talkid'};
     my $dtid = $tid * 256 + $init->{'anum'};
     my $datepost = "<font size='-1'>" . substr($post->{'datepost'}, 0, 16) . "</font>";

     my $bgcolor = ($opts->{'depth'} % 2) ? "emcolorlite" : "emcolor";
     $bgcolor = BML::get_template_def($bgcolor);
     if ($post->{'state'} eq "S") {
         $bgcolor = BML::get_template_def("screenedbarcolor") || $bgcolor;
     } elsif ($qr_talkid == $dtid && $qr_jid == $u->{'userid'}) {
         $bgcolor = BML::get_template_def("altcolor1");
     }

     my $pu = $post->{'posterid'} ? $user{$post->{'posterid'}} : undef;
     my $userpost = $post->{'userpost'};
     my $user;
     if ($post->{'props'}->{'deleted_poster'}) {
         $user = BML::ml('.deleteduser', {'username'=>$post->{'deleted_poster'}});
     }
     else {
         $user = $ML{'.anonuser'};
     }

     if ($post->{'state'} eq "D") {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         $ret .= "<td>$ML{'.deletedpost'}</td></tr></table>\n";
     } elsif ($post->{'state'} eq "S" && !$post->{'_loaded'} && !$post->{'_show'}) {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         my $screenedtext = $ML{'.screenedpost'};
         $ret .= "<td>$screenedtext</td></tr></table>\n";
     } elsif ($pu && $pu->{'statusvis'} eq "S" && !$viewsome) {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         $ret .= "<td>$ML{'.replysuspended'}";
         if (LJ::Talk::can_delete($remote, $u, $up, $userpost)) {
             $ret .= " <a href='/delcomment.bml?${jargent}id=$dtid'>" . LJ::img("btn_del", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
         }
         if ($post->{state} ne 'F' && LJ::Talk::can_freeze($remote, $u, $up, $userpost)) {
             $ret .= "<a href='/talkscreen.bml?mode=freeze&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_freeze", "", { align => 'absmiddle', hspace => 2, vspace => }) . "</a>";
         }
         if ($post->{state} eq 'F' && LJ::Talk::can_unfreeze($remote, $u, $up, $userpost)) {
             $ret .= "<a href='/talkscreen.bml?mode=unfreeze&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_unfreeze", "", { align => 'absmiddle', hspace => 2, vspace => }) . "</a>";
         }
         $ret .= "</td></tr></table>\n";
     } else {
         if ($userpost) {
             $user = LJ::ljuser($userpost, { type => 'P' });
         }
         my $icon = LJ::Talk::show_image($pics, $post->{'props'}->{'subjecticon'});

         if ($post->{'_loaded'}) {
             $ret .= "<a name='t$dtid'></a><table width='100%' class='talk-comment'><tr>";
             $ret .= "<td rowspan='2'><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
             $ret .= "<td bgcolor='$bgcolor' width='100%'>";
             if (my $picid = $post->{'picid'}) {
                 my $alt = $pu->{'name'};
                 if ($post->{'props'}->{'picture_keyword'}) {
                     $alt .= ": $post->{'props'}->{'picture_keyword'}";
                 }
                 $alt = LJ::ehtml($alt);
                 my ($w, $h) = ($userpics{$picid}->{'width'}, $userpics{$picid}->{'height'});
                 $ret .= "<img align='left' hspace='3' src='$LJ::USERPIC_ROOT/$picid/$post->{'posterid'}'";
                 $ret .= " width='$w' title='$alt' alt='' height='$h' />";
             }

             my $cleansubject = LJ::ehtml($post->{'subject'});
             $ret .= "<font size='+1' face='Arial,Helvetica'><b>$cleansubject</b></font> $icon";
             $ret .= "<br />$user\n";
             $ret .= "<br />$datepost\n";
             if ($post->{'props'}->{'poster_ip'} && $remote &&
                 ($remote->{'user'} eq $up->{'user'} ||
                  LJ::can_manage($remote, $u)))
             {
                 $ret .= BML::ml('.fromip', {'ip'=>$post->{'props'}->{'poster_ip'}});
             }
             
             $ret .= " <font size='-1'>(<a href='" . LJ::Talk::talkargs($talkurl, "thread=$dtid") . "#t$dtid'>$T{'link'}</a>)</font> ";
             
             if (LJ::Talk::can_delete($remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/delcomment.bml?${jargent}id=$dtid'>" . LJ::img("btn_del", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }

             if ($post->{'state'} ne 'F' &&
                 LJ::Talk::can_freeze($remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=freeze&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_freeze", "", { align => 'absmiddle', hspace => 2, vspace => }) . "</a>";
             }

             if ($post->{'state'} eq 'F' &&
                 LJ::Talk::can_unfreeze($remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=unfreeze&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_unfreeze", "", { align => 'absmiddle', hspace => 2, vspace => }) . "</a>";
             }

             if ($post->{'state'} ne 'S' && 
                 LJ::Talk::can_screen($remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=screen&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_scr", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }
             
             if ($post->{'state'} eq 'S' && 
                 LJ::Talk::can_unscreen($remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=unscreen&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_unscr", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }

             if ($showmultiform) {
                 $ret .= " <nobr><input type='checkbox' name='selected_$tid' id='s$tid' />";
                 $ret .= " <label for='s$tid'>$ML{'.select'}</label></nobr>";
                 $multiform_selects = 1;
             }

             $ret .= "<br /><b>$ML{'.posted'}</b>"
                 if $qr_talkid == $dtid && $qr_jid == $u->{'userid'};

             $ret .= "</td></tr><tr><td>";

             LJ::CleanHTML::clean_comment(\$post->{'body'}, $post->{'props'}->{'opt_preformatted'});
             BML::ebml(\$post->{'body'});
             $ret .= $post->{'body'};

             $ret .= "<p style='margin: 0.7em 0 0.2em 0'><font size='-2'>";

             my $replyurl = LJ::Talk::talkargs($talkurl, "replyto=$dtid", $stylemine);
             if ($post->{'state'} eq 'F') {
                 $ret .= "($T{'frozen'}) ";
             } elsif ($remote) {
                 my $pid = int($dtid / 256);
                 my $basesubject = $post->{'subject'};
                 $basesubject =~ s/^(Re:\s*)*//i;
                 $basesubject = "Re: $basesubject" if $basesubject;
                 $basesubject = LJ::ejs($basesubject);

                 my $onclick = "return quickreply($dtid, $pid, '$basesubject')";
                 $onclick = LJ::ehtml($onclick);

                 $ret .= "(<a onclick='$onclick' href='$replyurl' >$T{'replythis'}</a>) ";
             } else {
                 $ret .= "(<a href='$replyurl'>$T{'replythis'}</a>) ";
             }

             if ($post->{'parenttalkid'} != 0) {
                 my $dpid = $post->{'parenttalkid'} * 256 + $init->{'anum'};
                 $ret .= "(<a href='" . LJ::Talk::talkargs($talkurl, "thread=$dpid", $stylemine) . "#t$dpid'>$T{'parent'}</a>) ";
             }
             if ($post->{'children'} && @{$post->{'children'}}) {
                 my $url = LJ::Talk::talkargs($talkurl, "thread=$dtid", $stylemine) . "#t$dtid";
                 $ret .= "(<a href='$url'>$T{'thread'}</a>)";
             }
             $ret .= "</font></p>";

             $ret .= "<div name='$dtid' id='$dtid'></div>" if $remote;

             $ret .= "</td></tr></table>\n";  # close colored table
         } else {
             # link to message

             $ret .= "<a name='t$dtid'></a><table><tr>";
             $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
             $ret .= "<td><a href='" . LJ::Talk::talkargs($talkurl, "thread=$dtid", $stylemine) . "#t$dtid'>" . LJ::ehtml($post->{'subject'} || $T{'nosubject'}) . "</a> - $user, <i>$post->{'datepost'}</i></td></tr></table>\n";
         }
     }
     
     if ($post->{'children'}) {
         foreach my $childpost (@{$post->{'children'}}) {
             $self_sub->($self_sub, $childpost, { "depth" => $opts->{'depth'} + 1});
         }
     } 
 };

 unless ($props->{'opt_nocomments'} or $u->{'opt_showtalklinks'} eq "N")
 {
     $ret .= "$navcrap" if $navcrap;
     my $readlink;
     if ($dthread && $pages == 1) {
         my $readurl = LJ::Talk::talkargs($talkurl, $stylemine);
         $readlink = "(<a href='$readurl#comments'>$T{'readcomments'}</a>) - ";
     }

     my $posturl = LJ::Talk::talkargs($talkurl, "mode=reply", $stylemine);

     $ret .= "<p align='center' class='lesstop'><b>$readlink(<a href='$posturl'>$T{'postcomments'}</a>)</b></p>";

     if (@comments > 0)
     {
         $ret .= "<form style='display: inline' method='post' action='/talkmulti.bml' name='multiform' id='multiform' >";
         $ret .= LJ::html_hidden("ditemid", $ditemid);
         $ret .= LJ::html_hidden("journal", $u->{'user'});

         # Do Quick Reply stuff
         LJ::load_user_props($remote, "opt_no_quickreply") if $remote;
         if ($remote && !$remote->{'opt_no_quickreply'}) {
             my $basepath = LJ::journal_base($u) . "/$ditemid.html?replyto=";;
             $ret .= LJ::html_hidden({'name' => 'replyto', 'id' => 'replyto', 'value' => ''},
                                     {'name' => 'parenttalkid', 'id' => 'parenttalkid', 'value' => ''},
                                     {'name' => 'itemid', 'id' => 'itemid', 'value' => $ditemid},
                                     {'name' => 'usertype', 'id' => 'usertype', 'value' => 'cookieuser'},
                                     {'name' => 'userpost', 'id' => 'userpost', 'value' => $remote->{'user'}},
                                     {'name' => 'qr', 'id' => 'qr', 'value' => '1'},
                                     {'name' => 'cookieuser', 'id' => 'cookieuser', 'value' => $remote->{'user'}},
                                     {'name' => 'dtid', 'id' => 'dtid', 'value' => ''},
                                     {'name' => 'basepath', 'id' => 'basepath', 'value' => $basepath},
                                  );

             # rate limiting challenge
             {
                 my ($time, $secret) = LJ::get_secret();
                 my $rchars = LJ::rand_chars(20);
                 my $chal = $opts->{ditemid} . "-$u->{userid}-$time-$rchars";
                 my $res = Digest::MD5::md5_hex($secret . $chal);
                 $ret .= LJ::html_hidden("chrp1", "$chal-$res");
             }

             $ret .= "<div id='qrdiv' name='qrdiv' style='display:none;'>";
             $ret .= "<table style='border: 1px solid black'>";
             $ret .= "<tr valign='center'>";
             $ret .= "<td align='right'><b>$ML{'/talkpost.bml.opt.from'}</b></td><td>";
             $ret .= LJ::ljuser($remote->{'user'});
             $ret .= "</td><td align='center'>";

             my %res;
             if ($remote) {
                 LJ::do_request({ "mode" => "login",
                                  "ver" => ($LJ::UNICODE ? "1" : "0"),
                                  "user" => $remote->{'user'},
                                  "getpickws" => 1,
                              }, \%res, { "noauth" => 1, "userid" => $remote->{'userid'} });
               }
             if ($res{'pickw_count'}) {
                 $ret .= BML::ml('/talkpost.bml.label.picturetouse',{'username'=>$remote->{'user'}});
                 my @pics;
                 for (my $i=1; $i<=$res{'pickw_count'}; $i++) {
                     push @pics, $res{"pickw_$i"};
                 }
                 @pics = sort { lc($a) cmp lc($b) } @pics;
                 $ret .= LJ::html_select({'name' => 'prop_picture_keyword',
                                          'selected' => $GET{'prop_picture_keyword'}, },
                                         ("", $BML::ML{'/talkpost.bml.opt.defpic'}, map { ($_, $_) } @pics));
                 $ret .= LJ::help_icon("userpics", " ");
             }
             $ret .= "</td></tr>";

             $ret .= "<tr><td align='right'>";
             $ret .= "<b>$ML{'/talkpost.bml.opt.subject'}</b></td>";
             $ret .= "<td colspan='2'>";
             $ret .= "<input class='textbox' type='text' size='50' maxlength='100' name='subject' id='subject' value='' />";
             $ret .= "</td></tr>";

             $ret .= "<tr valign='top'>";
             $ret .= "<td align='right'><b>$ML{'/talkpost.bml.opt.message'}</b></td>";
             $ret .= "<td colspan='3' style='width: 90%'>";

             $ret .= "<textarea class='textbox' rows='10' cols='50' wrap='soft' name='body' id='body' style='width: 100%'></textarea>";
             $ret .= "</td></tr>";

             $ret .= "<tr><td>&nbsp;</td>";
             $ret .= "<td colspan='3'>";

             $ret .= LJ::html_submit('submitpost', $ML{'.button.post'},
                                     { "id" => "submitpost",
                                       "raw" => "onclick='if (checkLength()) {submitform();}'"
                                       });

             $ret .= "&nbsp;" . LJ::html_submit('submitmoreopts', $ML{'.button.more'},
                                                { "id" => "submitmoreopts",
                                                  "raw" => "onclick='if (moreopts()) {submitform();}'"
                                                  });
             if ($LJ::SPELLER) {
                 $ret .= "&nbsp;<input type='checkbox' name='do_spellcheck' value='1' id='spellcheck' /> <label for='spellcheck'>$ML{'.qr.spellcheck'}</label>";
             }

             $ret .= "</td></tr></table>";
             $ret .= "</div>";

             # Figure out their last quick reply post
             my $memkey = [$remote->{'userid'}, "lastcomm:$remote->{'userid'}"];
             my $memval = LJ::MemCache::get($memkey);
             ($qr_jid, $qr_talkid) = split(/:/, $memval) if $memval;
         }

         $recurse_post->($recurse_post, $_, { "depth" => 0 }) foreach (@comments);

         $ret .= "<hr /><p class='lesstop' align='center'><b>$readlink(<a href='$posturl'>$T{'postcomments'}</a>)</b></p>";

         if ($showmultiform && $multiform_selects) {
             $ret .= "<p>$ML{'.talkmulti.des'} ";
             $ret .= LJ::html_select({'name' => 'mode' },
                                     "" => "",
                                     "unscreen" => $ML{'.talkmulti.unscreen'},
                                     "screen" => $ML{'.talkmulti.screen'},
                                     "delete" => $ML{'.talkmulti.delete'});
             $ret .= " " . LJ::html_submit('', $ML{'.talkmulti.submit'},
                                    { "onclick" => "return (document.multiform.mode.value != \"delete\") " .
                                                   "|| confirm(\"" . LJ::ejs($ML{'.confirm.action'}) . "\");" });
             $ret .= "</p>";
         }
         $ret .= "</form>";

     }
     if ($navcrap) {
         $ret .= "<p>$navcrap</p>";
     }
 }

 BML::noparse();
 return $ret;

_code?>
<=body
windowtitle=><?_code return $_[1] ? $_[1]->{'title'} : $r_title _code?>
head=><?_code return $_[1] ? $_[1]->{'head'} : $r_head _code?>
page?><?_c <LJDEP>
link: htdocs/talkpost.bml, htdocs/talkread.bml, htdocs/delcomment.bml
img: htdocs/img/dot.gif, htdocs/img/delcomment.gif
</LJDEP> _c?>
