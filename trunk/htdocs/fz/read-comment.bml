(=_INFO
NOCACHE=>1
_INFO=)
(=_CODE

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my ($sth, $ret);

 my $talkid = $FORM{'talkid'}+0;
 unless ($talkid) {
     return "(=H1 Error H1=)(=P No talkid given. P=)";
 }

 my $sth = $dbh->prepare("SELECT d.nodeid as itemid, u.user as userpost, d.datepost, d.parenttalkid, t.subject, t.body, d.state FROM talk as d, talktext as t LEFT JOIN user u ON u.userid=d.posterid WHERE d.talkid=$talkid AND d.talkid=t.talkid");
 $sth->execute;
if ($dbh->err) { die $dbh->errstr; }
 my $ti = $sth->fetchrow_hashref;
 unless ($ti) {
     return "(=H1 Error H1=)(=P No such comment. P=)";
 }

 my $qitemid = $ti->{'itemid'}+0;
 $sth = $dbh->prepare("SELECT l.ownerid, l.posterid, lt.event, lt.subject, l.eventtime, l.security, l.allowmask, UNIX_TIMESTAMP()-UNIX_TIMESTAMP(l.logtime) AS 'secondsold' FROM log l, logtext lt WHERE l.itemid=lt.itemid AND l.itemid=$qitemid");
 $sth->execute;
if ($dbh->err) { die $dbh->errstr; }
 my $item = $sth->fetchrow_hashref;
 unless ($item) {
     return "(=H1 Error H1=)(=P No such entry. P=)";
 }

 ### load user who commented
 my $quserpost = $dbh->quote($ti->{'userpost'});
 $sth = $dbh->prepare("SELECT * FROM user WHERE user=$quserpost");
 $sth->execute;
 my $uc = $sth->fetchrow_hashref; 

 ### load users
 $sth = $dbh->prepare("SELECT * FROM user WHERE userid IN ($item->{'ownerid'}, $item->{'posterid'})");
 $sth->execute;
 my ($u, $up);
 my $quser;
 while ($_ = $sth->fetchrow_hashref) {
     if ($_->{'userid'} == $item->{'ownerid'})  { 
         $u  = $_; 
         $quser = $dbh->quote($u->{'user'});
     }
     if ($_->{'userid'} == $item->{'posterid'}) { $up = $_; }
 }

 my $remote;
 if ($item->{'security'} ne "public") 
 {
     $remote = LJ::get_remote($dbs);
     
     if ($item->{'security'} eq "private" && $u->{'user'} ne $remote->{'user'}) {
         return "(=H1 Error H1=)(=P You are not authorized to view this private entry. P=)";
     }
     
     if ($item->{'security'} eq "usemask" && $u->{'user'} ne $remote->{'user'}) {
         $sth = $dbh->prepare("SELECT groupmask FROM friends WHERE userid=$u->{'userid'} AND friendid=$remote->{'userid'}");
         $sth->execute;
         my ($gmask) = $sth->fetchrow_array;
         my $allowed = (int($gmask) & int($item->{'allowmask'}));
         
         unless ($allowed) {
             return "(=H1 Error H1=)(=P You are not authorized to view this protected entry. P=)";
         }
     }
 }

 my $newimg = "";
 my $datepost = "<FONT SIZE=-1>" . substr($ti->{'datepost'}, 0, 16) . "</FONT>";
 my $userpost = $ti->{'userpost'};
 my $user = "<I>(Anonymous)</I>";

 if ($ti->{'state'} eq "D") {
     $ret .= "<P><B>(Deleted post)</B>";
 } elsif ($userpost && $user{$userpost}->{'statusvis'} eq "S") {
     $ret .= "<P><B>(Reply from suspended user)</B>";
 } else {

     if ($userpost) {
         $user = "<B><A HREF=\"/users/$userpost/\">$userpost</A></B> <A HREF=\"/userinfo.bml?user=$userpost\"><IMG BORDER=0 SRC=\"/img/userinfo.gif\" WIDTH=17 HEIGHT=17 ALIGN=ABSMIDDLE></A>";
     }
     $ret .= "<P><TABLE WIDTH=100%><TR>";
     $ret .= "<TD ROWSPAN=2><IMG SRC=\"/img/dot.gif\" HEIGHT=1 WIDTH=" . ($opts->{'depth'} * 25) . "></TD>";
     $ret .= "<TD BGCOLOR=#C0C0FF WIDTH=100%>";
     if ($userpost && $uc->{'defaultpicid'}) {
         my $picid = $uc->{'defaultpicid'};
         my %userpics;
         LJ::load_userpics($dbs, \%userpics, [ $picid ]);
         $ret .= "<IMG ALIGN=LEFT HSPACE=3 SRC=\"/userpic/$picid\"";
         $ret .= " WIDTH=$userpics{$picid}->{'width'}";
         $ret .= " HEIGHT=$userpics{$picid}->{'height'}>";
     }
     
     
     $ret .= "<FONT SIZE=+1 FACE=\"Arial,Helvetica\"><B>" . LJ::ehtml($ti->{'subject'} || "(no subject)") . "</B></FONT>";
     $ret .= "<BR>$user";
     
     if ($BMLClient::COOKIE{"ljuser"}) {
         if ($BMLClient::COOKIE{"ljuser"} eq $userpost ||
             $BMLClient::COOKIE{"ljuser"} eq $u->{'user'})
         {
             $ret .= "<A HREF=\"/delcomment.bml?id=$id\"><IMG ALIGN=ABSMIDDLE HSPACE=2 VSPACE=2 SRC=\"/img/delcomment.gif\" WIDTH=22 HEIGHT=20 ALT=\"Click to delete\" BORDER=0></A>";
         }
     }
     
     $ret .= "</TD></TR>";
     $ret .= "<TR><TD>\n";
     
     ## escape BML block codes.  so (=TAG ... TAG=) turns into (&#0061; ... TAG=)
     $ti->{'body'} =~ s/\(=/\(&#0061;/g;
     LJ::CleanHTML::clean_comment(\$ti->{'body'});	
     $ret .= $ti->{'body'};
     
     $ret .= "<P><FONT SIZE=-2><A HREF=\"/talkpost.bml?replyto=$talkid\">(Reply to this)</A></FONT>";
     $ret .= "</TD></TR></TABLE>\n";  # close colored table
 }
 
 
LJ::strip_bad_code(\$ret);
return $ret;

_CODE=)(=_C <LJDEP>
link: htdocs/userinfo.bml, htdocs/delcomment.bml, htdocs/talkpost.bml
link: htdocs/users
img: htdocs/img/dot.gif, htdocs/img/userinfo.gif, htdocs/img/delcomment.gif
img: htdocs/userpic
</LJDEP> _C=)
