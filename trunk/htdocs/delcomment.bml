(=_INFO
NOCACHE=>1
_INFO=)(=PAGE
TITLE=>Delete Comment
BODY<=

(=_CODE

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my $ret = "";

 my $remote = LJ::get_remote($dbs);

 unless ($remote) {
     return "(=H1 Error H1=)(=P You must be logged in to delete a comment. P=)";
 }

 my $qid = $FORM{'id'}+0;

 my ($clustered, $dbcm) = (0, $dbh);
 my $u;
 if ($FORM{'journal'}) {
     $u = LJ::load_user($dbs, $FORM{'journal'});
     return "(=H1 Error H1=)(=P Bogus journal arg P=)" unless $u;
     $clustered = 1;
     $dbcm = LJ::get_cluster_master($u);
 }

 ### get some info about the comment being deleted ... which journal entry is it about?
 ### and if it's being deleted, is it authorized to be deleted by this user?
 my $tp;
 if ($clustered) {
     $qid = int($qid / 256);  # public ID (with anum) for consistency
     $tp = $dbcm->selectrow_hashref("SELECT jtalkid AS 'talkid', nodetype, state, nodeid AS 'itemid', ".
                                    "parenttalkid, journalid, posterid FROM talk2 ".
                                    "WHERE journalid=$u->{'userid'} AND jtalkid=$qid");
 } else {
     $tp = $dbh->selectrow_hashref("SELECT talkid, nodetype, state, nodeid AS 'itemid', ".
                                   "parenttalkid, journalid, posterid FROM talk ".
                                   "WHERE talkid=$qid");
 }
 unless ($tp) {
     return "(=H1 Error H1=)(=P The comment doesn't even exist... P=)";
 }
 if ($tp->{'state'} eq "D") {
     return "(=H1 Error H1=)(=P This comment has already been deleted. P=)";
 }

 $u ||= LJ::load_userid($dbs, $tp->{'journalid'});
 return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

 if ($tp->{'posterid'}) {
     $tp->{'userpost'} = LJ::get_username($dbs, $tp->{'posterid'});
 }

 my $qitemid = $tp->{'itemid'}+0;

 # the poster of a comment or the journal owner can delete a comment
 my $can_delete = ($tp->{'journalid'} == $remote->{'userid'} ||
                   $tp->{'posterid'} == $remote->{'userid'});

 # or, a community admin can:
 unless ($can_delete) {
     my $journal = LJ::get_username($dbs, $tp->{'journalid'});
     $can_delete = 1 if LJ::check_priv($dbs, $remote, "sharedjournal", $journal);
 }

 # or, for a journal item (nodetype == "L"), the poster can delete it,
 # if this happens to be in a community journal (so the
 # $tp->{'journlaid'} would have been the community id)
 if (! $can_delete && $tp->{'nodetype'} eq "L") {
     my $posterid;
     if ($clustered) {
         $posterid = $dbcm->selectrow_array("SELECT posterid FROM log2 WHERE ".
                                            "journalid=$u->{'userid'} AND jitemid=$qitemid");
     } else {
         $posterid = $dbh->selectrow_array("SELECT posterid FROM log WHERE itemid=$qitemid");
     }
     $can_delete = 1 if ($posterid == $remote->{'userid'});
 }

 unless ($can_delete) {
     return "(=H1 Error H1=)(=P A comment may only be deleted by the journal owner or the one who posted it. (pid=$tp->{'posterid'}; jid=$tp->{'journalid'}; ruid=$remote->{'userid'}) P=)";
 }

 unless ($FORM{'confirm'} eq "Y") {
     $ret .= "(=H1 Delete this comment? H1=)(=P Are you sure you want to delete this comment? P=)";
     $ret .= "<P><FORM METHOD=POST ACTION=\"delcomment.bml\"><CENTER>\n";
     $ret .= "<INPUT TYPE=HIDDEN NAME=id VALUE=\"$FORM{'id'}\">\n";
     $ret .= "<input type='hidden' name='journal' value='$u->{'user'}'>\n" if $clustered;
     $ret .= "<INPUT TYPE=HIDDEN NAME=confirm VALUE=\"Y\">\n";
     $ret .= "<INPUT TYPE=SUBMIT VALUE=\"Yes, delete it!\">";
     $ret .= "</CENTER>";
     if ($tp->{'posterid'} &&
         $tp->{'posterid'} != $remote->{'userid'} &&
         $remote->{'userid'} == $tp->{'journalid'}) {
         $ret .= "<P><INPUT TYPE=CHECKBOX NAME=\"ban\"> And also ban user <B>$tp->{'userpost'}</B> from ever commenting again.";
     }
     if ($remote->{'userid'} == $tp->{'journalid'}) {
         $ret .= "<P><B>Note:</B> From the <A HREF=\"/editinfo.bml\">Edit Personal Info & Settings</A> page you can choose whether to allow <I>all</I>, <I>registered users</I>, or <I>friends only</I> to post.";
     }
     $ret .= "</FORM>\n";
     return $ret;
 }

 if ($clustered) {
     my $jid = $u->{'userid'};
     LJ::delete_talkitem($dbcm, $jid, $qid, "LIGHT");
     if ($tp->{'nodetype'} eq "L") {
         $dbcm->do("UPDATE log2 SET replycount=replycount-1 WHERE ".
                   "journalid=$jid AND jitemid=$tp->{'itemid'}");
     }
 } else {
     $dbh->do("UPDATE talk SET state='D' WHERE talkid=$qid");
     $dbh->do("UPDATE talktext SET subject=NULL, body=NULL WHERE talkid=$qid");
     $dbh->do("DELETE FROM talkprop WHERE talkid=$qid");
     if ($tp->{'nodetype'} eq "L") {
         LJ::query_buffer_add($dbh, "log", "UPDATE log SET replycount=replycount-1 WHERE itemid=$qitemid");
     }
 }

 # ban the user, if selected
 my $and;
 if ($FORM{'ban'})
 {
     $dbh->do("REPLACE INTO ban (userid, banneduserid) VALUES ($remote->{'userid'}, $tp->{'posterid'})");
     $and .= "Additionally, user <B>$tp->{'userpost'}</B> has been banned from commenting in your journal.";
 }

 $ret .= "(=H1 Deleted H1=)(=P The comment has been deleted. $and P=)";
 $ret .= $dbh->errstr;
 return $ret;

_CODE=)

<=BODY
PAGE=)(=_C <LJDEP>
link: htdocs/editinfo.bml
post: htdocs/delcomment.bml
</LJDEP> _C=)
