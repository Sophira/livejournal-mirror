<?page
title=><?_ml .title _ml?>
body<=

<?_code

 use strict;
 use vars qw($head %FORM %ML);

 $head = "";  # not local, used to build <link> tags

 return LJ::server_down_html() if $LJ::SERVER_DOWN;

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};
 my ($sth, $sql);
 my $errtxt;

 my $pics = LJ::Talk::get_subjecticons();

 my $r = Apache->request;

my $uri = BML::get_uri();
my ($urly, $urlm, $urld, $itemid);
if ($uri =~ m!/(\d\d\d\d)/(\d\d)/(\d\d)/(\d+)$!) {
    ($urly, $urlm, $urld, $itemid) = ($1, $2, $3, $4);
    $FORM{'itemid'} = $itemid;
    $FORM{'journal'} = $r->notes("_journal");
    BML::set_language_scope("/talkpost.bml");
}

 my $init = LJ::Talk::init($dbs, \%FORM);
 my $u = $init->{'journalu'};

 $r->notes("journalid" => $u->{'userid'});

 return "<?h1 $ML{'Error'} h1?><?p $init->{'error'} p?>" if $init->{'error'}; 
 return $ML{'talk.error.nojournal'} unless $u;
 return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

 my $clustered = $init->{'clustered'};

 my ($dbcs, $dbcm, $dbcr) = ($dbs, $dbh, $dbr);
 if ($clustered) {
     $dbcs = LJ::get_cluster_set($u);
     $dbcm = $dbcs->{'dbh'};
     $dbcr = $dbcs->{'reader'};
 }

 return $ML{'error.nodb'} unless $dbcr && $dbr;
 return $LJ::MSG_READONLY_USER unless $dbcm && $dbh;

 # redirect if account was renamed
 if ($u->{'journaltype'} eq "R") {
     LJ::load_user_props($dbs, $u, "renamedto");
     if ($u->{'clusterid'} && $u->{'renamedto'} ne "") {
         my $id = $FORM{'itemid'}+0;
         return BML::redirect("$LJ::SITEROOT/talkpost.bml?journal=$u->{'renamedto'}&itemid=$id");
     }
 }


 my $ret = "";

 my $parpost;
 my $reply;
 
 if ($init->{'replyto'}) 
 {
     my $qparentid = $init->{'replyto'};

     if ($clustered) {
         $sql = "SELECT t.posterid, t.nodetype, t.nodeid AS 'itemid', ".
             "UNIX_TIMESTAMP()-UNIX_TIMESTAMP(t.datepost) AS 'secondsold', ".
             "t.state, l.anum FROM talk2 t, log2 l WHERE l.journalid=$u->{'userid'} AND ".
             "l.jitemid=t.nodeid AND t.journalid=$u->{'userid'} AND t.jtalkid=$qparentid";
     } else {
         $sql = "SELECT posterid, nodetype, nodeid AS 'itemid', ".
             "UNIX_TIMESTAMP()-UNIX_TIMESTAMP(datepost) AS 'secondsold', state FROM ".
             "talk WHERE talkid=$qparentid";
     }
     $parpost = LJ::dbs_selectrow_hashref($dbcs, $sql);
     return $ML{'.error.noreplypost'} unless $parpost;
     
     unless ($parpost->{'nodetype'} eq "L" && $parpost->{'itemid'}) {
         return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.cannotreplynopost'} p?>";
     }

     ## load its text
     {
         my $tt;
         if ($clustered) {
             $tt = LJ::get_talktext2($u, $init->{'replyto'});
         } else {
             $tt = LJ::get_talktext($dbs, $init->{'replyto'});
         }
         $parpost->{'subject'} = $tt->{$init->{'replyto'}}->[0];
         $parpost->{'body'} = $tt->{$init->{'replyto'}}->[1];
     }
     
     ### load the talk properties
     
     if ($clustered) { 
         LJ::load_props($dbs, "talk");
         LJ::load_talk_props2($dbcr, $u->{'userid'}, [ $init->{'replyto'} ], {$init->{'replyto'} => $parpost}); 
     }
     else {
         LJ::load_talk_props($dbs, [ $init->{'replyto'} ], {$init->{'replyto'} => $parpost}); 
     }

     if($LJ::UNICODE && $parpost->{'unknown8bit'}) {
         LJ::item_toutf8($dbs, $u, \$parpost->{'subject'}, \$parpost->{'body'}, {});
     }

     $init->{'itemid'} = $parpost->{'itemid'};
     if ($clustered) {
         $init->{'ditemid'} = $parpost->{'itemid'}*256 + $parpost->{'anum'};
     } else {
         $init->{'ditemid'} = $init->{'itemid'};
     }
 }

 my $itemid = $init->{'itemid'};

 ## load the journal item
 my $item = LJ::Talk::get_journal_item($dbs, $dbcs, $u, $itemid);

 if ($init->{'oldurl'} && $item) {
     $init->{'anum'} = $item->{'anum'};
     $init->{'ditemid'} = $init->{'itemid'}*256 + $item->{'anum'};
 }

 unless ($item && $item->{'anum'} == $init->{'anum'}) {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'talk.error.noentry'} p?>";
 }

 my %logprops = %{$item->{'logprops'}};

 my $ditemid = $init->{'ditemid'};

 $parpost ||= $item;  # if there's no parent post, remote is reply to top-level item

 my ($up, $ur);  # $up = user posted journal item; $ur = user remote is replying to
 LJ::load_userids_multiple($dbs, [
                                  $item->{'posterid'} => \$up,
                                  $parpost->{'posterid'} => \$ur,
                                  ], [ $u ]);

 my $remote = LJ::get_remote($dbs);

 # check suspended
 return "<?h1 $ML{'talk.error.suspended.title'} h1?><?p $ML{'talk.error.suspended'} p?>"
    if ($u->{'statusvis'} eq "S" || $up->{'statusvis'} eq "S");

 # check deleted
 return "<?h1 $ML{'talk.error.deleted.title'} h1?><?p $ML{'talk.error.deleted'} p?>"
    if ($u->{'statusvis'} eq "D");

 # checked screened post
 return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.noreply_screened'} p?>"
     if $parpost->{'state'} eq "S" 
         and not LJ::Talk::can_unscreen($dbs, $remote, $u, $up, $ur->{'user'});

 LJ::load_user_props($dbs, $u, "opt_notalkicons", "opt_logcommentips", "opt_whoscreened");


 ####  Check security before viewing this post
 return $errtxt unless LJ::Talk::check_viewable($dbs, $remote, $item, \%FORM, \$errtxt);
 
 my $event = $FORM{'replyto'} eq "" ? $item->{'event'} : $parpost->{'body'};
 my $preformatted = $FORM{'replyto'} eq "" ? $logprops{$itemid}->{'opt_preformatted'} : $parpost->{'opt_preformatted'};

 LJ::expand_embedded($dbs, $ditemid, $remote, \$event);
 LJ::CleanHTML::clean_event(\$event, $preformatted);
 $ret .= "<p>";
 $ret .= "<table><tr valign='middle'>";
 my $picid;
 my $pickw = $init->{'replyto'} ? $parpost->{'picture_keyword'} : $logprops{$itemid}->{'picture_keyword'};

 if ($pickw) {
     my $qkw = $dbr->quote($pickw);
     $picid = $dbr->selectrow_array("SELECT m.picid FROM userpicmap m, keywords k ".
                                    "WHERE m.userid=$ur->{'userid'} AND ".
                                    "m.kwid=k.kwid AND k.keyword=$qkw");
 }

 $picid ||= $ur->{'defaultpicid'};

 my %userpics;
 if ($picid) {
     LJ::load_userpics($dbs, \%userpics, [ $picid ]);
     my $alt = $ur->{'name'};
     if ($pickw) {
         $alt .= ": $pickw";
     }
     $alt = LJ::ehtml($alt);
     $ret .= "<td><img src='$LJ::USERPIC_ROOT/$picid/$ur->{'userid'}' width='$userpics{$picid}->{'width'}' ".
         "height='$userpics{$picid}->{'height'}' align='absmiddle' ".
         "hspace='3' title='$alt' alt=''></td>";
 }

 $ret .= "<td>";

 # who-wrote-where
 {
     my $if_user = ($ur && $ur->{'user'} ne "");
     my $if_comm = (! $init->{'replyto'} && $up->{'userid'} != $u->{'userid'});
     my $mlitem = "talk." . ($if_user ? "somebodywrote" : "anonwrote") 
        . ($if_comm ? "_comm" : "");
     my %params;
     %params = ('realname' => BML::eall($ur->{'name'}),
                'userlink' => LJ::ljuser($ur->{'user'}),
               )
         if $if_user;
     $params{'commlink'} = "<?ljcomm $u->{'user'} ljcomm?>"
         if $if_comm;
     if ($if_user || $if_comm) {
         $ret .= BML::ml($mlitem, \%params);
     } else {
         $ret .= BML::ml($mlitem);
     }
 }
         
	
 unless ($init->{'replyto'}) {
     my $etime = $item->{'eventtime'};
     $etime =~ s!(\d\d\d\d)-(\d\d)-(\d\d)!LJ::date_to_view_links($u, $&)!e;
     $ret .= "<br /><font size='-1'>@ $etime</font>";
 }
 
 $ret .= "</td></tr></table>";

 unless ($init->{'replyto'}) {
     $ret .= LJ::Talk::link_bar($dbs, { 'u' => $u, 'up' => $up, 'headref' => \$head,
                                        'remote' => $remote, 'itemid' => $ditemid, });
 }
     
 my %current;
 if ($logprops{$itemid}->{'current_mood'} || 
     $logprops{$itemid}->{'current_moodid'}) 
 {
     LJ::load_moods($dbs);
     $current{'Mood'} = $logprops{$itemid}->{'current_mood'};
     LJ::CleanHTML::clean_subject(\$current{'Mood'});
     my $mid = $logprops{$itemid}->{'current_moodid'};
     if ($mid) {
         my $theme = $up->{'moodthemeid'};
         LJ::load_mood_theme($dbs, $theme);
         my %pic;
         my $name = defined $LJ::CACHE_MOODS{$mid} ? $LJ::CACHE_MOODS{$mid}->{'name'} : '';
         if (LJ::get_mood_picture($theme, $mid, \%pic)) {
             $current{'Mood'} = "<img src=\"$pic{'pic'}\" align='absmiddle' width='$pic{'w'}' ".
                 "height='$pic{'h'}' vspace='1'> $name";
         } else {
             $current{'Mood'} = $name;
         }
     }
 }
 if ($logprops{$itemid}->{'current_music'}) {
     $current{'Music'} = $logprops{$itemid}->{'current_music'};
     LJ::CleanHTML::clean_subject(\$current{'Music'});
 }
 
 $ret .= "<UL>";
 
 ### currents
 if (! $init->{'replyto'} && %current) 
 {
     $ret .= "<table border=0>\n";
     foreach (sort keys %current) {
         my $curkey = "talk.curname_" . $_;
         my $curname = BML::ml($curkey);
         $curname = "<b>Current $_:</b>" unless $curname;
         $ret .= "<tr><td align=right>$curname</td><td>$current{$_}</td></tr>\n";
     }
     $ret .= "</table><p>\n";
 }

 ### security indicator
 my $sec = "";
 if ($parpost->{'security'} eq "private") {
     $sec = "<?securityprivate?>";
 } elsif ($parpost->{'security'} eq "usemask") {
     $sec = "<?securityprotected?>";
 }

 $sec .= "<br />\n" unless $sec eq "" or $parpost->{'subject'};
 $ret .= $sec;
 
 ###
 if ($parpost->{'subject'}) {
     my $cleansubject = $parpost->{'subject'};
     if ($init->{'replyto'}) {
         # comments can't have HTML in subjects at all
         $cleansubject = BML::eall($cleansubject);
     } else {
         # but journal entries can have some
         LJ::CleanHTML::clean_subject(\$cleansubject);
         BML::ebml(\$cleansubject);
     }
     $ret .= "<FONT FACE=\"Arial,Helvetica\" size=+1><I><B>$cleansubject</B></I></FONT><BR />\n";
 }
 
 $ret .= $event;
 $ret .= "</ul>";
 
 $ret .= "<br clear='all'><hr size='2' align='center' />";	

 my $jarg = $u->{'clusterid'} ? "journal=$u->{'user'}&" : "";
 $ret .= "<center><b>(<a href=\"/talkread.bml?${jarg}itemid=$ditemid\">$ML{'talk.commentsread'}</a>)</b></center>";
 
 # can a comment even be made?
 if ($logprops{$itemid}->{'opt_nocomments'}) {
     $ret .= "<?h1 $ML{'Sorry'} h1?><?p $ML{'.error.nocommentspost'} p?>";
     return $ret;
 }
 if ($u->{'opt_showtalklinks'} eq "N") {
     $ret .= "<?h1 $ML{'Sorry'} h1?><?p $ML{'.error.nocommentsjournal'} p?>";
     return $ret;
 }
 unless (LJ::get_cap($u, "get_comments") ||
         ($remote && LJ::get_cap($remote, "leave_comments"))) {
     $ret .= "<?h1 $ML{'Sorry'} h1?><?p ";
     $ret .= $LJ::MSG_NO_COMMENT || "Sorry, you cannot leave comments at this time.";
     $ret .= " p?>";
     return $ret;
 }

 $ret .= "<?h1 $ML{'.postresponse'} h1?>";

 if ($parpost->{'state'} eq "S") {
     $ret .= "<br /><?p $ML{'.warnscreened'} p?>";
 }
 $ret .= "<form method='post' action='/talkpost_do.bml'>";
 # hidden values
 my $parent = int($init->{'replyto'}+0);
 $ret .= "<input type='hidden' name='parenttalkid' value='$parent'>\n";
 $ret .= "<input type='hidden' name='itemid' value='$ditemid'>\n";
 if ($clustered) {
     $ret .= "<input type='hidden' name='journal' value='$u->{'user'}'>\n";
 }

 # from registered user or anonymous?
 $ret .= "<table>\n";
 if ($u->{'opt_whocanreply'} eq "all") {
     $ret .= "<tr valign='middle'>";
     $ret .= "<td align='right'>$ML{'.opt.from'}</td>";
     $ret .= "<td align='middle'><input type='radio' name='usertype' value='anonymous' id='talkpostfromanon'></td>";
     $ret .= "<td align='left'><b><label for='talkpostfromanon'>$ML{'.opt.anonymous'}</label></b>";
     if ($u->{'opt_whoscreened'} eq 'A' ||
           $u->{'opt_whoscreened'} eq 'R' ||
           $u->{'opt_whoscreened'} eq 'F') {
         $ret .= " " . $ML{'.opt.willscreen'};
     }
     $ret .= "</td></tr>\n";
 } elsif ($u->{'opt_whocanreply'} eq "reg") {
     $ret .= "<tr valign='middle'>";
     $ret .= "<td align='right'>$ML{'.opt.from'}</td><td align='middle'>(  )</td>";
     $ret .= "<td align='left' colspan=3><font color='#c0c0c0'><b>$ML{'.opt.anonymous'}</b></font>$ML{'.opt.noanonpost'}</td>";
     $ret .= "</tr>\n";
 } else {
     $ret .= "<tr valign='middle'>";
     $ret .= "<td align='right'>$ML{'.opt.from'}</td>";
     $ret .= "<td align='middle'>(  )</td>";
     $ret .= "<td align='left' colspan='3'><font color='#c0c0c0'><b>$ML{'.opt.anonymous'}</b></font>" .
         BML::ml(".opt.friendsonly", {'username'=>"<b>$u->{'user'}</b>"}) 
         . "</td>";
     $ret .= "</tr>\n";
 }

 my $checked = "checked='1'";
 if ($remote) {
     $ret .= "<tr valign='middle'>";
     $ret .= "<td align='right'>&nbsp;</td>";
     if (LJ::is_banned($dbs, $remote, $u)) {
         $ret .= "<td align='middle'>( )</td>";
         $ret .= "<td align='left'><font color='#c0c0c0'>" . BML::ml(".opt.loggedin", {'username'=>"<i>$remote->{'user'}</i>"}) . "</font>" . BML::ml(".opt.bannedfrom", {'journal'=>$u->{'user'}}) . "</td>";
     } else {
         $ret .= "<td align='middle'><input type='radio' name='usertype' value='cookieuser' id='talkpostfromremote' $checked></td>";
         $ret .= "<td align='left'><label for='talkpostfromremote'>" . BML::ml(".opt.loggedin", {'username'=>"<i>$remote->{'user'}</i>"}) . "</label>\n";
         $ret .= "<input type='hidden' name='cookieuser' value='$remote->{'user'}'>\n";
         if ($u->{'opt_whoscreened'} eq 'A' ||
             ($u->{'opt_whoscreened'} eq 'F' &&
              !LJ::is_friend($dbs, $u, $remote))) {
             $ret .= " " . $ML{'.opt.willscreen'};
         }
         $ret .= "</td>";
         $checked = "";
     }
     $ret .= "</tr>\n";
 }

 # ( ) LiveJournal user:
 $ret .= "<tr valign=middle>";
 $ret .= "<td>&nbsp;</td>";
 $ret .= "<td align=middle><input type='radio' name='usertype' value='user' id='talkpostfromlj' $checked>";
 $ret .= "</td><td align=left><b><label for='talkpostfromlj'>$ML{'.opt.ljuser'}</label></b> ";
 $ret .= $ML{'.opt.willscreenfriend'} if $u->{'opt_whoscreened'} eq 'F';
 $ret .= $ML{'.opt.willscreen'} if $u->{'opt_whoscreened'} eq 'A';
 $ret .= "</tr>\n";

 # Username: [    ] Password: [    ]  Login? [ ]
 $ret .= "<tr valign='middle' align='left'><td></td><td></td><td>";
 $ret .= "$ML{'Username'}:&nbsp;<input class='textbox' name='userpost' size='13' maxlength='15' id='username'> ";
 $ret .= "$ML{'Password'}:&nbsp;<input class='textbox' name='password' type='password' maxlength='30' size='13'> <label for='logincheck'>$ML{'.loginq'}&nbsp;</label><input type='checkbox' name='do_login' id='logincheck'></td></tr>\n";
 
 my $basesubject = "";
 if ($init->{'replyto'}) {
     $basesubject = $parpost->{'subject'};
     $basesubject =~ s/^Re:\s*//i;
     if ($basesubject) {
         $basesubject = "Re: $basesubject";
         $basesubject = BML::eall($basesubject);
     }
 }

 # subject
 $ret .= "<tr valign='top'><td align='right'>$ML{'.opt.subject'}</td><td colspan='4'><input class='textbox' type='text' size='50' maxlength='100' name='subject' value=\"$basesubject\"><br /><?de $ML{'.nosubjecthtml'} de?></td></tr>\n";

 unless ($u->{'opt_notalkicons'})
 {
     # spit out a pretty table of all the possible subjecticons
     $ret .= "<tr valign='middle'><td>&nbsp;</td><td align='left' colspan='4'>\n";
     $ret .= "<table border='0' cellspacing='3' cellpadding='0'>\n";
     
     foreach my $type (@{$pics->{'types'}}) {
         my $input = "";
         my $img = "";
         
         # go through and make radio button/icon image rows.
         foreach (@{$pics->{'lists'}->{$type}}) {
             $input .= "<td valign='middle' align='middle'><input type='radio' name='subjecticon' value='$_->{'id'}' id='talki_$_->{'id'}'></TD>\n";
             $img .= "<td valign='middle' align='middle'><label for='talki_$_->{'id'}'>" . LJ::Talk::show_image($pics, $_->{'id'}) . "</label></td>\n";
         }
         $ret .= "<tr>";
         
         # make an option if they don't want an image
         if ($type eq $pics->{'types'}->[0]) { 
             $ret .= "<td rowspan='4' valign='middle' align='middle'><input type='radio' name='subjecticon' value='none' checked='1' id='talki_none'><br /><label for='talki_none'><i>$ML{'.opt.noimage'}</i></label></td><td rowspan='4'>&nbsp;</td>\n"; 
         }
         
         # then splice in the icon & radio button rows...
         $ret .= "$input</tr>\n";
         $ret .= "<tr>\n$img</tr>\n";
         
         # do a HR between different $types.
         unless ($type eq $pics->{'types'}->[-1]) {
             #$ret .= "<tr><td colspan='" . scalar(@{$pics->{'lists'}->{$type}}) . "' valign='middle' align='middle'><hr size='1'></td></tr>\n"; 
         }
     }
     # end that table, foo!
     $ret .= "</table>\n";
     $ret .= "</td></tr>\n";
 }

 $ret .= "<tr><td align='right'>&nbsp;</td><td colspan='4'>";
 $ret .= "$ML{'.opt.noautoformat'}<input type='checkbox' value='1' name='prop_opt_preformatted'>";
 $ret .= LJ::help_icon("noautoformat", " ");
 
 my %res;
 if ($remote) {
     LJ::do_request($dbs, { "mode" => "login",
                            "ver" => ($LJ::UNICODE ? "1" : "0"),
                            "user" => $remote->{'user'},
                            "getpickws" => 1,
                        }, \%res, { "noauth" => 1, "userid" => $remote->{'userid'} });
 }
 if ($res{'pickw_count'}) {
     $ret .= BML::ml('.label.picturetouse',{'username'=>$remote->{'user'}});
     my @pics;
     for (my $i=1; $i<=$res{'pickw_count'}; $i++) {
         push @pics, $res{"pickw_$i"};
     }
     @pics = sort { lc($a) cmp lc($b) } @pics;
     $ret .= LJ::html_select({'name' => 'prop_picture_keyword', 
                           'selected' => $FORM{'prop_picture_keyword'}, },
                          ("", $ML{'.opt.defpic'}, map { ($_, $_) } @pics));
     $ret .= LJ::help_icon("userpics", " ");
 }
 $ret .= "</td></tr>\n";

 # textarea for their message body
 $ret .= "<tr valign='top'><td align='right'>$ML{'.opt.message'}</td><td colspan='4'>";
 $ret .= "<textarea class='textbox' rows='10' cols='50' wrap='soft' name='body' style='width: 99%'></textarea>";
 $ret .= "<br /><input type='submit' name='submitpost' value='$ML{'.opt.submit'}'>\n";

 ## preview stuff
 $ret .= "<input type='submit' name='submitpreview' value='$ML{'talk.btn.preview'}'>\n";
 if ($LJ::SPELLER) {
     $ret .= "<input type='checkbox' name='do_spellcheck' value='1' id='spellcheck'> <label for='spellcheck'>$ML{'talk.spellcheck'}</label>";
 }

 if ($u->{'opt_logcommentips'} eq "A") {
     $ret .= "<br />$ML{'.logyourip'}";
     $ret .= LJ::help_icon("iplogging", " ");
 }
 if ($u->{'opt_logcommentips'} eq "S") {
     $ret .= "<br />$ML{'.loganonip'}";
     $ret .= LJ::help_icon("iplogging", " ");
 }


 $ret .= "<br />$ML{'.paraformat'}<br /> <?de $ML{'.allowedhtml'}: ";
 foreach (sort &LJ::CleanHTML::get_okay_comment_tags()) {
     $ret .= "&lt;$_&gt; ";
 }
 $ret .= "de?>";


 $ret .= "</td></tr></table>\n";
 $ret .= "</form>\n";

 return $ret;

_code?>

<=body
head=><?_code return $head _code?>
page?><?_c <LJDEP>
post: htdocs/talkpost_do.bml
link: htdocs/talkread.bml, htdocs/allpics.bml, htdocs/create.bml
</LJDEP> _c?>

