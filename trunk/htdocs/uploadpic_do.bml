(=_INFO
NOFORMREAD=>1
_INFO=)(=PAGE
TITLE=>Get Upload
BODY<=

(=_CODE

 use LWP::UserAgent;
 use Image::Size;
 use CGI qw(:standard);
 use Digest::MD5 qw(md5_base64);
 my $query = new CGI;

 $MAXIMUM_UPLOAD = 40960;
   
 $FORM{'user'} = $query->param('user');
 $FORM{'des'} = $query->param('des');
 $FORM{'src'} = $query->param('src');
 $FORM{'urlpic'} = $query->param('urlpic');
 $FORM{'password'} = $query->param('password');
 $FORM{'hpassword'} = $query->param('hpassword');
 $FORM{'make_default'} = $query->param('make_default');
 $FORM{'authas'} = $query->param('authas');

 my $u;
 my $user;
 my @errors = ();

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my $remote = LJ::get_remote($dbs);

 my $err;
 my $user = LJ::get_effective_user($dbs, {
     'form' => \%FORM,
     'out_u' => \$u,
     'remote' => $remote,
     'out_err' => \$err,
 });
 return LJ::bad_input($err) if $err;

 $u ||= LJ::load_user($dbs, $user);
 return LJ::bad_input("Invalid username") unless $u;

 return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

 my $userid = $u->{'userid'}+0;

 if ($FORM{'src'} eq "url" && $FORM{'urlpic'} !~ /^http:\/\//) {
     push @errors, "The address for the picture to be uploaded does not look correct.  It should start with <b>http://</b>";
 }

 return LJ::bad_input(@errors) if @errors;

 # now we're authenticated
 my $authaslink;
 $authaslink = "?authas=$FORM{'authas'}" if ($FORM{'authas'} =~ /^\w/);
 $authaslink ||= "?user=$user" if $FORM{'user'};

 my $ret = "";
 my $imagedata = "";

 if ($FORM{'src'} eq "file") 
 {
     my $filename = $query->param("userpic");
     my $BytesRead;
     my $Buffer;
     my $fh = $query->param('userpic');
     
     my $too_big = 0;
     while (!$too_big && ($Bytes = read($fh,$Buffer,1024))) {
         $BytesRead += $Bytes;
         $imagedata .= $Buffer;
         if ($BytesRead > $MAXIMUM_UPLOAD) { $too_big = 1; }
     }

     if ($too_big)
     {
         push @errors, "File size too big.  File cannot exceed 40K.";
         return LJ::bad_input(@errors) if @errors;
     }
 }
 elsif ($FORM{'src'} eq "url") 
 {
     #my ($type, $size, $age) = head($FORM{'urlpic'});
     #$ret .= "(type=$type, size=$size, age=$age)";
     #return $ret;

     my $ua = new LWP::UserAgent;
     my $size = 0;
     my $req = HTTP::Request->new('GET', $FORM{'urlpic'});
     my $res = $ua->simple_request($req, sub { 
         my($data, $response, $protocol) = @_;
         $size += length($data);
         $imagedata .= $data;
         die if ($size > $MAXIMUM_UPLOAD);
     }, 10_000);

     if (length($imagedata) > $MAXIMUM_UPLOAD) {
         push @errors, "File size too big.  File cannot exceed 40K.";
         return LJ::bad_input(@errors) if @errors;
     }
 }
 else {
     return "(=H1 Error H1=)(=P Unknown mode/source. P=)";
 }
   

 my ($sx, $sy, $filetype) = imgsize(\$imagedata);
 unless (defined $sx)
 {
     push @errors, $filetype;
     return LJ::bad_input(@errors) if @errors;
 }
 
 unless ($filetype eq "GIF" || $filetype eq "JPG" || $filetype eq "PNG")
 {
     push @errors, "Files of type $filetype are not supported.  You can only upload GIF, PNG or JPG files.  Nearly all image/photo programs can do this conversion for you.";
     return LJ::bad_input(@errors) if @errors;
 }
 if ($sx > 100 || $sy > 100)
 {
     push @errors, "The dimensions of your image (${sx}x${sy}) exceed maximum size.  Your picture can only be 100x100 pixels large.  Use a image/photo editing program to reduce the image to thumbnail-size.";
     return LJ::bad_input(@errors) if @errors;
 }
 
 $qsx = $sx+0;
 $qsy = $sy+0;
 $qcontenttype = "''";
 if ($filetype eq "GIF") { $qcontenttype = "'image/gif'"; }
 if ($filetype eq "PNG") { $qcontenttype = "'image/png'"; }
 if ($filetype eq "JPG") { $qcontenttype = "'image/jpeg'"; }
 
 my $base64 = md5_base64($imagedata);
 my $qbase64 = $dbh->quote($base64);
 my $qdes = $dbh->quote($FORM{'des'} || scalar(localtime()));     
 
 ## see if they have too many pictures uploaded
 $sth = $dbh->prepare("SELECT COUNT(*) FROM userpic WHERE userid=$userid");
 $sth->execute;
 my ($count) = $sth->fetchrow_array;
 my $max = LJ::get_cap($u, "userpics");
 if ($count >= $max) {
     push @errors, "You are already at your limit of $max pictures.  You cannot upload this picture until you <A HREF=\"/editpics.bml$authaslink\">delete one of your existing ones</A>.";
     return LJ::bad_input(@errors) if @errors;     
 }

 # see if it's a duplicate
 my $picid = 0;
 $picid = $dbh->selectrow_array("SELECT picid FROM userpic WHERE userid=$userid AND ".
                                "contenttype=$qcontenttype AND md5base64=$qbase64");

 my $isclust = $u->{'dversion'} >= 2 ? 1 : 0;
 
 ### if picture isn't a duplicate, insert it
 if ($picid == 0) 
 {
     $qimagedata = $dbh->quote($imagedata);
     undef $imagedata;

     ### insert the meta-data
     $sth = $dbh->prepare("INSERT INTO userpic (userid, contenttype, width, height, ".
                          "picdate, md5base64) VALUES ".
                          "($userid, $qcontenttype, $qsx, $qsy, NOW(), $qbase64)");
     $sth->execute;
     if ($dbh->err) {  return "<B>Error: </B> " . $dbh->errstr;  }
     $picid = $sth->{'mysql_insertid'};

     ### insert the blob
     my $dbb = $dbh;
     
     if ($isclust) {
         $dbb = LJ::get_cluster_master($u);
         return "<b>Error:</b> Database temporarily unavailable" unless $dbb;
         $dbb->do("INSERT INTO userpicblob2 (userid, picid, imagedata) ".
                  "VALUES ($userid, $picid, $qimagedata)");
     } else {
         $dbb->do("INSERT INTO userpicblob (picid, imagedata) VALUES ($picid, $qimagedata)");
     }
     if ($dbb->err) { return "<B>Error: </B> " . $dbb->errstr; }
 }
 
 if ($FORM{'make_default'}) {
     $dbh->do("UPDATE user SET defaultpicid=$picid WHERE userid=$userid");
     if ($dbh->err) { return $dbh->errstr; }
 }
 
 return "(=H1 Success H1=)(=P Your image has been uploaded.  It looks like this: <p align='center'><img src='/userpic/$picid' width='$sx' height='$sy'></p>You can <a href=\"editpics.bml$authaslink\">edit your picture keywords</a> to be able to use this picture selectively in the future. P=)(=P You can view your journal <a href='/users/${user}'>here</a>. P=)";
 
_CODE=)

<=BODY
PAGE=)(=_C <LJDEP>
lib: LWP::UserAgent, Image::Size, CGI::, Digest::MD5
link: htdocs/editpics.bml
</LJDEP> _C=)
