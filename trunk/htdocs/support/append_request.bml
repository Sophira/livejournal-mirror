(=PAGE
TITLE=>Append Request
BODY<=

(=_CODE

 require 'ljlib.pl';
 &connect_db();

 my $spid = $FORM{'spid'}+0;
 $sth = $dbh->prepare("SELECT * FROM support WHERE spid=$spid");
 $sth->execute;
 my $sp = $sth->fetchrow_hashref;
 unless ($sp) { return "(=H1 Error H1=)(=P Unknown support number. P=)"; }

 if ($sp->{'state'} eq "closed") {
     return "(=H1 Closed H1=)(=P This support request has since been closed. P=)";
 }

 my $u = {};
 if ($sp->{'reqtype'} eq "user") {
     $sth = $dbh->prepare("SELECT * FROM user WHERE userid=$sp->{'requserid'}");
     $sth->execute;
     $u = $sth->fetchrow_hashref;
     $email = $u->{'email'};
 }

 my $remote = &get_remote();
	
 unless ($remote)
 {
     $ret .= "You must <a href=\"/login.bml\">login</a> to help people out.";
     return $ret;
 }
	
 unless (&LJ::remote_has_priv($dbh, $remote, "supporthelp") || 
	 ($remote->{'userid'} == $sp->{'requserid'}))
 {
     $ret .= "Sorry, you do not have access to answer people's support requests.";
     return $ret;
 }

 my $up = LJ::load_user($dbh, $remote->{'user'});
 
 unless ($FORM{'body'} =~ /\S/ || $FORM{'faqid'}) {
     push @errors, "Your message was blank.  Please type at least something in the message field.";
 }

 unless ($FORM{'spid'}) { push @errors, "need spid"; }

 if (@errors)
 {
     my $ret = "";
     $ret .= "(=BADCONTENT=)\n<UL>\n";		
     foreach (@errors)
     {
         $ret .= "<LI>$_\n";
     }
     $ret .= "</UL>\n";
     return $ret;
 }

 my $faqid = $FORM{'faqid'}+0;
 my $type = $faqid ? "faqref" : "custom";
 my $userid = $up->{'userid'};
 my $message = $FORM{'body'};
 $message =~ s/^\s+//;
 $message =~ s/\s+$//;
 my $qmessage = $dbh->quote($message);

 my $sql = "INSERT INTO supportlog (splid, spid, timelogged, type, faqid, userid, message) VALUES (NULL, $spid, UNIX_TIMESTAMP(), '$type', $faqid, $userid, $qmessage)";
 $dbh->do($sql);

 my $splid = $dbh->{'mysql_insertid'};

 my $email = $sp->{'reqtype'} eq "email" ? $sp->{'reqemail'} : $u->{'email'};
 
 my $body = "";
 $body .= "Below is an answer to your support question regarding \"$sp->{'subject'}\".\n";
 $body .= "="x70 . "\n\n";
 if ($faqid) {
     my $faqname = "";
     my $sth = $dbh->prepare("SELECT question FROM faq WHERE faqid=$faqid");
     $sth->execute;
     ($faqname) = $sth->fetchrow_array;
     if ($faqname) {
	 $body .= "FAQ QUESTION: " . $faqname . "\n";
	 $body .= &make_text_link("$LJ::SITEROOT/support/faqbrowse.bml?faqid=$faqid", $email);
	 $body .= "\n\n";
     }
     
 }
 $body .= $message;
 $body .= "\n\n" . "="x70 . "\n";
 $body .= "Did this answer your question?  If so, please CLOSE THIS SUPPORT REQUEST\n";
 $body .= "so we can help other people by going here:\n";
 $body .= &make_text_link("$LJ::SITEROOT/support/act.bml?close;$spid;$sp->{'authcode'};$splid", $email);

 $body .= "\n\nIf this wasn't helpful, you need to go to the following address to prevent\n";
 $body .= "this request from being closed in 7 days.  Click here:\n";
 $body .= &make_text_link("$LJ::SITEROOT/support/act.bml?touch;$spid;$sp->{'authcode'}", $email);

 $body .= "\n\nTo read all the comments or add more, go here:\n";
 $body .= &make_text_link("$LJ::SITEROOT/support/see_request.bml?id=$spid", $email);

 $body .= "\n";

 &send_mail({ 
     'to' => $email,
     'from' => $LJ::BOGUS_EMAIL,
     'fromname' => 'LiveJournal Support',
     'subject' => "Re: Support Request \#$spid",
     'body' => $body  
     });

 ########## send notifications

 my $url = "$LJ::SITEROOT/support/see_request.bml?id=$spid";

 my $qspcatid = $sp->{'spcatid'}+0;
 $sth = $dbh->prepare("SELECT u.email FROM supportnotify sn, user u WHERE sn.userid=u.userid AND sn.spcatid=$qspcatid AND sn.level IN ('all')");
 $sth->execute;
 my @to_notify;
 while ($_ = $sth->fetchrow_hashref) {
     push @to_notify, $_->{'email'};
 }

 $body = "A follow-up to the request regarding \"$sp->{'subject'}\" has been submitted.  You can track its progress or add information here:\n\n  ";
 $body .= &make_text_link($url, $_->{'email'});
 $body .= "\n\n" . "="x70 . "\n\n";
 $body .= $message;

 &send_mail({ 
     'bcc' => join(", ", @to_notify),
     'from' => $LJ::BOGUS_EMAIL,
     'fromname' => 'LiveJournal Support',
     'subject' => "Re: Support Request \#$spid",
     'body' => $body
     });

 
 return "(=H1 Logged H1=)(=P Your comment/solution has been recorded.  Thanks.  P=)";

_CODE=)
(=HR=)
Back to the <A HREF="help.bml">list of open requests</A>.<BR>
Back to the <A HREF="./">support area</A>.

<=BODY
PAGE=)
