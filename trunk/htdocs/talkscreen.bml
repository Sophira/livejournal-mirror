<?_info
nocache=>1
_info?><?page
title=><?_ml .title2 _ml?>
body<=

<?_code

 my $ret = "";
 my $mode = $POST{'mode'} || $GET{'mode'};
 my $talkid = $POST{'talkid'} || $GET{'talkid'};
 my $journal = $POST{'journal'} || $GET{'journal'};

 my $remote = LJ::get_remote();

 unless ($remote) {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.login'} p?>";
 }

 my $qtalkid = $talkid+0;
 my $dtalkid = $qtalkid;   # display talkid, for use in URL later

 # we need to find out: $u, $up (poster of the entry this is a comment to),
 # userpost (username of this comment's author). Then we can check permissions.

 my $u = LJ::load_user($journal);
 return "<?h1 $ML{'Error'} h1?><?p $ML{'.talk.error.bogusargs'} p?>" unless $u;
 my $dbcr = LJ::get_cluster_def_reader($u);
 return "<?h1 $ML{'Error'} h1?><?p $ML{'error.nodb'} p?>" unless $dbcr;

 my $post;
 $qtalkid = int($qtalkid / 256);  # get rid of anum
 $post = $dbcr->selectrow_hashref("SELECT jtalkid AS 'talkid', nodetype, state, nodeid AS 'itemid', ".
                                  "parenttalkid, journalid, posterid FROM talk2 ".
                                  "WHERE journalid=$u->{'userid'} AND jtalkid=$qtalkid");

 unless ($post) {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'talk.error.nocomment'} p?>";
 }
 if ($post->{'state'} eq "D") {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'talk.error.comm_deleted'} p?>";
 }

 my $state = $post->{'state'};

 $u ||= LJ::load_userid($post->{'journalid'});
 return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

 if ($post->{'posterid'}) {
     $post->{'userpost'} = LJ::get_username($post->{'posterid'});
 }

 my $qitemid = $post->{'itemid'}+0;

 # $posterid is the userid of the author of the entry, not the comment
 my ($posterid, $anum) = 
    $dbcr->selectrow_array("SELECT posterid, anum FROM log2 WHERE ".
                           "journalid=$u->{'userid'} AND jitemid=$qitemid");
 my $up = LJ::load_userid($posterid);

 my $ditemid = $qitemid*256 + $anum;

 my $itemlink = LJ::journal_base($u) . "/$ditemid.html";
 my $commentlink = "$itemlink?view=$dtalkid#t$dtalkid";

 if ($mode eq 'screen') {
     my $can_screen = LJ::Talk::can_screen($remote, $u, $up, $post->{'userpost'});
     return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.privs.screen'} p?>"
         unless $can_screen;
     unless ($POST{'confirm'} eq 'Y') {
         $ret .= "<?h1 $ML{'.screen.sure.title'} h1?><?p $ML{'.screen.sure.body'} p?>";
         $ret .= "<p><form method='POST' action='talkscreen.bml'><center>\n";
         $ret .= LJ::html_hidden(mode => 'screen', 'talkid' => $talkid,
                                 journal => $u->{user}, confirm => 'Y');
         $ret .= LJ::html_submit(undef, $ML{'.screen.doit'});
         $ret .= "</center>";
         $ret .= "</form>\n";
         return $ret;
     }
     if ($state ne 'S') {
         LJ::Talk::screen_comment($u, $qitemid, $qtalkid);
     }
     return "<?h1 $ML{'.screened.title'} h1?><?p " . BML::ml('.screened.body', {'link'=>$commentlink}) . " p?>";
 }

 if ($mode eq 'unscreen') {
     my $can_unscreen = LJ::Talk::can_unscreen($remote, $u, $up, $post->{'userpost'});
     return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.privs.unscreen'} p?>"
         unless $can_unscreen;
     unless ($POST{'confirm'} eq 'Y') {
         $ret .= "<?h1 $ML{'.unscreen.sure.title'} h1?><?p $ML{'.unscreen.sure.body'} p?>";
         $ret .= "<p><form method='POST' action='talkscreen.bml'><center>\n";
         $ret .= LJ::html_hidden(mode => 'unscreen', 'talkid' => $talkid,
                                 journal => $u->{user}, confirm => 'Y');
         $ret .= LJ::html_submit(undef, $ML{'.unscreen.doit'});
         $ret .= "</center>";
         $ret .= "</form>\n";
         return $ret;
     }
     if ($state ne 'A') {
         LJ::Talk::unscreen_comment($u, $qitemid, $qtalkid);
     }
     return "<?h1 $ML{'.unscreened.title'} h1?><?p " . BML::ml('.unscreened.body', {'link'=>$commentlink}) . " p?>";
 }

 if ($mode eq 'freeze') {
     my $can_freeze = LJ::Talk::can_freeze($remote, $u, $up, $post->{userpost});
     return "<?h1 $ML{'Error'} h1?><?p $ML{'.error.privs.freeze'} p?>"
         unless $can_freeze;
     unless ($POST{confirm} eq 'Y') {
         $ret .= "<?h1 $ML{'.freeze.sure.title'} h1?><?p $ML{'.freeze.sure.body'} p?>";
         $ret .= "<p><form method='post' action='talkscreen.bml'><center>\n";
         $ret .= LJ::html_hidden(mode => 'freeze', 'talkid' => $talkid,
                                 journal => $u->{user}, confirm => 'Y');
         $ret .= LJ::html_submit(undef, $ML{'.freeze.doit'});
         $ret .= "</center>";
         $ret .= "</form>\n";
         return $ret;
     }
     if ($state ne 'F') {
         LJ::Talk::freeze_thread($u, $qitemid, $qtalkid);
     }
     my $linktext = BML::ml('.link', { aopts => "href='$itemlink'" });
     return "<?h1 $ML{'.frozen.title'} h1?><?p $ML{'.frozen.body'} $linktext p?>";
 }

 if ($mode eq 'unfreeze') {
     my $can_unfreeze = LJ::Talk::can_unfreeze($remote, $u, $up, $post->{userpost});
     return "<?h1 $ML{'Error'} h1?><?p You are not allowed to unfreeze this thread p?>"
         unless $can_unfreeze;
     unless ($POST{confirm} eq 'Y') {
         $ret .= "<?h1 $ML{'.unfreeze.sure.title'} h1?><?p $ML{'.unfreeze.sure.body'} p?>";
         $ret .= "<p><form method='post' action='talkscreen.bml'><center>\n";
         $ret .= LJ::html_hidden(mode => 'unfreeze', 'talkid' => $talkid,
                                 journal => $u->{user}, confirm => 'Y');
         $ret .= LJ::html_submit(undef, $ML{'.unfreeze.doit'});
         $ret .= "</center>";
         $ret .= "</form>\n";
         return $ret;
     }
     if ($state eq 'F') {
         LJ::Talk::unfreeze_thread($u, $qitemid, $qtalkid);
     }
     my $linktext = BML::ml('.link', { aopts => "href='$itemlink'" });
     return "<?h1 $ML{'.unfrozen.title'} h1?><?p $ML{'.unfrozen.body'} $linktext p?>";
 }

 return "<?h1 $ML{'Error'} h1?><?p $ML{'error.unknownmode'} p?>";

_code?>

<=body
page?><?_c <LJDEP>
</LJDEP> _c?>
