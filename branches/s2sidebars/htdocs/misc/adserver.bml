<?_info
nocache=>1
_info?>
<?_code
{
    use strict;
    use vars qw($GET);

    # reload the livejournal policy periodically
    my $file = "$LJ::HOME/cgi-bin/SixApart/AdEngine/Policy/LiveJournal.pm";
    my $now = time();
    if ($LJ::_CACHE_ADPOLICY_LASTSTAT < $now - 10) {
        local($^W) = 0;
        my $modtime = (stat($file))[9];
        $LJ::_CACHE_ADPOLICY_LASTSTAT = $now;
        if ($modtime != $LJ::_CACHE_ADPOLICY_MODTIME) {
            $LJ::_CACHE_ADPOLICY_MODTIME = $modtime;
            delete $INC{'SixApart/AdEngine/Policy/LiveJournal.pm'};
            eval "use SixApart::AdEngine::Policy::LiveJournal; 1";
        }
    }

    BML::set_content_type("text/html");

    my $r = Apache->request;
    $r->notes("codepath" => "bml.misc.adserver");

    my $ad_engine = LJ::run_hook('ad_engine', {
        pagetype => $GET{channel},
    });
    return '<html></html>' unless $ad_engine;

    # this is a nasty hack because this code gets evaluated twice for some reason, need to ask brad
    return '<html></html>' unless $GET{type};

    my $adhtml = "<html><head><title>$LJ::SITENAMESHORT Ad Server</title></head>";
    $adhtml .= "<body style='margin: 0; padding: 0'>";

    $adhtml .= $ad_engine->process(map { $_ => $GET{$_} } qw(
                                                             url
                                                             width height type channel age
                                                             gender country language categories
                                                             interests search_term accttype
                                                             contents
                                                             ));
    $adhtml .= "</body></html>";
    return $adhtml;
}
_code?>
