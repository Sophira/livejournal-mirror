<?page
title=>Email Management
body<=

<?_code
{
    use strict;
    use vars qw(%POST);

    my $dbh = LJ::get_db_writer();
    
    my $ret;
    my $remote = LJ::get_remote();
    return "<?h1 $ML{'Error'} h1?><?p $ML{'error.noremote'} p?>"
        unless $remote;

    my $firstdate = $dbh->selectrow_array(qq{
        SELECT MIN(timechange) FROM infohistory
        WHERE userid=? AND what='email'
        AND oldvalue=?
    }, undef, $remote->{'userid'}, $remote->{'email'});

    my @deleted;
    if (LJ::did_post()) {
        my $sth = $dbh->prepare("SELECT timechange, oldvalue " .
                                "FROM infohistory WHERE userid=? " . 
                                "AND what='email' ORDER BY timechange");
        $sth->execute($remote->{'userid'});
        while (my ($time, $email) = $sth->fetchrow_array)
        {
            my $can_del = defined $firstdate && $time gt $firstdate;
            if ($can_del && $POST{"$email-$time"}) {
                push @deleted, BML::ml('.log.deleted', 
                                       { 'email' => $email,
                                         'time' => $time });

                $dbh->do("DELETE FROM infohistory WHERE what='email' " .
                         "AND userid=? AND timechange=? AND oldvalue=?",
                         undef, $remote->{'userid'}, $time, $email);
            }            
        }
    }
    
    # some explanatory text
    $ret .= "<?h1 $ML{'.desc.title'} h1?>\n";
    $ret .= "<?p $ML{'.desc.text'} p?>\n";
    $ret .= "<?p $ML{'.desc.notfirst'} p?>\n";

    $ret .= "<?hr?>\n";

    unless ($remote->{'status'} eq "A") {
        $ret .= "<?h1 $ML{'.notvalidated.title'} h1?>\n";
        $ret .= "<?p " . BML::ml('.notvalidated.text',
                                 { 'email' => $remote->{'email'} }) . " p?>";
        return $ret;
    }

    # current address
    $ret .= "<?h1 $ML{'.address.current.title'} h1?>\n";
    $ret .= "<div style='margin: 20px 0 20px 30px;'><b>";
    $ret .= "$remote->{'email'}</b></div>\n";

    # old addresses
    $ret .= "<?h1 $ML{'.address.old.title'} h1?>\n";
    $ret .= "<?p $ML{'.address.old.text'} p?>";

    $ret .= "<form method='post'>";
    $ret .= "<table border='1' cellpadding='2' style='margin-bottom: 3px;'>\n";
 
    my $sth = $dbh->prepare("SELECT timechange, oldvalue FROM infohistory " .
                            "WHERE userid=$remote->{'userid'} AND what='email' " .
                            "ORDER BY timechange");
    $sth->execute;
    while (my ($time, $email) = $sth->fetchrow_array)
    {
        my $can_del = defined $firstdate && $time gt $firstdate;
        $ret .= "<tr><td>" . LJ::html_check({ 'type' => 'check', 'name' => "$email-$time",
                                              'disabled' => ! $can_del } ) . "</td>";
        $ret .= "<td>$email</td><td>$time</td></tr>\n";
    }
    $ret .= "</table>\n";

    $ret .= LJ::html_submit(undef, $ML{'.delete_selected'});
    $ret .= "</form>";

    if (@deleted) {
        $ret .= "<?h1 $ML{'.log.deleted.title'} h1?>\n";
        $ret .= "<ul>";
        $ret .= "<li>$_</li>\n" foreach @deleted;
        $ret .= "</ul>";
    }

    return $ret;
}
_code?>
<=body
page?>
