<?_code # -*-bml-*-
{
    use strict;
    use LJ::JSON;
    use vars qw(%POST);

    my $err = sub { return LJ::JSON->to_json({ status => 'error', 'error' => $_, }); };

    my $action = $POST{action};
    my ($journal, $jitemid) = map { $POST{$_} } qw(journal jitemid);
    my $journal_user = LJ::load_user($journal);
    my $journalid = 0;
    $journalid = $journal_user->userid() if $journal_user;

    return $err->('Missing args') unless $journalid && $jitemid;

    my %actions = (
        undorate    => LJ::reset_eventrate,

        rate        => LJ::set_eventrate,

        list        => sub {
            my ($journalid, $jitemid) = @_;
            my ($skip, $limit) = map { int($POST{$_}) } qw(skip limit);
            $skip ||= 0; $limit ||= 10;

            my @result = LJ::get_eventrates(
                journalid   => $journalid,
                jitemid     => $jitemid,
                limits      => "'$skip', '$limit'",
            );

            return \@result;
        },
    );

    if (exists($actions{$action})) {
        my $result = $actions{$action}->($journalid, $jitemid);
        return LJ::JSON->to_json(
            {
                status  => 'OK',
                result  => $result,
                total   => LJ::get_eventratescounters($journalid, $jitemid),
            }
        );
    } else {
        return $err->('Wrong args (no action provided)');
    }
}
_code?>
