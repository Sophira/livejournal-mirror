<?_code # -*-bml-*-
{
    use strict;
    use LJ::JSON;

    my $err = sub {
        my $msg = shift;
        return LJ::JSON->to_json({
            'alert' => $msg,
        });
    };

    # get user
    my $u = LJ::get_remote()
        or return $err->("Sorry, you must be logged in to use this feature.");

    # get userpics
    my @userpics = LJ::Userpic->load_user_userpics($u);

    my $pics = {};

    foreach my $upic (@userpics) {
        next if $upic->inactive;

        my $id = $upic->id;

        $pics->{$id} = {
            url      => $upic->url,
            state    => $upic->state,
            width    => $upic->width,
            height   => $upic->height,
            comment  => LJ::strip_html($upic->comment),
            id       => $id,
            keywords => [ map { LJ::strip_html($_) } $upic->keywords],
            keyword  => scalar $upic->keywords,
        };
    }

    sleep 1 if $LJ::IS_DEV_SERVER;

    return LJ::JSON->to_json({
        pics => $pics,
        ids  => [
            map {
                $_->{'id'}
            } sort {
                lc $a->{'keyword'} cmp lc $b->{'keyword'}
            } values %$pics
        ],
    });
}
_code?>
