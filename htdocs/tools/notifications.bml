<?page
body<=
<?_code
{
    use strict;
    use vars qw($title $body $head %GET %POST);
    use Class::Autouse qw (
                           LJ::NotificationInbox
                           LJ::Event
                           );

    $title = "Message Center";
    $body = "";

    my $remote = LJ::get_remote()
        or return "<?needlogin?>";

    return "Not ready" unless $remote->can_use_esn;

    LJ::need_res('js/core.js');
    LJ::need_res('js/dom.js');
    LJ::need_res('js/view.js');
    LJ::need_res('js/controller.js');
    LJ::need_res('js/datasource.js');
    LJ::need_res('js/checkallbutton.js');
    LJ::need_res('js/selectable_table.js');

    LJ::need_res('js/esn_inbox.js');

    LJ::need_res('stc/esn.css');

    my $authas = $GET{'authas'} || $remote->{'user'};
    my $u = LJ::get_authas_user($authas);
    return LJ::bad_input("You could not be authenticated as the specified user.")
        unless $u;

    my $formauth = LJ::form_auth();

    # print authas
    my $authas = $GET{'authas'};
    $body .= "<form action='$LJ::SITEROOT/tools/notifications.bml' method='GET'>";
    $body .= LJ::make_authas_select($remote, { 'authas' => $authas });
    $body .= "</form>";

    # get the user's inbox
    my $inbox = $u->NotificationInbox
        or return LJ::error_list("Could not retrieve inbox for user $remote->{user}");

    # get events sitting in inbox
    my @notifications = $inbox->items;

    if (LJ::did_post()) {
        my $action = $POST{'EditNotificationsAction'};

        if ($action) {
            if ($action eq 'markAllRead') {
                $_->mark_read foreach (@notifications);
            } else {
                # go through each item and see if it's checked
                foreach my $item (@notifications) {
                    my $qid = eval { $item->qid } or next;
                    my $checked = $POST{"InboxItem_Check-$qid"};
                    next unless $checked;

                    if ($action eq 'markRead') {
                        $item->mark_read;
                    } elsif ($action eq 'markUnread') {
                        $item->mark_unread;
                    } elsif ($action eq 'delete') {
                        $item->delete;
                    }
                }

                # reload inbox after making changes
                @notifications = $inbox->items;
            }
        } # else error?
    }

    # print sidebar
    $body .= qq {
        <div id="NotificationSidebar">
            <div class="BlurbTitle">Message from $LJ::SITENAMESHORT</div>
            <div class="Blurb">
            <?p In the Message Center, you can find out who has friended you,
            get updates from $LJ::SITENAMESHORT, read your notices and more. p?>
            <?p To start getting notices, click on the
            <img src="$LJ::SITEROOT/img/btn_track.gif" width="22" height="20" valign="absmiddle" alt="Notify Me"/>
            icon when you are
            browsing $LJ::SITENAMESHORT. You can use notices to keep an eye on comment threads,
            user updates and new posts. p?>
            </div>
        } . LJ::ads( type => 'app', orient => 'App-Inbox', force => 1 ) . qq {
        </div>
};


    # print form
    $body .= qq {
        <form action="$LJ::SITEROOT/tools/notifications.bml?authas=$authas" method="POST" id="EditNotificationsForm">
        };

    # print number of new alerts
    my $unread_count = $inbox->unread_count;
    my $alert_plural = $unread_count == 1 ? 'message' : 'messages';
    $alert_plural .= $unread_count ? '!' : '.';

    # check all checkbox
    my $checkall = LJ::html_check({
        id      => "InboxItem_CheckAll",
    });

    my $disabled = $unread_count ? '' : 'disabled';

    # Pagination
    my $page = int($POST{page} || $GET{page});
    $page ||= 1;

    my $page_limit = 15;

    $page = 1 if $page < 1;
    my $last_page = POSIX::floor((scalar @notifications) / $page_limit);
    $page = $last_page if $page > $last_page && $last_page > 1;

    my $prev_disabled = ($page <= 1) ? 'disabled' : '';
    my $next_disabled = ($page >= $last_page) ? 'disabled' : '';

    # create table of notifications
    my $notificationtable = qq {
     <div id="NotificationTable">
        <span class="esnlinks">Message Center | <a href="$LJ::SITEROOT/manage/subscriptions/">Manage Settings</a></span>
        <div class="inbox_newitems">You have $unread_count new $alert_plural <a href="$LJ::SITEROOT/tools/notifications.bml?page=$page">Refresh</a></div>

        <table id="inbox" cellspacing="0" border="0" cellpadding="0">
            <tr class="header">
                <thead>
                    <td class="checkbox">$checkall</td>
                    <td class="actions" colspan="2">
                        <input type="button" value="Read" $disabled onclick="submitAction('markRead');" />
                        <input type="button" value="Unread" onclick="submitAction('markUnread');" />
                        <input type="button" value="Delete" onclick="submitAction('delete');" />
                        <input type="button" value="Mark All Read" $disabled onclick="submitAction('markAllRead');" />

                        <span class="Pages">
                            Page $page of $last_page
                            <input type="button" id="Page_Prev" value="Previous" $prev_disabled />
                            <input type="button" id="Page_Next" value="Next" $next_disabled />
                        </span>
                    </td>
                </thead>
            </tr>
        };

    unless (@notifications) {
        $notificationtable .= qq {
            <tr><td colspan="3">(No notifications)</td></tr>
            };
    }

    @notifications = sort { $b->when_unixtime <=> $a->when_unixtime } @notifications;

    # print out notifications
    my $rownum = 0;

    my $starting_index = ($page - 1) * $page_limit;
    for (my $i = $starting_index; $i < $starting_index + $page_limit; $i++) {
        my $inbox_item = $notifications[$i];
        last unless $inbox_item;

        my $qid  = $inbox_item->qid;

        my $read_class = $inbox_item->read ? "InboxItem_Read" : "InboxItem_Unread";

        my $title  = $inbox_item->title;

        my $checkbox_name = "InboxItem_Check-$qid";
        my $checkbox = LJ::html_check({
            id    => $checkbox_name,
            class => "InboxItem_Check",
            name  => $checkbox_name,
        });

        my $when = LJ::ago_text(time() - $inbox_item->when_unixtime);
        my $contents = $inbox_item->as_html || '';

        my $row_class = ($rownum++ % 2 == 0) ? "InboxItem_Meta" : "InboxItem_Meta alt";

        my $expandbtn = '';
        my $content_div = '';

        if ($contents) {
            my $expanded = $GET{expand} && $GET{expand} == $qid;
            my $img = $expanded ? "expand.gif" : "collapse.gif";

            $expandbtn = qq {
                <a href="$LJ::SITEROOT/tools/notifications.bml?page=$page&expand=$qid"><img src="$LJ::IMGPREFIX/$img" class="InboxItem_Expand" /></a>
                };

            my $display = $expanded ? "block" : "none";

            $content_div = qq {
                <div class="InboxItem_Content" style="display: $display;">$contents</div>
                };
        }

        $notificationtable .= qq {
            <tr class="InboxItem_Row $row_class">
                <td class="checkbox">$checkbox</td>
                <td class="item">
                    $expandbtn
                    <span class="$read_class">$title</span>
                    $content_div
                    </td>
                    <td class="time">$when</td>
                </tr>
        };
    }

    $notificationtable .= '</table></div>';


    $body .= $notificationtable;

    $body .= LJ::html_hidden({
        name  => "EditNotificationsAction",
        id    => "EditNotificationsAction",
        value => "1",
    });

    $body .= LJ::html_hidden({
        name  => "page",
        id    => "pageNum",
        value => $page,
    });

    $body .= qq {
        </form>
        };

    return $body;
}
 _code?>
<=body
title=><?_code return $title; _code?>
head<=

<?_code return $head; _code?>

<script>
    LJVAR.imgprefix = "<?imgprefix?>";
LJ_cmtinfo = {};
LJ_cmtinfo['disableInlineDelete'] = 1;
var pageNum;

DOM.addEventListener(window, "load", setup);

var tableview;
var checkallButton;

function setup (e) {
    tableview = new View();
    checkallButton = new CheckallButton();

  tableview.init({ "view": $("NotificationTable") });
checkallButton.init({
"class": "InboxItem_Check",
         "button": $("InboxItem_CheckAll"),
                   "parent": tableview.getView()
  });

DOM.addEventListener($("Page_Prev"), "click", Page_Prev);
DOM.addEventListener($("Page_Next"), "click", Page_Next);

if ($("pageNum")) pageNum = parseInt($("pageNum").value);
}

function Page_Prev (e) {
    if (pageNum)
        window.location.href = "<?siteroot?>/tools/notifications.bml?page=" + (pageNum - 1);
}

function Page_Next (e) {
    if (pageNum)
        window.location.href = "<?siteroot?>/tools/notifications.bml?page=" + (pageNum + 1);
}

function submitAction(action) {
  var actionField = $("EditNotificationsAction");

  if (!actionField)
    return;

  actionField.value = action;
  $("EditNotificationsForm").submit();
}
</script>

    <style>

</style>

<=head

page?>
