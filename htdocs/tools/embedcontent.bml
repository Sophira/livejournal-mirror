<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use LJ::Auth;
    use LJ::EmbedModule;
    use LJ::Maps;

    # this can only be accessed from the embed module subdomain
    return "This page cannot be viewed from $LJ::DOMAIN"
        unless LJ::Request->header_in("Host") =~ /.*$LJ::EMBED_MODULE_DOMAIN$/i;

    my $mode = $GET{'mode'} || 'lj-embed';
    if ($mode eq 'lj-map') {
        return LJ::Maps->get_iframe_source(%GET);
    } elsif ($mode eq 'tackthis'){
        ##
        my $api     = $GET{api};
        my $pid_arg = $GET{pid} ? "&pid=$GET{pid}" : ""; ## display specified product id
        my $cat_arg = $GET{cid} ? "&cid=$GET{cid}" : ""; ## category id
        my $server  = $GET{server} eq 'beta' ? 'beta.tackthis.com' : 'www.tackthis.com';

        return qq|<script src="http://$server/widget-validate-iframe.php?api=$api$pid_arg$cat_arg" type="text/javascript"></script>|;
    
    } elsif ($mode eq 'ecwid'){
        ##
        my $api     = $GET{api};
        return qq|<div> 
        <script type="text/javascript" src="http://app.ecwid.com/script.js?$api" charset="utf-8"></script> 
        <script type="text/javascript"> xProductBrowser("categoriesPerRow=3","views=grid(3,3) list(10) table(20)","categoryView=grid","searchView=list","style="); </script> 
        <noscript>Your browser does not support JavaScript. Please proceed to <a href="http://verbic.ecwid.com">HTML version of My Test Store</a></noscript> 
        </div>
        |;


    } elsif ($mode eq 'lj-embed') {
        # we should have three GET params: journalid, moduleid, auth_token
        my $journalid = $GET{journalid}+0 or return "No journalid specified";
        my $moduleid  = $GET{moduleid};
        return "No module id specified" unless defined $moduleid;
        $moduleid += 0;
        my $preview = $GET{preview};
        # check auth_token
        return "Invalid auth string" unless
            LJ::Auth->check_sessionless_auth_token('embedcontent', %GET);

        # ok we're cool, return content
        my $content = LJ::EmbedModule->module_content(
            journalid => $journalid,
            moduleid  => $moduleid,
            preview => $preview,
            attrstrip => [qw{width height}],
        );
        LJ::run_hooks('modify_embed_content', \$content, \%GET);

        my $transform_youtube_url = sub {
            my $url = shift;
            if ($url =~ /\?/) {
                $url =~ s/\?/?wmode=opaque&/;
            } else {
                $url .= "?wmode=opaque";
            }
            return $url;
        };

        $content =~ s!src=(["'])(https?://www\.youtube\.com/embed/.*?)\1! 'src=' . $1 . $transform_youtube_url->($2) . $1 !ige;

        return qq {<!DOCTYPE html><html><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><title>Video Iframe</title><style>HTML,BODY {overflow: hidden; margin: 0; padding: 0; border: 0; background: transparent;} IFRAME {width: 100%; height: 100%;}</style></head><body>$content</body></html>};
    }
} 
_code?>

