<?_info
nocache=>1
_info?><?page
title=>Delete Comment
body<=

<?_code
{
    use strict;
    use vars qw(%GET %POST);

    my $remote = LJ::get_remote();
    return LJ::bad_input($ML{'error.noremote'})
        unless $remote;

    # $u is user object of journal that owns the talkpost
    my $u = LJ::load_user($GET{'journal'});
    return LJ::bad_input($ML{'error.nojournal'})
        unless $u;

    return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

    my $dbcm = LJ::get_cluster_master($u);
    return "<?h1 $ML{'Error'} h1?><?p $ML{'error.nodb'} p?>"
        unless $dbcm;

    # $tp is a hashref of info about this individual talkpost row
    my $tpid = $GET{'id'} >> 8;
    my $tp = $dbcm->selectrow_hashref("SELECT jtalkid AS 'talkid', nodetype, state, " .
                                      "nodeid AS 'itemid', parenttalkid, journalid, posterid " .
                                      "FROM talk2 ".
                                      "WHERE journalid=? AND jtalkid=?",
                                      undef, $u->{'userid'}, $tpid);

    return LJ::bad_input("The specified comment does not exist.")
        unless $tp;

    return LJ::bad_input("Invalid comment type.  This page only handles comments on journal entries.")
        unless $tp->{'nodetype'} eq 'L';

    return LJ::bad_input("The specified comment has already been deleted.")
        if $tp->{'state'} eq "D";

    # get username of poster
    $tp->{'userpost'} = LJ::get_username($tp->{'posterid'});

    # userid of user who posted journal entry
    my $jposterid = $dbcm->selectrow_array("SELECT posterid FROM log2 WHERE " .
                                           "journalid=? AND jitemid=?",
                                           undef, $u->{'userid'}, $tp->{'itemid'});
    my $jposter = LJ::load_userid($jposterid);

    # can $remote delete this comment?
    unless (LJ::Talk::can_delete($remote, $u, $jposter, $tp->{'userpost'})) {
        return "<?h1 $ML{'Error'} h1?><?p A comment may only be deleted by the author of the journal entry, or the author of the comment. If the entry has been posted in a community, then the maintainer(s) of the community may also delete comments. p?>";
    }

    my $can_manage = LJ::can_manage($remote, $u);
    my $can_ban = $can_manage && $remote->{'userid'} != $tp->{'posterid'};


    ### perform actions
    if (LJ::did_post() && $POST{'confirm'}) {

        # if it's screened, unscreen it first to properly adjust
        # replycount and the hasscreened logprop
        LJ::Talk::unscreen_comment($u, $tp->{'itemid'}, $tpid)
            if $tp->{'state'} eq 'S';

        my $num = LJ::delete_comments($u, "L", $tp->{'itemid'}, $tpid);
        LJ::replycount_do($u, $tp->{'itemid'}, "decr", $num);
        LJ::Talk::update_commentalter($u, $tp->{'itemid'});

        # ban the user, if selected
        my $and;
        if ($POST{'ban'} && $can_ban) {
            LJ::set_rel($u->{'userid'}, $tp->{'posterid'}, 'B');
            $and .= " Additionally, user <b>$tp->{'userpost'}</b> has been banned from commenting in your journal.";
        }

        return "<?h1 Deleted h1?><?p The comment has been deleted.$and p?>";
    }

    ### show edit form

    my $ret;
    $ret .= "<?h1 Delete this comment? h1?>";
    $ret .= "<?p Are you sure you want to delete this comment? p?>\n\n";
    $ret .= "<form method='post' action='delcomment.bml?";
    $ret .= "journal=$u->{'user'}&id=$GET{'id'}'>\n";

    $ret .= "<p align='center'>" . LJ::html_submit('confirm', "Yes, delete it!") . "</p>\n";

    if ($can_ban) {
        $ret .= "<p>" . LJ::html_check({ 'type' => 'check', 'name' => 'ban', 'id' => 'ban' });
        $ret .= "<label for='ban'>And also ban user <b>$tp->{'userpost'}</b> from ever commenting again.</label></p>";
    }

    if ($can_manage) {
        $ret .= "<p><b>Note:</b> From the <a href='/editinfo.bml?authas=$u->{'user'}'>Edit Personal Info & Settings</a> page you can choose whether to allow <i>all</i>, <i>registered users</i>, or <i>friends only</i> to post.</p>";
    }

    $ret .= "</form>\n";

    return $ret;
}
_code?>

<=body
page?><?_c <LJDEP>
link: htdocs/editinfo.bml
post: htdocs/delcomment.bml
</LJDEP> _c?>
