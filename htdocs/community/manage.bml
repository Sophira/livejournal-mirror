<?page
title=><?_ml .title _ml?>
body<=
<?_code

 use strict;
 use vars qw(%GET %POST);

 return LJ::server_down_html() if ($LJ::SERVER_DOWN);

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my $ret;
 my $remote = LJ::get_remote($dbs);

 unless ($remote) {
    $ret .= "<?h1 $ML{'Error'} h1?><?p $ML{'error.noremote'} p?>";
    return $ret;
 }

 $ret .= "<?h1 $ML{'.commlist.header'} h1?><?p $ML{'.commlist.text'} p?>";
 $ret .= "<div style='margin: 15px 0 15px 40px'>";

 my %show;

 # what communities does remote 
 my $cids = LJ::load_rel_target($dbs, $remote, 'A');
 my %admin;
 if ($cids) { foreach (@$cids) { $admin{$_} = $show{$_} = 1; } }

 # keep track of what communities remote moderates
 my $mods = LJ::load_rel_target($dbs, $remote, 'M');
 my %mods; 
 my %modcount;
 if ($mods) { foreach (@$mods) { $mods{$_} = $show{$_} = 1; } }

 if (%show) {
    my $in = join(',', keys %show);
    my %names = ();
 
    my $sth = $dbr->prepare("SELECT u.userid, u.clusterid, u.user, u.name FROM user u, community c ".
                            "WHERE u.userid IN ($in) AND u.userid=c.userid ".
                            "AND u.statusvis='V'");
    $sth->execute;
    my $udbr;
    while (my ($uid, $clusterid, $user, $name) = $sth->fetchrow_array) {
        $names{$uid} = [ $user, $name ]; 
        if ($mods{$uid}) {
            $udbr = LJ::get_cluster_reader($clusterid);
            $modcount{$uid} = $udbr->selectrow_array("SELECT COUNT(*) FROM modlog WHERE journalid=$uid") || 0;
        }
    }

    $ret .= "<table cellpadding='5'><tr><td>$ML{'.commlist.username'}</td>" .
       "<td>$ML{'.commlist.title'}</td><td>$ML{'.commlist.actions'}</td></tr>";
    foreach my $id (sort { $names{$a}->[1] cmp $names{$b}->[1] } keys %names) {
        my $user = $names{$id}->[0];
        my $name = $names{$id}->[1];
        $ret .= "<tr><td><?ljcomm $user ljcomm?></td><td>" . LJ::eall($name) . "</td><td>";
        if ($admin{$id}) {
            $ret .= "<b>" . BML::ml('Actionlink', {
                'link'=>"<a href='/community/settings.bml?comm=$user'>$ML{'.commlist.actsettings'}</a>"}) . "</b>&nbsp;&nbsp;";
            $ret .= "<b>" . BML::ml('Actionlink', {
                'link'=>"<a href='/community/members.bml?comm=$user'>$ML{'.commlist.actmembers'}</a>"}) . "</b>&nbsp;&nbsp;";
        }
        if ($mods{$id}) {
            my $num = $modcount{$id} || "</b>0<b>"; # relying on this to be <b>-wrapped
            $ret .= "<b>" . BML::ml('Actionlink', {
                'link'=>"<a href='/community/moderate.bml?comm=$user'>" .
                    BML::ml('.commlist.actmoderate', {'num'=>$num}) . "</a>"}) .
                    "</b>&nbsp;&nbsp;";
        }
        $ret .= "</td></tr>";
    }
    $ret .= "</table>";
 } else {
    $ret .= "$ML{'.commlist.none'}";
 }

 $ret .= "</div>";

 $ret .= "<?h1 $ML{'.create.header'} h1?>";
 $ret .= "<?p " . BML::ml('.create.text', {'link'=>'/community/settings.bml?mode=create'}) . " p?>";

 return $ret;

_code?>

<=body
page?>

