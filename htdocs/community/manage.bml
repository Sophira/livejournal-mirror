<?page
title=><?_ml .title _ml?>
body<=
<?_code

 use strict;
 use vars qw(%GET %POST);

 return LJ::server_down_html() if ($LJ::SERVER_DOWN);

 LJ::set_active_crumb('managecommunity');

 my $dbr = LJ::get_db_reader();

 my $ret;
 my $remote = LJ::get_remote();

 unless ($remote) {
    $ret .= "<?h1 $ML{'Error'} h1?><?p $ML{'error.noremote'} p?>";
    return $ret;
 }

 $ret .= "<?h1 $ML{'.commlist.header'} h1?><?p $ML{'.commlist.text'} p?>";
 $ret .= "<div style='margin: 15px 0 15px 40px'>";

 my %show;

 # what communities does remote 
 my $cids = LJ::load_rel_target($remote, 'A');
 my %admin;
 if ($cids) { foreach (@$cids) { $admin{$_} = $show{$_} = 1; } }

 # keep track of what communities remote moderates
 my $mods = LJ::load_rel_target($remote, 'M');
 my %mods; 
 my %modcount;
 if ($mods) { foreach (@$mods) { $mods{$_} = $show{$_} = 1; } }

 my %names = ();
 if (%show) {
    my $in = join(',', keys %show);
    my $sth = $dbr->prepare("SELECT u.userid, u.clusterid, u.user, u.name FROM user u, community c ".
                            "WHERE u.userid IN ($in) AND u.userid=c.userid ".
                            "AND u.statusvis<>'D' AND u.statusvis<>'X'");
    $sth->execute;
    my $udbr;
    while (my ($uid, $clusterid, $user, $name) = $sth->fetchrow_array) {
        $names{$uid} = [ $user, $name, -1 ]; 
        if ($mods{$uid}) {
            $udbr = LJ::get_cluster_reader($clusterid);
            my $sql = "SELECT COUNT(*) FROM modlog WHERE journalid=$uid";
            $modcount{$uid} = $names{$uid}[2] = $udbr->selectrow_array($sql) || 0;
        }
    }
 }

 # deleted and expunged communities won't show up in this
 if (%names) {

    # Make up the first table row, linking to the other sort methods
    my @snames;
    $ret .= "<table cellpadding='5'><tr>";

    if (!defined $GET{'sortby'} || $GET{'sortby'} eq 'username') {
        $ret .= "<th>$ML{'.commlist.username'}</th>";
        @snames = sort { $names{$a}->[0] cmp $names{$b}->[0] } keys %names;
    } else {
        $ret .= "<th><a href='".BML::self_link({'sortby' => 'username'}) . "'>$ML{'.commlist.username'}</a></th>";
    }

    if ($GET{'sortby'} eq 'title') {
        $ret .= "<th>$ML{'.commlist.title'}</th>";
        @snames = sort { $names{$a}->[1] cmp $names{$b}->[1] } keys %names;
    } else {
        $ret .= "<th><a href='".BML::self_link({'sortby' => 'title'}) . "'>$ML{'.commlist.title'}</a></th>";
    }

    $ret .= "<th>$ML{'.commlist.actions'}</th>";

    if ($GET{'sortby'} eq 'mod') {
        $ret .= "<th>$ML{'.commlist.moderation'}</th>";
        @snames = sort { $names{$b}->[2] <=> $names{$a}->[2] } keys %names;
    } elsif (defined $mods) {
        $ret .= "<th><a href='".BML::self_link({'sortby' => 'mod'}) . "'>$ML{'.commlist.moderation'}</a></th>";
    }

    foreach my $id (@snames) {
        my $user = $names{$id}->[0];
        my $name = $names{$id}->[1];
        $ret .= "<tr><td><?ljcomm $user ljcomm?></td><td>" . LJ::eall($name) . "</td><td>";
        if ($admin{$id}) {
            $ret .= BML::ml('Actionlink', {
                'link'=>"<a href='/community/settings.bml?comm=$user'>$ML{'.commlist.actsettings2'}</a>"}) . "&nbsp;&nbsp;";
            $ret .= BML::ml('Actionlink', {
                'link'=>"<a href='/community/members.bml?comm=$user'>$ML{'.commlist.actmembers2'}</a>"}) . "&nbsp;&nbsp;";
            $ret .= BML::ml('Actionlink', {
                'link'=>"<a href='/editinfo.bml?authas=$user'>$ML{'.commlist.actinfo'}</a>"}) . "&nbsp;&nbsp;";
        }
        $ret .= "</td><td align='center'>";
        if ($mods{$id}) {
            my $num = $modcount{$id} || "0"; # relying on this to be <b>-wrapped
            $ret .= "<a href='/community/moderate.bml?comm=$user'>$num</a>";
        }
        $ret .= "</td></tr>";
    }
    $ret .= "</table>";
 } else {
    $ret .= "$ML{'.commlist.none'}";
 }

 $ret .= "</div>";

 $ret .= "<?h1 $ML{'.create.header'} h1?>";
 $ret .= "<?p " . BML::ml('.create.text', {'link'=>'/community/settings.bml?mode=create'}) . " p?>";

 return $ret;

_code?>

<=body
page?>

