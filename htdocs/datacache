#!/usr/bin/perl
#

use strict;
use FCGI;

require "$ENV{'LJHOME'}/cgi-bin/ljlib.pl";
require "$ENV{'LJHOME'}/cgi-bin/ljprotocol.pl";

use constant CACHE_TIME => 300;  # 5 minutes

REQUEST:
    while(LJ::start_request() && FCGI::accept() >= 0) 
{
    my $dbs = LJ::get_dbs();
    my $dbh = $dbs->{'dbh'};
    my $dbr = $dbs->{'reader'};
    
    my %FORM = ();
    LJ::get_form_data(\%FORM);
    
    print "Content-type: text/plain\n";
    print "Expires: ", LJ::time_to_http(time() + CACHE_TIME), "\n";
    print "\n";

    my $sort = "rlogtime";
    my $userid = $FORM{'userid'} + 0;
    if ($FORM{'sort'} eq "revttime") { $sort = "revttime"; }
    print "# sort=$sort, userid=$userid\n";
    my $beot = $LJ::EndOfTime - 1;  # right before end of time
    my $sec_sql;

    my $limit = 2000;  # some might not be visible, so load twice as many (guess)
    if ($FORM{'notfriend'}) {
	$sec_sql = "AND security='public'";
	$limit = $LJ::MAX_SCROLLBACK_FRIENDS || 1000;
    }
    
    my $sql = ("SELECT itemid, security, allowmask, ownerid, posterid, rlogtime ".
	       "FROM log WHERE ownerid=$userid AND rlogtime <= $beot $sec_sql ".
	       "ORDER BY ownerid, $sort ".
	       "LIMIT $limit");
    
    my $sth = $dbr->prepare($sql);
    $sth->execute;
    print $dbh->errmsg, "\n" if $dbh->err;
    while (my $r = $sth->fetchrow_arrayref) {
	print join("\t", @$r), "\n";
    }

}

1;

