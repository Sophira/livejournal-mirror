<?page
title=><?_code return $title; _code?>
windowtitle=><?_ML .title _ML?>

body<=
<?_code
{
    use strict;
#line 7

    LJ::need_res(qw(
                    stc/entry.css
                    stc/editjournal.css
                    stc/widgets/selecttags.css
                    js/inputcomplete.js
                    js/jquery/jquery.ui.position.min.js
                    js/jquery/jquery.ui.autocomplete.min.js
                    js/jquery/jquery.bgiframe.js
                    js/gears_init.js
                    js/scanner.js
                    js/photobucket_jw.js
                    ));
    if (!LJ::is_enabled("delayed_entries")) {
          return LJ::error_list("This feature is disabled.");
    }

    my $ret = '';
    my $page_name = 'scheduled_posts.bml';
    my $items_per_page = 20;
    my $skip = $GET{'skip'} || 0;
    my $usejournal = $GET{'usejournal'};
    my $only_me_checked = $GET{'only_me'};
    my $getextra = $usejournal ? "?usejournal=$usejournal" : undef;

    if ($only_me_checked) {
        $getextra = $getextra ? "$getextra&only_me=1" : '?only_me=1';
    } 

    my $remote = LJ::get_remote();

    return "<?needlogin?>" unless $remote;

    my $usejournal_u = LJ::load_user ($usejournal || $remote->user);
    if ($remote->underage) {
        return BML::redirect("$LJ::SITEROOT/agecheck/?s=1");
    }

    my $is_admin = LJ::check_priv($remote, "canview", "scheduled");
    my $can_viewall = LJ::check_priv($remote, "canview", "*");

    my $viewsome = !!$is_admin;
    my $viewall  = ($can_viewall && $GET{'viewall'} == 1);

    LJ::statushistory_add( $usejournal_u->userid,
                           $remote->userid,
                           "viewall",
                           "scheduled: username: $usejournal_u->{'user'}, statusvis: $usejournal_u->{'statusvis'}");

    my $entry_chooser = sub {
        my $ref = shift;
        my %opts = @_;

        my @res = @$ref;
        my $show_ad = $opts{show_ad} ? 1 : 0;

        my ( $link_prev, $link_next );
        my $is_first_page = $opts{'first_page'};

        if ($opts{'prev'} || $opts{'next'} || !$is_first_page ) {
            if ( $opts{'prev'} || !$is_first_page ) {
                $link_prev = "$LJ::SITEROOT/manage/$page_name$getextra" .
                             ($getextra ? "&" : "?") .
                             "skip=$opts{prev}";
            }

            if ($opts{'next'}) {
                $link_next = "$LJ::SITEROOT/manage/$page_name$getextra" .
                             ($getextra ? "&" : "?") .
                             "skip=$opts{next}";
            }
        }

        my @entries;

        my $journal = LJ::load_user($usejournal) || $remote;
        foreach my $e_raw (@res) {
            if ( $e_raw->{'delayed_obj'} ) {
                push @entries,
                    $e_raw->{'delayed_obj'};
            }
        }

        my $adhtml = '';
        if ($show_ad) {
            $adhtml = LJ::get_ads(
                { 'location' => 'bml.editjournal', 'ljadwrapper' => 1 } );
        }

        return LJ::Widget::EntryChooser->render(
            'link_prev'    => $link_prev,
            'link_next'    => $link_next,
            'show_posters' => $usejournal ? 1 : 0,
            'entries'      => \@entries,
            'adhtml'       => $adhtml,
            'scheduled'    => BML::ml('.date.scheduled'),
        );
    };

    my $append_delayed = sub {
        my ($u, $delayed_entries) = @_;
        my @ordered;

        foreach my $ditem (@$delayed_entries) {
            my $entry = LJ::DelayedEntry->get_entry_by_id( $u,
                                                           $ditem,
                                                           { 'viewsome'=> $viewsome,
                                                             'viewall' => $viewall, });

            push @ordered, {
                            'alldatepart'        => $entry->alldatepart ,
                            'system_alldatepart' => $entry->system_alldatepart,
                            'allowmask'          => $entry->allowmask,
                            'posterid'           => $entry->posterid,
                            'eventtime'          => $entry->posttime,
                            'security'           => $entry->security,
                            'logtime'            => $entry->logtime,
                            'delayed_obj'        => $entry,
                           };
        }
        return @ordered;
    };

    my $delayed_entries = LJ::DelayedEntry->get_entries_by_journal($usejournal_u,
                                                                   { 'skip'    => $skip,
                                                                     'show'    => $items_per_page + 1,
                                                                     'only_my' => $only_me_checked,
                                                                     'viewsome'=> $viewsome,
                                                                     'viewall' => $viewall, });

    my $have_next_page =  scalar @$delayed_entries > $items_per_page;
    if ($have_next_page) {
        pop @$delayed_entries;
    }
    my @recent_entries = $append_delayed->($usejournal_u, $delayed_entries);

    # draw the page
    LJ::set_active_crumb('scheduledposts');

    $ret .= "<table style='width: 100%;'><tr><td>";

    # header
    $ret .= "<div class='b-editentries-header'>";
    $ret .= "<h1>" . BML::ml('.title') . "</h1>";

    $ret .= "<form action='$page_name$getextra' method='get' class='b-editentries-form'>\n";
    $ret .= "<p>" . LJ::html_text( { 'name'        => 'usejournal', 
                                     'size'        => '20', 
                                     'mfaxlength'  => '15', 
                                     'value'       => $GET{'usejournal'} || $POST{'usejournal'}, 
                                     'class'       => 'b-editentries-comm', 
                                     'placeholder' => BML::ml('.input.journal') } );

    $ret .= LJ::html_submit(undef, $ML{'.btn.search'}) . "</p>";
    $ret .= "<p>" . LJ::html_check( { 'name'     => 'only_me', 
                                      'id'       => 'only_me',
                                      'value'    => '1', 
                                      'selected' =>  $only_me_checked } );

    $ret .= "<label for='only_me'>".$ML{'.only_my_entries'}."</label></p>";
    $ret .= "</form>\n";

    my $usejournal_text = $usejournal ? "?usejournal=$usejournal&" : '';

    if ( !$usejournal_u || $usejournal_u->is_community ) {
        $ret .= "<p><a href='$LJ::SITEROOT/manage/$page_name'>" . BML::ml('.lnk.journal') . "</a></p>";
    }
	
    my $timezone = $remote->prop("timezone");
    if ($timezone) {
		$ret .="<div class='b-editentries-timezone show-timezone'>";
        $ret .= BML::ml('.date.your_time_zone');
        $ret .= "<a href=\"$LJ::SITEROOT/manage/settings/?cat=display\">(";
        $ret .= $timezone;
        $ret .= ')</a>';
		$ret .="</div>";
    } else {
		$ret .="<div class='b-editentries-timezone'>";
        $ret .= BML::ml('.date.gmt');
        $ret .= "<a href=\"$LJ::SITEROOT/manage/settings/?cat=display\">";
        $ret .= BML::ml('.date.set_time_zone');
        $ret .= '</a>';
		$ret .="</div>";
    }
    $ret .= $entry_chooser->( \@recent_entries,
                                first_page   => $skip ? 0 : 1,
                                prev         => $skip > $items_per_page ? $skip - $items_per_page : 0,
                                next         => $have_next_page         ? $skip + $items_per_page : 0 );

    $ret .= "</div></td></tr></table>";
    return $ret;    
}
_code?>
<=body
page?>
