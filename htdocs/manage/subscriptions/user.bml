<?page
body<=
<?_code
{
    use strict;
    use vars qw (%POST %GET $body $title $headextra);
    use Carp qw(croak);

    $title = 'Manage Message Settings';

    return "Not ready" if $LJ::DISABLED{'esn'};

    use Class::Autouse qw(LJ::NotificationMethod LJ::Event);

    BML::decl_params(
                     lj_form_auth => qr/./,
                     journal      => 'word',
                     event        => 'word',
                     _default     => qr/./,
                     );

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $journal = LJ::load_user($GET{journal}) or return LJ::bad_input("No journal specified");

    return BML::redirect("$LJ::SITEROOT/manage/subscriptions/")
        if LJ::u_equals($remote, $journal);

    my $event = $GET{event};

    # what classes to display on this page
    my $categories = [{ "notices" => [
        map {
            LJ::Subscription::Pending->new(
                $remote,
                journal => $journal,
                flags   => LJ::Subscription::TRACKING,
                %$_
            )
        }
        grep { ! $event || $event eq $_->{event} }
        (
            { event => "JournalNewEntry", arg1    => '?' },
            { event => "JournalNewEntry" },
            { event => "NewUserpic", disabled => ! $remote->get_cap('track_user_newuserpic') },
            { event => "Birthday" },
        )
    ]}];

    unless (LJ::User->is_protected_username($journal->user)) {
        if (!$event || $event eq "UserExpunged") {
            push @{@$categories[0]->{"notices"}},
                LJ::Subscription::Pending->new(
                    $remote,
                    event   => "UserExpunged",
                    journal => $journal,
                    flags   => LJ::Subscription::TRACKING,
                );
        }
    }

    return LJ::subscribe_interface(
                                   $remote,
                                   categories => $categories,
                                   journal    => $journal,
                                   post_to_settings_page => 1,
                                   );

}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<?_code return $headextra; _code?>
<=head
<=body
page?>

