<?page
body<=
<?_code
{
    use strict;
    use vars qw (%POST %GET $body $title $headextra @errors);
    use Carp qw(croak);

    $title = 'Manage Message Settings';

    return "Not ready" if $LJ::DISABLED{'esn'};

    use Class::Autouse qw(LJ::NotificationMethod LJ::Event);

    BML::decl_params(
                     lj_form_auth => qr/./,
                     journal      => 'word',
                     talkid      => 'digits',
                     itemid      => 'digits',
                     );

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $ditemid = $POST{'itemid'} || $GET{'itemid'};
    my $dtalkid = $POST{'talkid'} || $GET{'talkid'};
    my $journal = $POST{'journal'} || $GET{'journal'};

    my $journal = LJ::load_user($journal) or return LJ::error_list("Invalid journal '$journal'");

    return LJ::error_list("No entry specified") unless $dtalkid || $ditemid;

    my $comment = LJ::Comment->new($journal, dtalkid => $dtalkid) if $dtalkid;

    return $LJ::error_list("Invalid comment") if ! $comment || ! $comment->visible_to($remote);
    return $LJ::error_list("This comment has been deleted.") if $comment->is_deleted;

    my $entry = $comment->entry;
    $ditemid ||= $entry->ditemid;

    my $thread_sub = LJ::Subscription::Pending->new(
                                                    $remote,
                                                    journal          => $journal,
                                                    event            => 'JournalNewComment',
                                                    arg1             => $ditemid,
                                                    arg2             => $comment && $comment->jtalkid,
                                                    default_selected => 1,
                                                    flags            => LJ::Subscription::TRACKING,
                                                    );

    my $can_watch = $thread_sub->available_for_user;

    push @errors, "Your account level doesn't allow watching threads, but you can still watch the whole post by clicking below"
        unless $can_watch;

    my @pending = $thread_sub;

    push @pending, LJ::Subscription::Pending->new(
                                                  $remote,
                                                  journal => $journal,
                                                  event   => 'JournalNewComment',
                                                  arg1    => $ditemid,
                                                  default_selected => 1,
                                                  flags   => LJ::Subscription::TRACKING,
                                                  ) unless $can_watch;

    my $categories = [
                      {
                          'Comments' => [
                                         @pending,
                                         ],
                                     },
                      ];

    return LJ::subscribe_interface(
                                   $remote,
                                   categories => $categories,
                                   journal => $journal,
                                   ret_url => ($can_watch ? $comment->url : $entry->url),
                                   );

}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<style type='text/css'>
</style>
<?_code return $headextra; _code?>
<=head
<=body
page?>

