<?page
title=>Email gateway settings
body<=
<?_code
{
    use strict;
    use vars qw(%POST %GET);

    return "Sorry, this site is not configured to allow updating your
        journal via email." unless $LJ::EMAIL_POST_DOMAIN;
    return LJ::server_down_html() if $LJ::SERVER_DOWN;

    my $u = LJ::get_remote();
    my $mode = $GET{mode};
    $mode = 'help' unless $u;

    return $LJ::MSG_READONLY_USER if LJ::get_cap($u, "readonly");

    # Help text
    if ($mode eq 'help') {

        my $ret;
        my $need_login;
        my $user = $u ? $u->{user} : 'exampleusername';
        $need_login = 1 unless $u;

        LJ::load_user_props($u, qw(emailpost_pin emailpost_allowfrom));
        my @address = split(/\s*,\s*/, $u->{emailpost_allowfrom});
        my $addr = $address[0] || 'allowed_sender@example.com';
        my $pin = $u->{emailpost_pin} || 'PIN';
        my $to = "To: $user" . '@' . $LJ::EMAIL_POST_DOMAIN . '<br />'; 
        my $subject = "Subject: Neat, I can post via email." . '<br /><br />';
        my $from = "From: $addr <br />";
        my $body = "This is the body of my post.";

        if ($need_login) {
            $ret .= '<?h1 Please log in! h1?>';
            $ret .= "<?p $ML{'error.noremote'} p?>";
        }

        $ret .= '<?h1 How does this feature work? h1?>';
        $ret .= '<?p Email posting uses normal email messages to post to your journal or a community.
            Your PIN needs to be embedded in the email address, subject, or body of the message.
            Embed your PIN by prefixing it with the <b>+</b> symbol.  You must be sending the message
            from an email address on your "Allowed sender addresses" list. If you embed your PIN
            in either the subject or the body, it will be automatically removed before posting. p?>';

        $ret .= '<?h1 Basic usage h1?><br />';

        $ret .= '<?h2 PIN in email address h2?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= "To: $user". '<b>+' . $pin . '</b>@' . $LJ::EMAIL_POST_DOMAIN . '<br />';
        $ret .= $from . $subject . $body;
        $ret .= '</div><br />';
        
        $ret .= '<?h2 PIN in subject h2?>';
        $ret .= '<div style="margin-left:40px">' ;
        $ret .= $to . $from;
        $ret .= "Subject: <b>+$pin</b> Post subject <br /><br />";
        $ret .= $body;
        $ret .= '</div><br />';

        $ret .= '<?h2 PIN in body h2?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= $to . $from . $subject;
        $ret .= "<b>+$pin</b> " . $body;
        $ret .= '</div><br /><br />';

        $ret .= '<?h1 Optional features h1?><br />';

        $ret .= '<?h2 Posting to a community h2?>';
        $ret .= '<?p Simply embed the community name in the email address. p?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= "To: $user" . '.<b>community</b>+' . $pin . '@' . $LJ::EMAIL_POST_DOMAIN . '<br />';
        $ret .= $from . $subject . $body;
        $ret .= '</div><br />';

        $ret .= '<?h2 Removing unwanted text h2?>';
        $ret .= '<?p All text below two or more dashes or underscores ("--" or "__") on a line by itself will be automatically removed. The red text below won\'t show up in your posting. p?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= "To: $user" . '<b>+' . $pin . '</b>@' . $LJ::EMAIL_POST_DOMAIN . '<br />';
        $ret .= $from . $subject . $body;
        $ret .= "<br />--<br /><font color='red'>";
        $ret .= "This text and anything underneath it will be ignored, including automatic signatures added by free email services.<br />";
        $ret .= '_' x 50 . "<br />Try the all new SUPER FREE MAIL version 17 today!!!<br />";
        $ret .= '</font></div><br />';

        $ret .= '<?h2 Hyphens and underscores h2?>';
        $ret .= '<?p To compensate for mobile phones that don\'t have an underscore key, you may substitute a hyphen in their place inside any user or community account name. The hyphens will be automatically converted to underscores. p?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= 'To: <b>some-user.some-community</b>+' . $pin . '</b>@' . $LJ::EMAIL_POST_DOMAIN . '<br />';
        $ret .= $from . $subject . $body;
        $ret .= '</div><br /><br />';

        $ret .= '<?h1 Advanced usage h1?><br />';

        $ret .= '<a name="pgp"></a>';
        $ret .= '<?h2 PGP/GPG message signing <img src="/img/key.gif" width="16" height="16"> h2?>';
        $ret .= '<?p If you specify "<b>PGP</b>" as your PIN,
                    allowed sender addresses and saved PIN are completely ignored.
                    Your email will only be posted if it is signed with a valid PGP/GPG private key.
                    You must first upload your public key <a href="/manage/pubkey.bml">here</a>. p?>';
        $ret .= '<div style="margin-left:40px">';
        $ret .= "To: $user<b>+PGP</b>" . '@' . $LJ::EMAIL_POST_DOMAIN . '<br />';
        $ret .= 'From: anywhere@example.com <br />';
        $ret .= $subject . $body;
        $ret .= '<br />This body should be properly signed with my private key.'; 
        $ret .= '</div><br />';

        return $ret;
    }

    # Update settings
    if ($POST{userid} == $u->{userid}) {
        my @errors;

        my $addresses = $POST{addresses};
        my $pin = $POST{pin};

        # needs $ML{'.error.pin'}
        $pin =~ s/\s+//g;
        push @errors, "Your PIN is currently limited to alphabet
            characters and numbers, and needs to be at least 4
            characters long." unless $pin =~ /^([a-z0-9]){4,20}$/i or $pin eq '';

        # Check email, add flags if needed.
        my %allowed;
        my $addrcount = 0;
        foreach (split(/\0/, $addresses)) {
            s/\s+//g;
            next unless $_;
            next if length > 80;
            $_ = lc;
            push @errors, "Invalid email address: " . LJ::ehtml($_) unless /\@/;
            $allowed{$_} = {};
            $allowed{$_}->{'get_errors'} = 1 if $POST{"check_$addrcount"};
            $addrcount++;
        }
        return LJ::bad_input(@errors) if @errors;

        LJ::Emailpost::set_allowed_senders($u, \%allowed);
        LJ::set_userprop($u, "emailpost_pin", $pin);

        my $ret;
        $ret .= "<?h1 Success h1?>";
        $ret .= "<?p Your email gateway settings have been saved. p?>";
        $ret .= "<?p Click <a href='?mode=help'>here</a> for information on how to use this feature. p?>";
        if ($LJ::HELPURL{emailpost}) {
            $ret .= "<?h1 Instructions h1?>";
            $ret .= "<?p FIXME: link to helpurl p?>";
        }
        return $ret;
    }

    # Initial page
    LJ::load_user_props($u, qw(emailpost_pin));
    my $addrlist = LJ::Emailpost::get_allowed_senders($u);
    my @address;
    foreach (sort keys %$addrlist) { push(@address, $_) }
    
    my $ret;
    $ret .= "<?p If you'd like to be able to update your journal via email, please fill out the following fields. 
        For more help using this feature, check out the <a href='?mode=help'>instructions</a>. p?>";

    unless (LJ::get_cap($u, 'emailpost')) {
        $ret .= "Sorry, updating your journal via email is not available for your account type.";
        return $ret;
    }

    $ret .= "<?h1 Allowed sender addresses h1?>";
    $ret .= "<?p Only the addresses listed below are allowed to post to your account via the email gateway. 
        If no addresses are listed, posting via the email gateway will be disabled for your account. 
        Marked addresses will receive errors if there are any to send. p?>";
    $ret .= "<form method='post' action='emailpost.bml'>\n";
    $ret .= LJ::html_hidden(userid => $u->{userid});
    $ret .= "<div style='margin-left:40px;'>";
    $ret .= '<table border="0"><tr><td>Address:</td><td>Send errors?</td></tr>';
    for(0..2) { # Limited to 3 addresses.
        $ret .= '<tr><td>';
        my $selected = 0;
        $ret .= LJ::html_text({name=>'addresses',
                value=>$address[$_], size=>40, maxlength=>80});
        $ret .= '</td><td>';
        $selected = 1 if $addrlist->{$address[$_]}->{'get_errors'};
        $ret .= '<center>' . 
            LJ::html_check({name => "check_$_", selected => $selected})
            . '</center>';
        $ret .= '</td></tr>';
    }
    $ret .= '</table></div><br />';

    $ret .= "<?h1 PIN h1?>";
    $ret .= "<?p Your PIN is used only for the email gateway. Do not
        use your regular password for this. This way, if someone obtains
        your PIN, they can't obtain full access to your journal.  The PIN
        should be at least 4 characters long, and may only contain alphabet
        characters and/or numbers. p?>";
    $ret .= "<div style='margin-left:40px;'>";
    $ret .= LJ::html_text({name=>'pin', value=>$u->{emailpost_pin}, maxlength=>20});

    $ret .= "<?standout ";
    $ret .= LJ::html_submit($ML{'/manage/phonepost.bml.save'});
    $ret .= " standout?>";
    $ret .= "</form>";
    $ret .= '</div>';
    return $ret;

} _code?>
<=body
page?>
