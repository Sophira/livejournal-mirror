<?_code
{

    use strict;
    use vars qw(%POST %GET);

    my $dbh = LJ::get_db_writer();
    my $remote = LJ::get_remote($dbh);

    return "<b>Error:</b> You don't have the sysban priv."
        unless LJ::check_priv($remote, "sysban");

    ######################################################

    # does the user have privs for everything?
    my $priv_all = 0;
    $priv_all = 1 if LJ::check_priv($remote, "sysban", "*");

    my $ret;

    if ($GET{'banid'}) {

        # load selected ban
        my $ban = $dbh->selectrow_hashref("SELECT *, " .
                                          "(TO_DAYS(banuntil) - TO_DAYS(bandate)) " .
                                          "AS bandays FROM sysban " .
                                          "WHERE banid=?", undef, $GET{'banid'});
        $ban->{'bandays'} ||= 0;

        return BML::ml('backlink', { 'link' => 'sysban.bml', 'text' => 'Back' }) . " " .
            "<p>You do not have the required priv to modify this type of ban.</p>"
            unless $priv_all || LJ::check_priv($remote, "sysban", $ban->{'what'});

        return BML::redirect("sysban.bml")
            if ! $ban->{'banid'} || $ban->{'status'} eq 'expired' ||
               $ban->{'banuntil'} && LJ::mysqldate_to_time($ban->{'banuntil'}) < time();

        # save changes
        if ($POST{'modify_submit'}) {
            my @set = ();

            # if bandays changed, modify banuntil
            if ($POST{'modify_bandays'} != $ban->{'bandays'}) {
                if ($POST{'modify_bandays'} == 0) {
                    $ban->{'banuntil'} = 0;
                } else {
                    $ban->{'banuntil'} = LJ::mysql_time( LJ::mysqldate_to_time($ban->{'bandate'})
                                                         + 60*60*24*$POST{'modify_bandays'});
                }
            }

            # ip ban and we're going to change the value
            if (($POST{'modify_value'} && $POST{'modify_value'} ne $ban->{'value'}) ||
                $POST{'modify_bandays'} != $ban->{'bandays'} ||
                ($POST{'modify_status'} && $POST{'modify_status'} ne $ban->{'status'} &&
                 $POST{'modify_status'} eq 'expired')) {

                if ($ban->{'what'} eq 'ip') {
                    LJ::procnotify_add("unban_ip", { 'ip' => $ban->{'value'} });
                }

                if ($ban->{'what'} eq 'uniq') {
                    LJ::procnotify_add("unban_uniq", { 'uniq' => $ban->{'value'} });
                }
            }

            # what
            if ($POST{'modify_what'} && $POST{'modify_what'} ne $ban->{'what'}) {
                $ban->{'what'} = $POST{'modify_what'};
                push @set, "what=" . $dbh->quote($ban->{'what'});
            }

            # still ip ban and we are going to change the value
            if (($POST{'modify_value'} && $POST{'modify_value'} ne $ban->{'value'}) ||
                $POST{'modify_bandays'} != $ban->{'bandays'} ||
                ($POST{'modify_status'} && $POST{'modify_status'} ne $ban->{'status'} &&
                 $POST{'modify_status'} eq 'active')) {

                if ($ban->{'what'} eq 'ip') {
                    LJ::procnotify_add("ban_ip", { 'ip' => $POST{'modify_value'},
                                                   'exptime' => LJ::mysqldate_to_time($ban->{'banuntil'}) });
                }

                if ($ban->{'what'} eq 'uniq') {
                    LJ::procnotify_add("ban_uniq", { 'uniq' => $POST{'modify_value'},
                                                     'exptime' => LJ::mysqldate_to_time($ban->{'banuntil'}) });
                }
            }

            # value
            if ($POST{'modify_value'} && $POST{'modify_value'} ne $ban->{'value'}) {
                $ban->{'value'} = $POST{'modify_value'};
                push @set, "value=" . $dbh->quote($ban->{'value'});
            }

            # status
            if ($POST{'modify_status'} && $POST{'modify_status'} ne $ban->{'status'}) {
                $ban->{'status'} = ($POST{'modify_status'} eq 'expired' ? 'expired' : 'active');
                push @set, "status=" . $dbh->quote($ban->{'status'});
            }

            # note
            if ($POST{'modify_note'} ne $ban->{'note'}) {
                $ban->{'note'} = $POST{'modify_note'};
                push @set, "note=" . $dbh->quote($ban->{'note'});
            }

            # banuntil
            if ($POST{'modify_bandays'} != $ban->{'bandays'}) {
                $ban->{'bandays'} = $POST{'modify_bandays'};

                if ($POST{'modify_bandays'} == 0) {
                    push @set, "banuntil=NULL";
                } else {
                    push @set, "banuntil=" . $dbh->quote($ban->{'banuntil'});
                }
            }

            # do update
            $dbh->do("UPDATE sysban SET " . join(", ", @set) . " WHERE banid=?", undef, $ban->{'banid'});

            # log in statushistory
            my $msg;
            map { $msg .= " " if $msg;
                  $msg .= "$_=$ban->{$_};" }  qw(banid status bandate banuntil what value note);
            LJ::statushistory_add(0, $remote->{'userid'}, 'sysban_mod', $msg);

            # out of edit mode if we expired this ban
            return BML::redirect("sysban.bml") if $ban->{'status'} eq 'expired';
        }

        # modify form
        $ret .= BML::ml('backlink', { 'link' => 'sysban.bml', 'text' => 'Back' });
        $ret .= "<form method='post' action='sysban.bml?banid=$GET{'banid'}'>\n";
        $ret .= "<h2>Modify Ban #$GET{'banid'}</h2>\n";
        $ret .= "<table>\n";
        $ret .= "<tr><td align='right'>Status: </td><td>";
        $ret .= LJ::html_select({ 'name' => 'modify_status', 'selected' => $ban->{'status'} },
                                ( 'active', 'Active', 'expired', 'Expired' ));
        $ret .= " <small>(cannot undo)</small>\n";
        $ret .= "</td></tr>\n";
        $ret .= "<tr><td align='right'>What: </td><td>";
        $ret .= LJ::html_text({ 'name' => 'modify_what', 'size' => '20',
                                'maxlength' => '20', 'value' => $ban->{'what'} });
        $ret .= "</td></tr>\n";
        $ret .= "<tr><td align='right'>Value: </td><td>";
        $ret .= LJ::html_text({ 'name' => 'modify_value', 'size' => '20',
                                'maxlength' => '80', 'value' => $ban->{'value'} });
        $ret .= "</td></tr>\n";
        $ret .= "<tr><td align='right'>Ban Date: </td><td><b>$ban->{'bandate'}</b></td></tr>\n";
        $ret .= "<tr><td align='right'>Ban Until: </td><td><b>";
        $ret .= $ban->{'banuntil'} || 'forever' . "</b></td></tr>\n";
        $ret .= "<tr><td align='right'>Ban Length: </td><td>";
        $ret .= LJ::html_text({ 'name' => 'modify_bandays', 'size' => '4',
                                'maxlength' => '4', 'value' => $ban->{'bandays'} });
        $ret .= " <small>(days from create time, 0 to ban forever)</small>";
        $ret .= "</td></tr>\n";
        $ret .= "<tr><td align='right'>Note: </td><td>\n";
        $ret .= LJ::html_text({ 'name' => 'modify_note', 'size' => '40',
                                'maxlength' => '255', 'value' => $ban->{'note'} });
        $ret .= "</td></tr>\n";
        $ret .= "<tr><td></td><td>";
        $ret .= LJ::html_submit('modify_submit', 'Save Ban');
        $ret .= "</td><tr>\n";
        $ret .= "</table>\n";
        $ret .= "</form>\n";

        return $ret;
    }

    ######################################################

    # create ban
    if ($POST{'create_submit'} && $POST{'create_what'} && $POST{'create_value'}) {

        return BML::ml('backlink', { 'link' => 'sysban.bml', 'text' => 'Back' }) . " " .
            "<p>You do not have the required priv to create this type of ban.</p>"
            unless $priv_all || LJ::check_priv($remote, "sysban", $POST{'create_what'});

        my $banuntil = "NULL";
        unless ($POST{'create_bandays'} == 0) {
            $banuntil = "NOW() + INTERVAL " . $dbh->quote($POST{'create_bandays'}) . " DAY";
        }

        # do insert
        $dbh->do("INSERT INTO sysban (what, value, note, bandate, banuntil) VALUES (?, ?, ?, NOW(), $banuntil)",
                 undef, $POST{'create_what'}, $POST{'create_value'}, $POST{'create_note'});
        return $dbh->errstr if $dbh->err;

        # special case: creating ip/uniq ban
        if ($POST{'create_what'} eq 'ip') {
            LJ::procnotify_add("ban_ip", { 'ip' => $POST{'create_value'},
                                           'exptime' => LJ::mysqldate_to_time(time() +
                                                        60*60*24*$POST{'create_bandays'}) });
        }

        if ($POST{'create_what'} eq 'uniq') {
            LJ::procnotify_add("ban_uniq", { 'uniq' => $POST{'create_value'},
                                             'exptime' => LJ::mysqldate_to_time(time() +
                                                          60*60*24*$POST{'create_bandays'}) });
        }

        # log in statushistory
        LJ::statushistory_add(0, $remote->{'userid'}, 'sysban_add',
                              "banid=$dbh->{'mysql_insertid'}; status=active; " .
                              "bandate=" . LJ::mysql_time() . "; banuntil=$banuntil; " .
                              "what=$POST{'create_what'}; value=$POST{'create_value'}; " .
                              "note=$POST{'create_note'};");

        return BML::redirect("sysban.bml");
    }    

    # create form
    $ret .= "<form method='post' action='sysban.bml'>\n";
    $ret .= "<h2>Create Ban</h2>\n";
    $ret .= "<table>\n";
    $ret .= "<tr><td align='right'>What: </td><td>";
    $ret .= LJ::html_text({ 'name' => 'create_what', 'size' => '20', 'maxlength' => '20' });
    $ret .= "</td></tr>\n";
    $ret .= "<tr><td align='right'>Value: </td><td>";
    $ret .= LJ::html_text({ 'name' => 'create_value', 'size' => '20', 'maxlength' => '80' });
    $ret .= "</td></tr>\n";
    $ret .= "<tr><td align='right'>Ban Length: </td><td>";
    $ret .= LJ::html_text({ 'name' => 'create_bandays', 'size' => '4', 'maxlength' => '4' });
    $ret .= " <small>(days from create time, 0 to ban forever)</small>";
    $ret .= "</td></tr>\n";
    $ret .= "<tr><td align='right'>Note: </td><td>\n";
    $ret .= LJ::html_text({ 'name' => 'create_note', 'size' => '40', 'maxlength' => '255' });
    $ret .= "</td></tr>\n";
    $ret .= "<tr><td></td><td>";
    $ret .= LJ::html_submit('create_submit', 'Create Ban');
    $ret .= "</td><tr>\n";
    $ret .= "</table>\n";
    $ret .= "</form>\n\n";

    ######################################################

    $ret .= "<hr size='1'>\n\n";

    # saves typing later
    my @cols = qw(banid bandate banuntil what value note);

    # list bans
    my $orderby = 'bandate';
    foreach (qw(banid banuntil what value note)) {
        $orderby = $_ if $GET{'orderby'} eq $_;
    }
    my $flow = $GET{'flow'} eq 'asc' ? 'ASC' : 'DESC';

    # column headings w/ sort links
    $ret .= "<h2>Existing Bans</h2>\n";
    $ret .= "Below is a list of active bans that you have access to view/modify.";

    $ret .= "<table style='margin-top: 20px;' border='1' cellpadding='5' width='100%'>\n<tr>";
    foreach (@cols) {
        my $link = "sysban.bml?orderby=$_";
        $link .= $GET{'orderby'} eq $_ && $GET{'flow'} eq 'asc' ? "&flow=desc" : "&flow=asc";
        $ret .= "<td><b><a href='$link'>$_</a></b></td>";
    }
    $ret .= "</tr>\n";
    
    my $sth = $dbh->prepare("SELECT * FROM sysban WHERE status='active' AND " .
                            "(banuntil > NOW() OR banuntil IS NULL) " .
                            "ORDER BY $orderby $flow LIMIT 1000");
    $sth->execute();
    my $ct = 0;
    while (my $ban = $sth->fetchrow_hashref) {

        # check_priv is cached, this shouldn't be bad
        next unless $priv_all || LJ::check_priv($remote, "sysban", $ban->{'what'});

        $ret .= "<tr>";
        foreach (@cols) {
            $ret .= "<td>";

            # banid column
            if ($_ eq 'banid' && $ban->{'status'} ne 'expired') {
                $ret .= "<b><a href='sysban.bml?banid=$ban->{'banid'}'>$ban->{$_}</a></b>";
            } elsif ($_ eq 'banuntil' && (! $ban->{'banuntil'} || $ban->{'banuntil'} !~ /[^\- :0]/)) {
                $ret .= 'forever';
            } else {
                $ret .= LJ::eall($ban->{$_});

            }
            $ret .= "</td>";
        }
        $ret .= "</tr>\n";
        $ct++;
    }

    $ret .= "<tr><td colspan='" . @cols . "'><b>$ct rows in set";
    $ret .= "[truncated]" if $ct >= 1000;
    $ret .= "</b></td></tr>\n";
    $ret .= "</table>\n\n";

    return $ret;

}
_code?>
