<?page
title=>Latest AntiSpam Posts
head<=
<style>
 table td { vertical-align: top; }
 .verdict { font-weight: bold; text-align: center; }
 .spam0 { background-color: #33ff33; color: #fff; }
 .spam1 { background-color: #dd0000; color: #000; }
 </style>
 <=head
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use Class::Autouse qw(LJ::AntiSpam);

    my $remote = LJ::get_remote();

    return "<?needlogin?>"
        unless $remote;

    return "You are not allowed to view this page"
        unless LJ::check_priv($remote, 'supporthelp', 'antispam');

    my $ret;

    if (LJ::did_post()) {
        push @errors, "Invalid form submission" unless LJ::check_form_auth();

        my @correct; # list of correct verdicts
        my @false_neg; # list of false negatives for spam
        my @false_pos; # list of false positives for ham
        my $changes;

        foreach (grep { /^review_/} keys %POST) {
            $changes = 1;
            my $as = $_;
            $as =~ s/^review_//;
            my ($spam, $jid, $type, $itemid) = split('-', $as);
            if ($POST{$_} eq '1') {
                push @correct,
                     {journalid => $jid, type => $type, itemid => $itemid};
            } elsif ($POST{$_} eq '0') {
                if ($spam) {
                    push @false_pos, {journalid => $jid, type => $type,
                                      itemid => $itemid};
                } else {
                    push @false_neg, {journalid => $jid, type => $type,
                                      itemid => $itemid};
                }
            }
        }

warn("correct: " . @correct . "; false_neg: " . @false_neg . "; false_pos: " . @false_pos);
        LJ::AntiSpam->mark_reviewed(@correct) if (@correct);
        LJ::AntiSpam->mark_false_neg(@false_neg) if (@false_neg);
        LJ::AntiSpam->mark_false_pos(@false_pos) if (@false_pos);

        unless (@errors) {
            if ($changes) {
                $ret .= "<span class='super notice'>Reviews saved.</span>";
            } else {
                $ret .= "<span class='super notice'>No changes.</span>";
            }
            $ret .= "<p><a href=''>Review more AntiSpam</a></p>";
        }

        return $ret;
    }

    my @posts = LJ::AntiSpam->load_recent;
    my @cols = LJ::AntiSpam->column_list;

    unless (@posts) {
        $ret .= "No recent posts to review";
        return $ret;
    }

    # Instantiate Entries
    foreach my $p (@posts) {
        $p->{entry} = LJ::Entry->new($p->journalid, jitemid => $p->itemid);
    }

    $ret .= "<form method='POST'>\n";
    $ret .= LJ::form_auth();

    $ret .= "<table border=1>";
    foreach my $p (@posts) {
        $ret .= "<tr><td width='350'>";

        # Left Column
        # Top of cell indicating result
        $ret .= "<div class='verdict spam".$p->{spam}."'>";
        $ret .= $p->{spam} ? "SPAM" : "Yummy Ham";
        $ret .= "</div>\n";

        foreach my $c (@cols) {
            $ret .= "<b>$c:</b> " . $p->$c . "<br />";
        }
        my $uj = LJ::want_user($p->journalid);
        my $up = LJ::want_user($p->posterid);
        my $url = LJ::journal_base($uj) . "/" . $p->{entry}->ditemid . ".html";
        my $subject = $p->{entry}->subject_raw;
        my $body = $p->{entry}->event_raw;

        # Middle Column
        $ret .= "</td><td width=80>";
        my $asid = $p->spam . "-" . $p->journalid . "-" . $p->type . "-" . $p->itemid;
        $ret .= "<div><label for='true_$asid'>";
        $ret .= LJ::html_check({ name => "review_$asid", id => "true_$asid",
                                 type => 'radio', value => 1, });
        $ret .= " TRUE";
        $ret .= "</label></div><br />\n";

        $ret .= "<div><label for='false_$asid'>";
        $ret .= LJ::html_check({ name => "review_$asid", id => "false_$asid",
                                 type => 'radio', value => 0, });
        $ret .= " FALSE";
        $ret .= "</label></div>\n";

        # Right Column
        $ret .= "</td><td>";

        $ret .= "<a href=\"$url\">" .
                $p->{entry}->eventtime_mysql .
                "</a><br />\n";
        $ret .= LJ::ljuser($up->{user});
        if ($up->{userid} != $uj->{userid}) {
            $ret .= " (in " . LJ::ljuser($uj->{user}, {type => $uj->{journaltype}}) . ")";
        }
        $ret .= ":<br />\n";

        $ret .= "<div class='entry'>";
        LJ::CleanHTML::clean_subject(\$subject);
        LJ::CleanHTML::clean_event(\$body, {'cuturl' => LJ::item_link($uj, $p->{entry}->{'itemid'}, $p->{entry}->{'anum'})});
        $ret .= "<h3>$subject</h3>\n" if $subject;
        $ret .= $body . "</div>";
        $ret .= "</td></tr>\n";
    }
    $ret .= "</table>";

    $ret .= "<p style='text-align: center'>" . LJ::html_submit('submite', 'Submit') . "</p>";

    $ret .= "</form>";

    return $ret;
}
_code?>

<=body
page?>
