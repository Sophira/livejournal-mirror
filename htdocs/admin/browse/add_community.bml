<?page
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use Class::Autouse qw( LJ::Browse );

    my $remote = LJ::get_remote();

    return "<?needlogin?>"
        unless $remote;

    return "You are not allowed to view this page"
        unless LJ::check_priv($remote, 'siteadmin', 'community_directory') || $LJ::IS_DEV_SERVER;

    $title = "Add Community to Category";
    my $ret = "";

    my $caturl = $POST{'caturl'};
    my $journal = $POST{'journal'};
    my $tags = $POST{'tags'};

    if (LJ::did_post() and $POST{'add'}) {
        push @errors, "Invalid form submission" unless LJ::check_form_auth();
        {
            # Check for required data
            unless ($caturl) {
                push @errors, "Please select a category";
                next;
            }
            unless ($journal) {
                push @errors, "Please enter journal names to add";
                next;
            }

            # Has a valid category been chosen
            my $category = LJ::Browse->load_by_url("/browse" . $caturl);
            push @errors, "Invalid category" unless $category;

            # Extract usernames and get userids
            my @tags = split /,\s*/, $tags;
            my @baduser;
            my $uid = LJ::get_userid($journal);

            push @errors, "Invalid user <b>$journal</b>"
                unless $uid;
            next if @errors;

            # Add journal to category
            if ($category->add_community($uid, \@tags)) {
                $ret .= "<span class='super notice'>Communities successfully added to category.</span>";
            } else {
                $ret .= "<span class='super notice'>Communities not added.</span>";
            }
        }
    }

    $ret .= "<form method='POST'>\n";
    $ret .= LJ::form_auth();

    # Get the full list of categories
    my @categories = LJ::Browse->load_all;
    # Don't include the top level categories and get the unique URI for each
    my @caturls = map { { text => $_->{pretty_name}, value => $_->uri } } @categories;
    @caturls = sort { $a cmp $b } @caturls;

    $ret .= "<p>Add to Category:<br />";
    $ret .= LJ::html_select({
                name => 'caturl',
                selected => $caturl },
                { text => 'Select Category',
                value => '' },
                @caturls
            );
    $ret .= "</p>\n";

    $ret .= "<p>the following journal:<br />";
    $ret .= LJ::html_text( {
                name => 'journal',
                size => 40,
                }
            );

    $ret .= "<p>with tags:<br />";
    $ret .= LJ::html_text( {
                name => 'tags',
                size => 60,
                }
            );

    $ret .= "<p>" . LJ::html_submit('add', 'Add') . "</p>";

    $ret .= "</form>";

    return "<body>$ret</body>";
}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
