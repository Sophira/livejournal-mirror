<?page
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use Class::Autouse qw( LJ::Browse );

    LJ::need_res('stc/admin/general.css');
    LJ::need_res ( qw( stc/widgets/widget-layout.css stc/widgets/search.css stc/widgets/add-community.css stc/widgets/featuredposts.css stc/widgets/featuredcomms.css ) );

    my $remote = LJ::get_remote();

    return "<?needlogin?>"
        unless $remote;

    return "You are not allowed to view this page"
        unless LJ::check_priv($remote, 'siteadmin', 'community_directory') || $LJ::IS_DEV_SERVER;

    $title = "Featured communities";
    my $ret = "";

    my $vert_id = $POST{'vert_id'};
    my $journals = $POST{'journals'};

    $ret .= "<div class='b-adminpage b-adminpage-padding'>\n";
    $ret .= "<form method='POST'>\n";
    $ret .= LJ::form_auth();

    # Get the full list of categories
    my @verticals = LJ::Vertical->load_all;
    # Don't include the top level categories and get the unique URI for each

    my @vert_ids = map { { value => $_->vert_id, text => $_->name } } @verticals;
    @vert_ids = sort { $a->{'text'} cmp $b->{'text'} } @vert_ids;

    $ret .= "<p>";
    $ret .= LJ::html_select({
                name => 'vert_id',
                selected => $vert_id },
                { text => 'Select Vertical',
                value => '' },
                @vert_ids
            );
    $ret .= "&nbsp;" . LJ::html_submit('go', 'Go') . "</p>";

    $ret .= "</form>";

    my $vertical = undef;
    if ($vert_id) {
        $vertical = LJ::Vertical->load_by_id($vert_id);
        $ret .= <<ADDPOST;
<form method="post">
<input type="hidden" name="vert_id" value="$vert_id">
<table class='b-admin-table'>
    <th colspan='2' style='padding:5px;'>Enter community URL for adding:</caption>
    <tr>
        <td style='padding:5px;'>URL:</td>
	<td style='padding:5px;'><input type="text" size="50" name="url"></td>
        <td style='padding:5px;'><input type="submit" name="add" value="Add"></td>
    </tr>
</table>
</form>
</div>
ADDPOST

    }

    if (LJ::did_post() && $vertical && $POST{'add'}) {
        $vertical->add_community ($POST{'url'});
    }

    if (LJ::did_post() && $vertical && $POST{'delete_comm'}) {
        $vertical->delete_community (comm_id => $POST{'rec_id'});
    }

    if (LJ::did_post() && $vertical) {
        $ret .= "<h2>Added Communities</h2>";
        my $comms = $vertical->load_communities( count => '100', is_random => 0 );

        $ret .= "<ul style='list-style:none;line-height:1.6em;padding:0;float:left;width:500px;'>";
        my @top_comms = ();
        foreach (@$comms) {
            my $comm = LJ::load_userid($_->{journalid});
            my $url = $comm->journal_base;
            $ret .= "<li><a href='".$url."'>".$comm->display_name."</a>";
            $ret .= "<form method='POST' style='display:inline;padding:0 0 0 10px;'>\n";
            $ret .= LJ::form_auth();
            $ret .= "<input type='hidden' name='rec_id' value='".$comm->userid."'>";
            $ret .= "<input type='hidden' name='vert_id' value='".$vertical->vert_id."'>";
            $ret .= "<input type='submit' name='delete_comm' value='Remove post' style='font-size:.8em;text-transform:lowercase;'>";
            $ret .= "</form>";
        }
        my $comms = $vertical->load_communities( count => $vertical->show_entries, is_random => 1 );
        foreach my $comm (@$comms) {
            my $c = LJ::load_userid($comm->{journalid});
            next unless $c;
            my $userpic = $c->userpic;
            my $descr = $c->prop('comm_theme') || $c->{'name'};
            my $descr_trimmed = LJ::html_trim($descr, 50);
            push @top_comms, {
                username        => $c->display_name,
                userpic         => $userpic ? $userpic->url : '',
                community       => $c->user,
                bio             => $descr_trimmed,
                ljuser          => LJ::ljuser($c->user),
                is_subtitle_trimmed => $descr ne $descr_trimmed ? 1 : 0,
            };
        }
        $ret .= "</ul>";
        $ret .= "</div>";
        my $template = LJ::HTML::Template->new(
            { use_expr => 1 }, # force HTML::Template::Pro with Expr support
            filename => "$ENV{'LJHOME'}/templates/Browse/featured_communities.tmpl",
            die_on_bad_params => 0,
            strict => 0,
        ) or die "Can't open template: $!";
        $template->param(
            top_comms => \@top_comms,
        );
        $ret .= "<div style=\"margin:0 0 0 550px;width:300px;border:1px solid #E6E6E6;background:#F6F6F6;\">".$template->output."</div>";
    }
    $ret .= "<p style='clear:both;'><a href='/admin/browse/'>Back to main page</a></p>";


    return "<body>$ret</body>";
}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
