<?_code
{
    use strict;
    use vars qw($title);
    use LJ::Widget::LoginMulti;
    use LJ::ExternalComments;

    return 'This feature is disabled'
        unless LJ::is_enabled('external_comments');

    my $thispage = "$LJ::SITEROOT/gadgets/logcom.bml";
    $thispage .= "?" . LJ::Request->args;

    my $docid   = LJ::Request->get_param('docid');
    my $api_key = LJ::Request->get_param('rsk');
    my $domain  = LJ::Request->get_param('domain');
    my $type    = LJ::Request->get_patam('type');

    ## convert remote-site key to lj.com's community
    my $partner = LJ::PartnerSite->find_by_api_key($api_key);
    return 'unknown key'
        unless $partner;

    unless ( $partner->is_domain_trusted($domain) ) {
        return 'this domain doesn\'t belong to this partner';
    }

    my $journal = $partner->journal;

    return 'rate limit exceeded'
        unless ! $partner->rate_limits
            || LJ::RateLimit->check( $journal, $partner->rate_limits );

    my $js_check_domain = $partner->domain_check_js(
        {
            'mode'           => 'logcom',
            'partner_domain' => $domain,
        }
    );

    my $entry = $partner->find_entry_by_docid($docid);
    my $jitemid = $entry->jitemid;

    my $replyto = LJ::Request->get_param('replyto');
    
    if ($replyto) {
        my $parent  = LJ::Comment->new( $journal, 'dtalkid' => $replyto );
        $replyto    = 0
            unless $parent->valid;
    }

    if (my $remote = LJ::get_remote() and not LJ::Request->get_param('viewform')) {
        ## show add comment form

        my $remote_sessid;
        if ($remote) {
            $remote_sessid = $remote->session->id;
        }

        my $logout_url = "$LJ::SITEROOT/gadgets/logout.bml?" .
                         'returnto=' . LJ::eurl($thispage) . '&' .
                         'sessid=' . $remote_sessid;

        my $ljuser_html = $partner->ljuser_html($remote);

        return
            LJ::Talk::talkform({
                'embedable_form'    => 1,
                'logout_url'        => $logout_url,
                'js_check_domain'   => $js_check_domain,
                'partner_domain'    => $domain,
                'partner_remote_ljuser' => $ljuser_html,

                'remote'            => $remote,
                'journalu'          => $journal,
                'ditemid'           => $entry->ditemid,
                'replyto'           => int ($replyto / 256),
                'resources_html'    => $partner->resources_html({ type => $type }),
            });
    } else {
        ## display login widget
        # send out a P3P header thing so as to work around IE's
        # unwillingness to receive our cookies while we're in an iframe
        LJ::Session->allow_login_from_iframe;

        my $w = LJ::Widget::LoginMulti->new;
        $w->{'no_container_div'} = 1;

        return $w->render(
            'embedded'          => 1,
            'partner'           => $partner,
            'js_check_domain'   => $js_check_domain,
            'resources_html'    => $partner->resources_html({ type => $type }),
            'forwhat'           => 'external',
            'thispage'          => $thispage,
            'lj_auth'           => 1,
        );
    }

}
_code?>
