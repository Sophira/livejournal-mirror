(=PAGE
TITLE=>Interests
BODY<=

(=_CODE
#line 6
 return "(=BADINPUT=)" unless LJ::text_in(\%FORM);

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my $sth;
 my $qintid = $FORM{'intid'}+0;
 my $qinterest = $dbr->quote($FORM{'int'});
 my $interest;

 if ($FORM{'view'} eq "popular") 
 {
     my $ret = "";
     $ret .= "(=H1 Popular Interests H1=)(=P The following are the most popular interests. P=)";
 
     $sth = $dbr->prepare("SELECT statkey, statval FROM stats WHERE ".
                          "statcat='pop_interests' ORDER BY statval DESC, statkey ASC");
     $sth->execute;
     
     $ret .= "<P><TABLE><TR><TD><B>Interest</B></TD><TD><B>Count</B></TD></TR>\n";
     while (my ($int, $count) = $sth->fetchrow_array)
     {
         next if ($count == 1);
         LJ::text_out(\$int);
         my $eint = LJ::eurl($int);
         $ret .= "<TR><TD><A HREF=\"/interests.bml?int=$eint\">$int</A></TD><TD>$count</TD></TR>\n";
     }
     $ret .= "</TABLE>\n";
     return $ret;
 }

 if ($FORM{'mode'} eq "add") 
 {
     my $remote = LJ::get_remote($dbs);
     my $ret;
     unless ($remote) {
         $ret .= "(=H1 Error H1=)(=P You have to be logged in to add an interest this way. P=)";
         return $ret;
     }
     my $qintid = $FORM{'intid'}+0;

     # force them to either come from the interest.bml page, or have posted the request.
     # if both fail, ask them to confirm with a post form.
     
     my $ref_match = "^http://$LJ::DOMAIN_RE/interests\\.bml\\?";
     unless ($ENV{'HTTP_REFERER'} =~ /$ref_match/ || LJ::did_post())
     {
         $sth = $dbh->prepare("SELECT interest FROM interests WHERE intid=$qintid");
         $sth->execute;
         my ($int) = $sth->fetchrow_array;
         LJ::text_out(\$int);

         $ret .= "(=H1 Confirm H1=)";
         $ret .= "(=P To add <b>$int</b> as an interest, click the button below. ";
         $ret .= "<form method=post action=\"/interests.bml\">";
         $ret .= "<input type=hidden name=mode value=add>";
         $ret .= "<input type=hidden name=intid value=$qintid>";
         $ret .= "<center><input type=submit value=\"Add $int\"></center>";
         $ret .= "</form> P=)";
         return $ret;	 
     }

     $sth = $dbr->prepare("SELECT COUNT(*) FROM userinterests WHERE userid=$remote->{'userid'}");
     $sth->execute;
     my ($count) = $sth->fetchrow_array;
     if ($count >= 150) {
         $ret .= "(=H1 Sorry.. H1=)(=P You already have 150 interests defined. P=)";
         return $ret;
     }
   
     $dbh->do("INSERT INTO userinterests (userid, intid) VALUES ($remote->{'userid'}, $qintid)");
     unless ($dbh->err) {
         $dbh->do("UPDATE interests SET intcount=intcount+1 WHERE intid=$qintid");
     }
     
     $ret .= "(=H1 Added! H1=)(=P The interest has been added to your list. P=)";
     return $ret;
 }

 if ($FORM{'mode'} eq "findsim") 
 {
     if ($LJ::DISABLED{'interests-findsim'}) {
         return "This is disabled temporarily.";
     }

     my $ret = "";
     $ret .= "(=H1 Similar Users H1=)(=P This tool lets you find users with the most similar interests to a given user.  More fun stuff can be found on the <A HREF=\"/interests.bml\">interests page</A>. P=)";
     
     my $remote = LJ::get_remote($dbs);
     LJ::load_remote($dbs, $remote);
     if (LJ::get_cap($remote, "findsim")) {
         $ret .= "<center><form method='get'><input type='hidden' name='mode' value='findsim_do' />";
         $ret .= "Similar to User: <input name='user' value='$remote->{'user'}' /> <input type='submit' value=\"Find!\" /></form><b>Please note:</b> Search will take several seconds.  Be patient.</center>";
     } else {
         $ret .= "(=P However, your account type doesn't let you use this tool. P=)";
         unless ($remote) {
             $ret .= "(=P You're also not <a href='/login.bml?ret=1'>logged in</a>, so your account type can't be determined. P=)";
         }
     }
     return $ret;
 }

 if ($FORM{'mode'} eq "findsim_do")
 {
     if ($LJ::DISABLED{'interests-findsim'}) {
         return "This is disabled temporarily.";
     }

     my $remote = LJ::get_remote($dbs);
     LJ::load_remote($dbs, $remote);
     unless (LJ::get_cap($remote, "findsim")) {
         return "Sorry, your account type doesn't let you use this tool.";
     }

     my $ret = "";
     my $u = LJ::load_user($dbs, $FORM{'user'});
     return "(=H1 Error H1=)(=P Unknown user P=)" unless $u;

     my @ints;
     my %intcount;
     my $sth = $dbr->prepare("SELECT i.intid, i.intcount FROM userinterests ui, interests i ".
                             "WHERE ui.userid=$u->{'userid'} AND ui.intid=i.intid");
     $sth->execute;
     while (my ($intid, $count) = $sth->fetchrow_array) {
         push @ints, $intid;
         $intcount{$intid} = $count || 1;
     }
     return "(=H1 Error H1=)(=P User (=LJUSER $u->{'user'} LJUSER=) has no defined interests. P=)" 
         unless @ints;

     my %pt_count;
     my %pt_weight;
     foreach my $int (@ints) {
         # the magic's in this limit clause.  that's what makes this work.  perfect 
         # results?  no.  but who cares if somebody that lists "music" or "women"
         # doesn't get an extra point towards matching you.  we care about more unique interests.
         my $sth = $dbr->prepare("SELECT userid FROM userinterests WHERE intid=$int LIMIT 500");
         $sth->execute;
         while (my $uid = $sth->fetchrow_array) {
             next if $uid == $u->{'userid'};
             $pt_weight{$uid} += (1 / log($intcount{$int}+1));
             $pt_count{$uid}++;
         }
     }

     my %magic;  # balanced points
     foreach (keys %pt_count) {
         $magic{$_} = $pt_weight{$_}*10 + $pt_count{$_};
     }
     
     my @matches = sort { $magic{$b} <=> $magic{$a} } keys %magic;
     if (@matches > 150) { @matches = @matches[0..149]; }
     my $sth = $dbr->prepare("SELECT userid, user FROM useridmap WHERE userid IN (" . join(",",@matches) . ")");
     $sth->execute;
     my %username;
     while (my ($id, $name) = $sth->fetchrow_array) {
         $username{$id} = $name;
     }

     unless (@matches) {
         return "(=H1 No Matches H1=)(=P No users are similar to (=LJUSER $u->{'user'} LJUSER=). P=)";
     }

     $ret .= "(=H1 Similar Users H1=)(=P The following are the most related users to (=LJUSER $u->{'user'} LJUSER=) P=)";

     $ret .= "<p><table cellpadding='3'><tr valign='bottom'><td><b>#</b></td><td width='250'><b>User</b></td><td><b>Magic<br />Index</b></td></tr>\n";
     my $count;
     foreach my $uid (@matches) 
     {
         $count++;
         $ret .= "<tr>";
         $ret .= "<td>$count</td>";
         $ret .= "<td>(=LJUSER $username{$uid} LJUSER=)</td>";
         $ret .= sprintf("<td>%.3f</td>", $magic{$uid});
         $ret .= "</tr>\n";
     }
     $ret .= "</table></p>\n";

     $ret .= "(=H1 Magic Index? H1=)(=P Each matching user gets computed a magic index, which is a weighting of two factors:  the raw number of like interests, and some extra points for sharing uncommon interests. P=)";
     return $ret;
 }

 if ($FORM{'intid'} || $FORM{'int'}) 
 {
     my $intcount;
     my $where = $FORM{'intid'} ? "intid=$qintid" : "interest=$qinterest";
     $sth = $dbr->prepare("SELECT interest, intid, intcount FROM interests WHERE $where");
     $sth->execute;
     ($interest, $intid, $intcount) = $sth->fetchrow_array;
     unless ($interest) { return "(=H1 Error H1=)(=P Interest wasn't found. P=)"; }
     $qintid = $intid+0;
     
     if ($intcount > 2000) {
         # hack, yes.  saves the database, though.
         return "(=H1 Many matches H1=)(=P There are $intcount people and/or communities listing this as an interest.  A list won't be shown. P=)";
     }

     my $ret = "";
     my $remote = LJ::get_remote_noauth();

     ### communities

     my $list;
     my $count = 0;
     $sth = $dbr->prepare("SELECT u.user, u.name FROM user u, userinterests ui WHERE u.userid=ui.userid AND ui.intid=$qintid AND u.journaltype='C' AND u.statusvis='V' ORDER BY u.user LIMIT 1000");
     $sth->execute;
     while ($_ = $sth->fetchrow_hashref) {
         $count++;
         my $name = LJ::ehtml($_->{'name'});
         $list .= "<li>(=LJCOMM $_->{'user'} LJCOMM=) - $name\n";
     }

     my $s = $count > 1 ? "es" : "";
     if ($count) {
         $ret .= "(=H1 Relevant Communities H1=)(=P The following communities are also interested in <b>\"$interest\"</b>. P=)";
         $ret .= "<p><b>$count match$s:</b><ul>";
         $ret .= $list;
         $ret .= "</ul></p>";
     }

     ##### users

     $ret .= "(=H1 Interested users H1=)(=P The following users are also interested in <b>\"$interest\"</b>.  ";
     if ($remote) {
         $ret .= "If you're also interested in this and would like to be added to this list, <a href=\"/interests.bml?mode=add&amp;intid=$qintid\">click here</A>.  ";
     }
     $ret .= "More fun stuff can be found on the <A HREF=\"/interests.bml\">interests page</A>. P=)";

     my $list;
     my $count = 0;
     $list .= "<UL>\n";
     # FIXME: LIMIT 1000 is a temporary hack.  better solution:  redirect to directory; allow for free users.
     $sth = $dbr->prepare("SELECT u.user, u.name FROM user u, userinterests ui WHERE u.userid=ui.userid AND ui.intid=$qintid AND u.journaltype='P' AND u.statusvis='V' ORDER BY u.user LIMIT 1000");
     $sth->execute;
     while (my ($iuser, $iname) = $sth->fetchrow_array) {
         $count++;
         my $name = LJ::ehtml($iname);
         $list .= "<li>(=LJUSER $iuser LJUSER=) - $name\n";
     }
     $list .= "</ul>\n";

     my $s = $count > 1 ? "es" : "";
     $ret .= "<p><b>$count match$s:</b></p>";
     $ret .= $list;

     ## end
     return $ret;
 }

 my $ret = "";
 $ret .= "(=H1 Interests H1=)(=P Here are some fun things you can do with interests.... P=)";
 $ret .= "<FORM METHOD=GET><UL>";
 $ret .= "<LI><A HREF=\"/interests.bml?view=popular\">View popular interests</A>\n";
 $ret .= "<LI><A HREF=\"/interests.bml?mode=findsim\">Find similar people</A> -- see who has the most number of common interests with you\n" unless ($LJ::DISABLED{'interests-findsim'});
 $ret .= "<LI>Find people interested in: <INPUT NAME=int SIZE=20><INPUT TYPE=SUBMIT VALUE=\"Find\">\n";
 $ret .= "</UL></FORM>\n";
 $ret .= "Don't have any interests listed?  Add some by going to the <A HREF=\"/editinfo.bml\">Edit Personal Info & Settings</A> page.";
 
 return $ret;

_CODE=)

<=BODY
PAGE=)(=_C <LJDEP>
link: htdocs/interests.bml, htdocs/editinfo.bml
post: htdocs/interests.bml
form: htdocs/interests.bml
</LJDEP> _C=)
