<?page
title=>Journal Display
body<=
<?_code
{
    use strict;
    use vars qw(%POST %GET);
    LJ::need_res( 'stc/customize.css', 'js/core.js', 'js/dom.js', 'js/customize.js' );

    BML::decl_params(authas            => '.',
                     stylesys          => qr/^[12]$/,
                     journaltitle      => qr/./,
                     journalsubtitle   => qr/./,
                     friendspagetitle  => qr/./,
                     opt_stylemine     => qr/^[01]$/,
                     opt_whocanreply   => qr/^(all|reg|friends)$/,
                     opt_logcommentips => qr/^[NSA]$/,
                     opt_whoscreened   => qr/^[NRFA]$/,
                     opt_showtalklinks => qr/./,
                     opt_gettalkemail  => qr/./,
                     opt_htmlemail     => qr/^[YN]$/,
                     "action:redir"    => 'word',
                     lj_form_auth      => qr/./,
                     );

    return LJ::server_down_html() if $LJ::SERVER_DOWN;

    my $remote = LJ::get_remote();
    return LJ::bad_input("You must be logged in to edit your display settings.")
        unless $remote;

    my $authas = $GET{'authas'} || $remote->{'user'};
    my $u = LJ::get_authas_user($authas);
    return LJ::bad_input("You could not be authenticated as the specified user.")
        unless $u;

    return $LJ::MSG_READONLY_USER if $u->readonly;

    # extra arguments for get requests
    my $getextra = $authas ne $remote->{'user'} ? "?authas=$authas" : '';

    # Return strings
    my $ret; my $saved_msg; my $err_msg;

    ### Save settings
    if (LJ::did_post()) {
        return "<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>"
            unless LJ::check_form_auth();

        # journal / friends titles

        $POST{'stylesys'}         = $POST{'stylesys'} == 2 ? 2 : 1;
        $POST{'journaltitle'}     = LJ::text_trim($POST{'journaltitle'}, 0, 80) if $POST{'journaltitle'};
        $POST{'journalsubtitle'}  = LJ::text_trim($POST{'journalsubtitle'}, 0, 80) if $POST{'journalsubtitle'};
        $POST{'friendspagetitle'} = LJ::text_trim($POST{'friendspagetitle'}, 0, 80) if $POST{'friendspagetitle'};
        $POST{'opt_stylemine'}    = $POST{'opt_stylemine'} ? 1 : 0;
        if ($POST{'opt_logcommentips'} ne "N" &&
            $POST{'opt_logcommentips'} ne "S" &&
            $POST{'opt_logcommentips'} ne "A") { $POST{'opt_logcommentips'} = "N"; }
        $POST{'opt_whoscreened'} = "N" unless $POST{'opt_whoscreened'} =~ m/^(N|R|F|A)$/;

        my %update = (
                      'opt_showtalklinks' => $POST{'opt_showtalklinks'} ? "Y" : "N",
                      'opt_gettalkemail'  => $POST{'opt_gettalkemail'} ? "Y" : "N",
                      'opt_htmlemail'     => $POST{'opt_htmlemail'},
                      );
        LJ::update_user($u, \%update);

        # set userprops
        my @uprops = qw(opt_logcommentips s1_lastn_style mailencoding opt_nctalklinks
                        opt_whoscreened journaltitle journalsubtitle friendspagetitle
                        opt_stylemine stylesys s2_style);

        foreach my $uprop (@uprops) {
            my $eff_val = $POST{$uprop};   # effective value, since 0 isn't stored
            $eff_val = "" unless $eff_val;
            $u->set_prop( $uprop, $eff_val );
        }

        LJ::cmize::js_redirect(\%POST);
        $saved_msg .= "Your settings have been saved. <a href='" . $u->journal_base() . "'>View your Journal</a>.";

        # Reload the user object to force the display of these changes
        $u = LJ::load_user($u->{user}, 'force');
    }

    $ret .= "<?warningbar $saved_msg warningbar?>" if $saved_msg;
    $ret .= "<?errorbar $err_msg errorbar?>" if $err_msg;

    $ret .= "<form action='./' method='get' id='Authas'>\n";
    $ret .= LJ::make_authas_select($remote, { 'authas' => $GET{'authas'} });
    $ret .= "</form>\n\n";

    $ret .= LJ::cmize::html_tablinks("index", $getextra);
    $ret .= "<div id='CurrentTab'>";

    ### Sidebar
    {
        $ret .= "<div id='CurrentTabSide'>";
        $ret .= LJ::cmize::display_current_summary($u);
        $ret .= "</div>";
    }

    $ret .= "<div id='CurrentTabMain'><form id='display_form' method='post' action='./?authas=$authas'>";
    $ret .= LJ::form_auth();
    $ret .= "<?p These settings will remain no matter what other changes you make to your journal design. p?>";

    ### Journal Titles
    {
        $ret .= "<fieldset><legend>Journal Titles</legend><table>";
        # journaltitle
        $ret .= "<tr><th style='text-align: right'>Journal Title:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'journaltitle', 'value' => $u->prop('journaltitle'),
                                'size' => '30', 'maxlength' => '80' });
        $ret .= " </td></tr>\n";
        # journalsubtitle
        $ret .= "<tr><th style='text-align: right'>Subtitle:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'journalsubtitle', 'value' => $u->prop('journalsubtitle'),
                                'size' => '30', 'maxlength' => '80' });
        $ret .= " </td></tr>\n";

        # friendspagetitle
        $ret .= "<tr><th style='text-align: right'>Friends Page Title:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'friendspagetitle', 'value' => $u->prop('friendspagetitle'),
                                'size' => '30', 'maxlength' => '80' });
        $ret .= "</td></tr>\n";
        $ret .= "</table></fieldset>";
    }

    ### Style System
    {
        $ret .= "<fieldset><legend>Style System</legend>";
        $ret .= "<?p LiveJournal provides two style systems that allow you varying control over how your journal is displayed: p?><table>";
        $ret .= "<tr><td>";
        my $checked = $u->prop('stylesys') != 2 ? 1 : 0;
        $ret .= LJ::html_check({ 'id' => "S1", 'name' => 'stylesys', 'value' => "1",
                                 'type' => "radio", 'selected' => $checked });
        $ret .= "</td><td><label for='S1'><strong>S1</strong> - For users who are comfortable with HTML and CSS.</label></td></tr>";
        $ret .= "<tr><td>";
        $checked = $u->prop('stylesys') == 2 ? 1 : 0;
        $ret .= LJ::html_check({ 'id' => "S2", 'name' => 'stylesys', 'value' => "2",
                                 'type' => "radio", 'selected' => $checked, });
        $ret .= "</td><td><label for='S2'><strong>S2</strong> - For users who don't know HTML or CSS, or make ".
          " only minor alterations.</label></td></tr>";
        $ret .= "</table></fieldset>";
    }

    ### Comment Settings
    {
        BML::set_language_scope("/editinfo.bml");
        $ret .= "<fieldset><legend>Comments</legend><table>";

        # opt_showtalklinks
        $ret .= "<tr valign='middle'><td>";
        $ret .= LJ::html_check({ 'type' => 'check', 'name' => 'opt_showtalklinks', 'id' => 'opt_showtalklinks',
                                 'selected' => $u->prop('opt_showtalklinks') eq 'Y', });
        $ret .= "</td><td><b><label for='opt_showtalklinks'>Allow Commenting</label></b></td></tr>\n";
        $ret .= "<tr><td>&nbsp;</td><td id='comment_options'>$ML{'.enableboards.about'}";

        {
            # opt_whocanreply
            $ret .= "\n<p><b>Who can comment:</b> ";
            $ret .= LJ::html_select({ 'name' => 'opt_whocanreply', 'selected' => $u->prop('opt_whocanreply') },
                                    "all" => BML::ml(".security.visibility.anybody"),
                                    "reg" => BML::ml(".security.visibility.regusers"),
                                    "friends" => BML::ml(".security.visibility.friends"));
            $ret .= "</p>\n";

            # opt_logcommentips
            $ret .= "<p><b>Log IP addresses?</b> ";
            $ret .= LJ::html_select({ 'name' => 'opt_logcommentips', 'selected' => $u->prop('opt_logcommentips') },
                                    "N" => BML::ml(".donotlog"),
                                    "S" => BML::ml(".logip.anon_only"),
                                    "A" => BML::ml(".logip.always") );
            $ret .= "</p>\n";

            # opt_whoscreened
            $ret .= "<p><b>Screen replies from:</b> ";
            $ret .= LJ::html_select({ 'name' => 'opt_whoscreened', 'selected' => $u->prop('opt_whoscreened') },
                                    "N" => $ML{'.screen.none'},
                                    "R" => $ML{'.screen.anon'},
                                    "F" => ($u->prop('journaltype') eq 'C' ? $ML{'.screen.nonmembers'} : $ML{'.screen.nonfriends'}),
                                    "A" => $ML{'.screen.all'} );
            $ret .= "</p>\n";
            $ret .= "<table>\n";

            # opt_nctalklinks
            $ret .= "<tr valign='middle'><td>";
            $ret .= LJ::html_check({ 'type' => 'check', 'name' => 'opt_nctalklinks', 'id' => 'opt_nctalklinks',
                                     'selected' => $u->prop('opt_nctalklinks') });
            $ret .= "</td><td><b><label for='opt_nctalklinks'>$ML{'.numcomments.header'}</label></b></td></tr>\n";
            $ret .= "<tr><td>&nbsp;</td><td>$ML{'.numcomments.about'}</td></tr>\n";

            # stylemine
            $ret .= "<tr valign='middle'><td>";
            $ret .= LJ::html_check({ 'type' => 'check', 'name' => 'opt_stylemine', 'id' => 'opt_stylemine',
                                     'value' => 1, 'selected' => $u->prop('opt_stylemine') });
            $ret .= "</td><td><b><label for='opt_stylemine'>$ML{'.stylemine.header'}</label></b></td></tr>\n";
            $ret .= "<tr><td>&nbsp;</td><td>$ML{'.stylemine.about'}</td></tr>\n";

            # opt_gettalkemail
            $ret .= "<tr valign='middle'><td>";
            $ret .= LJ::html_check({ 'type' => 'check', 'name' => 'opt_gettalkemail', 'id' => 'opt_gettalkemail',
                                     'selected' => $u->prop('opt_gettalkemail') eq 'Y' });
            $ret .= "</td><td><b><label for='opt_gettalkemail'>Receive email notifications when others comment</label></b></td></tr>\n";
            $ret .= "<tr><td>&nbsp;</td><td>$ML{'.getreplies.about'}</td></tr>\n";

            # opt_htmlemail
            $ret .= "<tr valign='middle'><td>&nbsp;</td><td><b>Email notification format:</b> ";
            $ret .= LJ::html_select({ 'name' => 'opt_htmlemail', 'id' => 'opt_htmlemail',
                                      'selected' => $u->prop('opt_htmlemail')},
                                    "N", "Plain Text", "Y", "HTML Formatted");
            $ret .= "</td></tr></table>\n";
        }
        $ret .= "</td></tr></table>\n";
        $ret .= "</table></fieldset>";
    }
    $ret .= LJ::cmize::html_save();
    $ret .= "</form></div></div>";

    return $ret;
}
_code?>
<=body
page?>
