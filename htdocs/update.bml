(=_CODE

 use LJ::SpellCheck;

 my $SELF = "/update.bml";
 
 $title = "Update Journal";
 $body = "";
 $bodyopts = "";

 if ($LJ::SERVER_DOWN) {
     $body = LJ::server_down_html();
     return;
 }

 unless (LJ::text_in(\%FORM)) {
     $body = "(=BADINPUT=)";
     return;
 }

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};
 my $remote = LJ::get_remote($dbs);
 LJ::load_remote($dbs, $remote);

 my $dbcm = LJ::get_cluster_master($remote);

 if (LJ::get_cap($remote, "readonly") ||
     ($remote && $remote->{'clusterid'} && ! $dbcm))
 {
     $title = "Read-only mode";
     $body = $LJ::MSG_READONLY_USER;
     return;
 }

 my $mode = $FORM{'mode'} || "";  # full will be default, once portal is in.

 my $spellcheck_html;
 if ($LJ::SPELLER && $FORM{'do_spellcheck'}) {
     $FCGI && $FCGI->Detach();  # hack work around for perl5.6+fcgi bad interaction
     my $s = new LJ::SpellCheck { 'spellcommand' => $LJ::SPELLER,
                                  'color' => '(=HOTCOLOR=)', };
     $spellcheck_html = $s->check_html(\$FORM{'event'});
     $FCGI && $FCGI->Attach();  # </hack>
 }
 if ($mode eq "update" && $FORM{'do_spellcheck'} && $spellcheck_html) { $mode = $FORM{'oldmode'}; }

 if ($mode eq "update")
 {
     my %res;
     my $flags = {};

     if ($FORM{'user'} eq "" && $remote) {
         $FORM{'user'} = $remote->{'user'};
         $flags->{'nopassword'} = 1;
     }

     # first, login
     $FORM{'mode'} = "login";
     if ($FORM{'webversion'} eq "full") {
         $FORM{'clientversion'} = "Web/1.1";
     } else {
         $FORM{'clientversion'} = "Web/1.0";
     }
     if ($FORM{'did_spellcheck'} || $FORM{'do_spellcheck'}) {
         $FORM{'clientversion'} .= "s";
     }
     if ($LJ::UNICODE) {
         $FORM{'ver'} = "1";
     }
     LJ::do_request($dbs, \%FORM, \%res, $flags);
     
     $body .= "(=H1 Logging in to server... H1=)\n";
     if ($res{'success'} eq "OK")
     {
         my $message = "";
         if ($res{'message'}) {
             $message = "Also, the server has a message for you: <UL><LI><B>(=_EH $res{'message'} _EH=)</B></UL>";
         }
         $body .= "(=P Login successful.  Hello, (=_EH $res{'name'} _EH=)! $message P=)";
     }
     else
     {
         $body .= "(=P Error logging on: <UL><LI><B>(=_EH $res{'errmsg'} _EH=)</B></UL> P=)";
         return;
     }

     ## see if an "other" mood they typed in has an equivalent moodid
     if ($FORM{'prop_current_mood'} ne "") 
     {
         delete $FORM{'prop_current_moodid'};
         my $qmood = $dbr->quote(lc($FORM{'prop_current_mood'}));
         my $sth = $dbr->prepare("SELECT moodid FROM moods WHERE mood=$qmood");
         $sth->execute;
         my ($moodid) = $sth->fetchrow_array;
         if ($moodid) {
             delete $FORM{'prop_current_mood'};
             $FORM{'prop_current_moodid'} = $moodid;
         }
     }

     my $sec = "public";
     my $amask = 0;
     if ($FORM{'security'} eq "private") { $sec = "private"; }
     elsif ($FORM{'security'} eq "friends") { $sec = "usemask"; $amask = 1; }
     elsif ($FORM{'security'} eq "custom") {
         $sec = "usemask";
         foreach my $bit (1..30) {
             next unless $FORM{"custom_bit_$bit"};
             $amask |= (1 << $bit);
         }
     }
     $FORM{'security'} = $sec;
     $FORM{'allowmask'} = $amask;
     
     # next, postevent
     $FORM{'mode'} = "postevent";
     delete $FORM{'clientversion'};
     LJ::do_request($dbs, \%FORM, \%res, $flags);
     
     $body .= "(=H1 Updating journal... H1=)\n";
     if ($res{'success'} eq "OK")
     {
         my $uri = "/users/$FORM{'user'}/";
         if ($FORM{'usejournal'}) {
             my $quj = $dbr->quote($FORM{'usejournal'});
             my $sth = $dbr->prepare("SELECT journaltype FROM user WHERE user=$quj");
             $sth->execute;
             my ($type) = $sth->fetchrow_array;
             if ($type eq "C") {
                 $uri = "/community/$FORM{'usejournal'}/";
             } else {
                 $uri = "/users/$FORM{'usejournal'}/";
             }	 
         }
         $body .= "(=P Update successful.  You may view your updated journal <A HREF=\"$uri\">here</A>. P=)";
     }
     else
     {
         $body .= "(=P Error updating journal: <UL><LI><B>(=_EH $res{'errmsg'} _EH=)</B></UL> P=)";
         return;
     }
     
     return;     
 }

 if ($mode eq "" || $mode eq "full") 
 {
     $bodyopts = "onLoad=\"settime();\"";
     
     $body .= "(=H1 Update your Journal... H1=)(=P If you don't want to <A HREF=\"/download/\">download a client</A> for your computer, or if one doesn't exist for your computer, you may use this page to update your LiveJournal.  This is also useful if you're on vacation or away from your primary computer. P=)(=HR=)";
     
     $body .= "<FORM METHOD=POST ACTION=\"$SELF\" NAME=updateForm>";
     $body .= "<INPUT TYPE=HIDDEN NAME=mode VALUE=update>";
     if ($FORM{'do_spellcheck'}) {
         $body .= "<INPUT TYPE=HIDDEN NAME=did_spellcheck VALUE=1>";
     }
     $body .= "<INPUT TYPE=HIDDEN NAME=oldmode VALUE=$mode>";
     $body .= "<TABLE><TR><TD><TABLE>";
     {
         my $opts = {};
         if ($remote && $FORM{'user'} && $FORM{'user'} ne $remote->{'user'}) {
             $opts = {
                 'user' => $FORM{'user'},
                 'noalt' => 1,  # so they don't lose their entry clicking GET url
             };
         }
         $body .= LJ::auth_fields(\%FORM, $opts);
     }
     $body .= "</TABLE></TD><TD>";

     $body .= "<TABLE CELLSPACING=0 CELLPADDING=0>";
  
     my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
     $year+=1900;
     $mon=sprintf("%02d", $mon+1);
     $mday=sprintf("%02d", $mday);
     $min=sprintf("%02d", $min);

     if ($FORM{'do_spellcheck'}) {
         $bodyopts = "";
         $mon = $FORM{'mon'};
         $mday = $FORM{'day'};
         $year = $FORM{'year'};
         $hour = $FORM{'hour'};
         $min = $FORM{'min'};
     }

     $body .= "<TR VALIGN=TOP><TD ALIGN=RIGHT ROWSPAN=2><B>Date:</B>&nbsp;</TD><TD NOWRAP><INPUT NAME=year SIZE=5 MAXLENGTH=4 VALUE=$year>-";
     $body .= "<INPUT NAME=mon SIZE=3 MAXLENGTH=2 VALUE=$mon>-";
     $body .= "<INPUT NAME=day SIZE=3 MAXLENGTH=2 VALUE=$mday></TD></TR>\n";
     $body .= "<TR><TD><I>(yyyy-mm-dd)</I></TD></TR>\n";
     
     $body .= "<TR VALIGN=TOP><TD ALIGN=RIGHT ROWSPAN=2><B>Local time:</B>&nbsp;</TD><TD>";
     $body .= "<INPUT NAME=hour SIZE=3 MAXLENGTH=2 VALUE=$hour>:";
     $body .= "<INPUT NAME=min SIZE=3 MAXLENGTH=2 VALUE=$min></TD></TR>\n";
     $body .= "<TR><TD><I>(24 hour time)</I></TD></TR>\n";

     $body .= "</TABLE></TD></TR></TABLE>\n";
     $body .= "<noscript><p style=\"font-size: 0.85em;\"><b>Note:</b> The time/date above is from our server.  Correct them for your timezone before posting.</p></noscript>";

     $body .= "<UL><TABLE width=90%><TR><TD><B>Subject:</B> <I>(optional, for use on longer entries)</I><BR>";
     $body .= "<INPUT NAME=\"subject\" SIZE=50 MAXLENGTH=100 VALUE=\"" . LJ::ehtml($FORM{'subject'}) . "\"><P>";

     if ($spellcheck_html) {
        $body .= "<B>Your spell-checked post:</B><br>";
         $body .= $spellcheck_html;
         $body .= "<P>";
     }

     $body .= "<b>Event:</b><br />";
     $body .= "<textarea name=\"event\" cols=\"50\" rows=\"10\" wrap=\"soft\" style=\"width: 99%\">";
     $body .= LJ::ehtml($FORM{'event'});
     $body .= "</textarea>";
     $body .= "<BR>(=DE (HTML okay; by default, newlines will be auto-formatted to <TT>&lt;BR&gt;</TT>) DE=)";
     if ($LJ::SPELLER) {
         $body .= "<BR><input type=checkbox name=do_spellcheck value=1 id=\"spellcheck\"> <label for=\"spellcheck\">Spell check entry before posting</label>";
     }
     $body .= "</TD></TR><TR><TD ALIGN=CENTER><INPUT TYPE=SUBMIT VALUE=\"Update Journal\"></TD></TR>";

     if ($mode eq "full") 
     {
         my $res = {};

         if (! $FORM{'altlogin'} && $remote)
         {
             my $err;
             
             $res = LJ::Protocol::do_request($dbs, "login", {
                 "ver" => $LJ::PROTOCOL_VER,
                 "username" => $remote->{'user'},
                 "getpickws" => 1,
             }, \$err, { 
                 "noauth" => 1, 
                 "u" => $remote,
             });
         }

         $body .= "<TR><TD NOWRAP><INPUT TYPE=hidden NAME=webversion VALUE=full>(=H2 Optional Settings H2=)";
     
         if (@{$res->{'usejournals'}}) {
             $body .= "<P><B>Journal to post in: </B> ";
             $body .= LJ::html_select({ 'name' => 'usejournal', 
                                        'selected' => $FORM{'usejournal'}, },
                                      "", "($remote->{'user'}) -- default",
                                      map { $_, $_ } @{$res->{'usejournals'}});
         }

         $body .= "<P><B>Security Level:</B> ";
         my @secs = ("public", "Public",
                     "private", "Private",
                     "friends", "Friends");

         my $raw;
         if (@{$res->{'friendgroups'}}) {
             push @secs, ("custom", "Custom...");
             $raw = "onChange=\"document.getElementById('custom_boxes').style.display = (this.selectedIndex == 3) ? 'block' : 'none';\"";
         }
         $body .= LJ::html_select({ 'name' => 'security', 
                                    'selected' => $FORM{'security'}, 
                                    'raw' => $raw,
                                }, @secs);
         $body .= LJ::help_icon("security", " ");

         my $checked;

         if (@{$res->{'friendgroups'}}) {
             my $style = "style='display: none'";
             if ($FORM{'security'} eq "custom") { $style = ""; }
             $body .= "<blockquote id='custom_boxes' $style>";
             foreach my $fg (@{$res->{'friendgroups'}}) {
                 $checked = $FORM{"custom_bit_$fg->{'id'}"} ? "checked" : "";
                 $body .= "<input type='checkbox' name='custom_bit_$fg->{'id'}' $checked value='1'> ";
                 $body .= LJ::ehtml($fg->{'name'}) . "<br />";
             }
             $body .= "</blockquote>"
         }
         
         $checked = $FORM{'prop_opt_preformatted'} ? "CHECKED" : "";
         $body .= "<P> <B>Don't auto-format:</B><INPUT TYPE=CHECKBOX NAME=\"prop_opt_preformatted\" VALUE=1 $checked>";
         $body .= LJ::help_icon("noautoformat", " ", " ");
         $body .= "&nbsp; ";
         $checked = $FORM{'prop_opt_nocomments'} ? "CHECKED" : "";
         $body .= "<B>Disallow Comments:</B><INPUT TYPE=CHECKBOX NAME=\"prop_opt_nocomments\" VALUE=1 $checked>";

         $checked = $FORM{'prop_opt_backdated'} ? "CHECKED" : "";
         $body .= "<P><b>Backdate Entry:</b><INPUT TYPE=CHECKBOX NAME=\"prop_opt_backdated\" VALUE=1 $checked> (won't show on friends view)";
         
         if (@{$res->{'pickws'}}) {
             $body .= "<p><b><a href=\"$LJ::SITEROOT/allpics.bml?user=$remote->{'user'}\">Picture</a> to use:</b> ";
             $body .= LJ::html_select({'name' => 'prop_picture_keyword', 
                                       'selected' => $FORM{'prop_picture_keyword'}, },
                                      ("", "(default)", map { ($_, $_) } @{$res->{'pickws'}}));
             $body .= LJ::help_icon("userpics", " ");
         }

         $body .= "<P><B>Current <A HREF=\"/moodlist.bml\">Mood</A>:</B>";

         LJ::load_moods($dbs);
         my @sel;
         foreach my $moodid (sort { $LJ::CACHE_MOODS{$a}->{'name'} cmp 
                             $LJ::CACHE_MOODS{$b}->{'name'} } keys %LJ::CACHE_MOODS)
         {
             push @sel, $moodid, $LJ::CACHE_MOODS{$moodid}->{'name'};
         }

         $body .= LJ::html_select({'name' => 'prop_current_moodid',
                                   'selected' => $FORM{'prop_current_moodid'}, },
                                  ("", "None, or other:", @sel));

         $body .= " Other: <INPUT NAME=\"prop_current_mood\" SIZE=15 MAXLENGTH=30 VALUE=\"" . LJ::ehtml($FORM{'prop_current_mood'}) . "\">";
         $body .= "<P><B>Current Music:</B> <INPUT NAME=\"prop_current_music\" SIZE=40 MAXLENGTH=60 VALUE=\"" . LJ::ehtml($FORM{'prop_current_music'}) . "\">";
         $body  .= "</TD></TR><TR><TD ALIGN=CENTER><INPUT TYPE=SUBMIT VALUE=\"Update Journal\">";
     }
     else 
     {
         $body .= "<TR><TD>&nbsp;<P>You're looking at the simple page.  For more options, <A HREF=\"$SELF?mode=full\">click here</A>.</TD></TR>\n";
         $body .= "<link href='$SELF?mode=full' rel='Alternate' title='Full Update Page'>\n";
     }
     
     $body .= "</TD></TR></TABLE></UL></FORM>";

     $body .= <<'JAVASCRIPT_STUFF';
<SCRIPT LANGUAGE="JavaScript"><!--
        // for those of you reading the source.... the server will
        // automatically fill in the form with the time values for
        // the west coast, but what this does is if the client can
        // use JavaScript (nearly 99% of the time nowadays), we'll
        // prefill the time in from their computer's clock
function settime() {
        function twodigit (n) {
                if (n < 10) { return "0" + n; }
                else { return n; }
        }

        now = new Date();
        f = document.updateForm;
        // javascript's getYear method is really fucked up:
        f.year.value = now.getYear() < 1900 ? now.getYear() + 1900 : now.getYear();
        f.mon.value = twodigit(now.getMonth()+1);
        f.day.value = twodigit(now.getDate());
        f.hour.value = twodigit(now.getHours());
        f.min.value = twodigit(now.getMinutes());
}

// --></SCRIPT>
JAVASCRIPT_STUFF

 unless ($remote) {
     $body .= "(=H1 Forget something? H1=)(=P If you forgot your username or password, <A HREF=\"lostinfo.bml\">recover it here!</A>. P=)";
 }
 return;
}

_CODE=)(=PAGE
TITLE=>(=_CODE return $title; _CODE=)
BODY=>(=_CODE return $body; _CODE=)
BODYOPTS=>(=_CODE return $bodyopts; _CODE=)
PAGE=)(=_C <LJDEP>
lib: LJ::SpellCheck
link: htdocs/users, htdocs/download/index.bml, htdocs/moodlist.bml
link: htdocs/update.bml, htdocs/lostinfo.bml, htdocs/support/faqbrowse.bml
link: htdocs/allpics.bml
post: htdocs/update.bml
</LJDEP> _C=)
