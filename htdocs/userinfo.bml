<?_code
 
 $title = $ML{'.title'};
 $body = "";
 $head = "";	

 if ($LJ::SERVER_DOWN) {
     $title = $ML{'Sorry'};
     $body = LJ::server_down_html();
     return;
 }

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};
 my $dbcr;
        
 my $remote = LJ::get_remote($dbr);

 my $sth;
 my %countries = ();
 my %states = ();
 LJ::load_codes($dbr, { "country" => \%countries, "state" => \%states });

 my $error = sub {
     my $e = shift;
     $body = "<?h1 $ML{'Error'} h1?><?p $e p?>";
     return;
 };

 my $user = LJ::canonical_username($FORM{'user'});
 if ($FORM{'user'} && ! $user) {
     $body = $ML{'.error.malfname'};
     return;
 }
 if ($user eq "" && $remote) {
     $user = $remote->{'user'};
 }

 my $quser = $dbr->quote($user);

 my $userid = $FORM{'userid'};
 my $u;
 $userid += 0;

 {
     return $error->($ML{'.label.reqfinduser'})
         if ($userid && ! LJ::check_priv($dbs, $remote, "finduser"));

     my $where = $userid ? "userid=$userid" : "user=$quser";
     $sth = $dbr->prepare("SELECT userid, user, statusvis, caps, has_bio, name, defaultpicid, txtmsg_status, allow_infoshow, bdate, allow_contactshow, opt_mangleemail, email, journaltype, dversion, clusterid FROM user WHERE $where");
     $sth->execute;
     if ($dbr->err) { return $error->($dbr->errstr); }
     $u = $sth->fetchrow_hashref;

     $user = $u->{'user'} if $u;
     $userid = $u->{'userid'}+0 if $u;

     LJ::text_out(\$u->{'name'}) if $u;
     if ($u && $FORM{'mode'} eq "full") {
         $sth = $dbr->prepare("SELECT timeupdate, timecreate, ".
                              "UNIX_TIMESTAMP()-UNIX_TIMESTAMP(timeupdate) ".
                              "AS 'secondsold' FROM userusage ".
                              "WHERE userid=$userid");
         $sth->execute;
         ($u->{'timeupdate'}, 
          $u->{'timecreate'},
          $u->{'secondsold'}) = $sth->fetchrow_array;
     }
 }

 unless ($u) {
     $title = $ML{'Error'};
     $body = "<?h1 $ML{'.nonexist.name'} h1?><?p " . BML::ml('.nonexist.body',{'user'=>$user}) . " p?>";
     return;
 }

 if ($u->{'clusterid'}) {
     $dbcr = LJ::get_cluster_reader($u);
 }

 my $remote_isowner = $remote && $remote->{'user'} eq $u->{'user'};
 my $remote_isfriend = LJ::is_friend($dbr, $u, $remote);
 my $com = $u->{'journaltype'} eq "C" ? 1 : 0;
 my $synd;
 if ($u->{'journaltype'} eq "Y") {
     $synd = $dbr->selectrow_hashref("SELECT * FROM syndicated WHERE userid=$u->{'userid'}");
 }
 my $dir = "users";
 
 ### load user props.  some don't apply to communities
 {
     my @props = qw(opt_whatemailshow opt_blockrobots country state city zip 
                    url urlname opt_hidefriendofs);
     unless ($com) { push @props, qw(aolim icq yahoo msn gender jabber); }
     LJ::load_user_props($dbr, $u, @props);
 }

 if ($u->{'opt_blockrobots'}) {
     $head .= "<meta name=\"robots\" content=\"noindex\">\n";
 }

 my $verbosefriends = 1; # Display whole list (1), or just a count (0)?
 if ($com) {
     $title = $ML{'.title.communityinfo'};
     $dir = "community";
 } elsif ($synd) {
     $title = $ML{'.title.syndicated'};
     $u->{'opt_whatemailshow'} = "N";  # don't show email
     $verbosefriends = 0;
 }

 if ($u->{'statusvis'} eq "S") {
     $title = $ML{'error.suspended.title'};
     $body = "<?h1 $ML{'error.suspended.name'} h1?><?p " . BML::ml('error.suspended.text',{'sitename'=>$LJ::SITENAME,'username'=>$user}) . " p?>";
     return;
 }
 if ($u->{'statusvis'} eq "D") {
     $title = $ML{'error.deleted.title'};
     $body = "<?h1 $ML{'error.deleted.name'} h1?><?p " . BML::ml('error.deleted.text',{'user'=>$user}) . " p?>";
     return;
 }
 if ($u->{'statusvis'} eq "X") {
     $title = $ML{'error.purged.title'};
     $body = "<?h1 $ML{'error.purged.name'} h1?><?p $ML{'error.purged.text'} p?>";
     return;
 }

 $user = $u->{'user'};
 $quser = $dbr->quote($user);
 $userid = $u->{'userid'};

 if ($u->{'has_bio'} eq "Y") {
     my $db = $dbcr || $dbr;
     $sth = $db->prepare("SELECT bio FROM userbio WHERE userid=$u->{'userid'}");
     $sth->execute;
     $_ = $sth->fetchrow_hashref;
     $u->{'bio'} = $_->{'bio'};
     LJ::text_out(\$u->{'bio'});
 }

 $sth = $dbr->prepare("SELECT i.interest, i.intcount, i.intid FROM interests i, userinterests ui WHERE i.intid=ui.intid AND ui.userid=$u->{'userid'}");
 $sth->execute;
 my %interests = ();
 while ($_ = $sth->fetchrow_hashref) {
     $interests{$_->{'interest'}} = $_;
 }

 if ($remote && $remote->{'userid'} != $userid) {
     $sth = $dbr->prepare("SELECT i.interest FROM interests i, userinterests ui WHERE i.intid=ui.intid AND ui.userid=$remote->{'userid'}");
     $sth->execute;
     while (my ($int) = $sth->fetchrow_array) {
         if (defined $interests{$int}) {
             $interests{$int}->{'common'} = 1;
         }
     }
 }

 my %res_fr;
 my $incfriendof = 1;
 if ($u->{'opt_hidefriendofs'} && ! $remote_isowner) {
     $incfriendof = 0; 
 }
 LJ::do_request($dbr, 
                { 'mode' => 'getfriends',
                  'ver' => $LJ::PROTOCOL_VER,
                  'includefriendof' => $incfriendof,
                  'user' => $u->{'user'}, }, 
                \%res_fr,
                { 'userid' => $u->{'userid'},
                  'noauth' => 1,
              }); 

 $u->{'name'} = LJ::ehtml($u->{'name'});

 # who does the remote user list as a friend?
 my %remote_friend;
 if ($remote && $verbosefriends) {
     my $error;
     my $rs = LJ::Protocol::do_request($dbs, "getfriends",
                                       { 'ver' => $LJ::PROTOCOL_VER,
                                         'username' => $remote->{'user'}, },
                                       \$error,
                                       { 'userid' => $remote->{'userid'},
                                         'noauth' => 1, });
     foreach my $f (@{$rs->{'friends'}}) {
         $remote_friend{$f->{'username'}} = 1;
     }
 }
 
 my $ci;
 if ($com)
 {
     $sth = $dbr->prepare("SELECT ownerid, membership, postlevel FROM community WHERE userid=$u->{'userid'}");
     $sth->execute;
     $ci = $sth->fetchrow_hashref;
 }

 if ($com) {
     $body .= "<?h1 $ML{'.comminfo.name'} h1?><?p " . BML::ml('.comminfo.body',{'commname'=>$u->{'name'}}) . " ";
     if ($ci) {
         my $cowner;
         if ($ci->{'membership'} eq "closed" || 
             $ci->{'postlevel'} eq "select")  {
             # fetch the community owner's username
             $cowner = LJ::get_username($dbs, $ci->{'ownerid'});
         }
     
         if ($ci->{'membership'} eq "open") {
             $body .= BML::ml('.openmembership.body',{'username'=>$u->{'user'}});
             if ($ci->{'postlevel'} eq "select") {
                 $body .= BML::ml('.rpmembership.body',{'cowner'=>$cowner});
             }
         } elsif ($ci->{'membership'} eq "closed") {
             $body .= BML::ml('.closedmembership.body',{'cowner'=>$cowner});
         }
        $body .= BML::ml('.body.leave',{'commname'=>$u->{'user'}});
     }
     $body .= " p?>";
 } elsif ($synd) {
     $body .= "<?h1 $ML{'.syndinfo.name'} h1?><?p " . BML::ml('.syndinfo.body',{'addtofriends'=>"$LJ::SITEROOT/friends/add.bml?user=$u->{'user'}"}) . " p?>";
 } else {
     $body .= "<?h1 $ML{'.userinfo.name'} h1?><?p " . BML::ml('.userinfo.body',{'username'=>$u->{'name'},'siteroot'=>$LJ::SITEROOT}) . " p?>";
 }

 my $add_friend = 0;
 if ($remote->{'user'} && $remote->{'user'} ne $user) {
     $add_friend = 1;
     if ($res_fr{'friendof_count'}) {
         for (my $i=1; $i<=$res_fr{'friendof_count'}; $i++) {
             if ($remote->{'user'} eq $res_fr{"friendof_${i}_user"}) {
                 $add_friend = 0;
             }
         }
     }
 }

 $body .= "<p align='center'>";

 ## standout bar
 {
     my @linkele;
    
     my $label = $com ? $ML{'.monitor.comm'} : $ML{'.monitor.user'};
     push @linkele, "<a href='/friends/add.bml?user=$user'><img src='$LJ::IMGPREFIX/btn_addfriend.gif' width='22' height='20' alt='$label' title='$label' align='absmiddle' border='0'></a>";

     $label = $ML{'.label.todo'};
     push @linkele, "<a href='/todo/?user=$user'><img src='$LJ::IMGPREFIX/btn_todo.gif' width='22' height='20' alt='$label' title='$label' align='absmiddle' border='0'></a>";

     $label = $ML{'.label.memories'};
     push @linkele, "<a href='/tools/memories.bml?user=$user'><img src='$LJ::IMGPREFIX/btn_memories.gif' width='22' height='20' alt='$label' title='$label' align='absmiddle' border='0'></a>";

     push @linkele, "<a href='/tools/tellafriend.bml?user=$u->{'user'}'><img align='absmiddle' hspace='2' vspace='2' src='$LJ::IMGPREFIX/btn_tellfriend.gif' width='22' height='20' alt='$ML{'.tellafriend'}' title='$ML{'.tellafriend'}' border='0'></a>";

     if (@linkele) {
         $body .="<?standout ";
         $body .= join("&nbsp;&nbsp;", @linkele);
         $body .= " standout?>";
     }
 }

 my $border = 0;
 if ($u->{'user'} eq "test" && 0) { $border = 1; }
 $body .= "<table cellpadding='5' width='100%' border='$border'>";
 {
     my $hook_extra;
     LJ::run_hooks("userinfo_html_by_user", {
         'u' => $u,
         'ret' => \$hook_extra,
     });
     $body .= "<tr valign='top'><td align='right'><b>$ML{'.label.user'}</b></td><td width='100%'><a href='/$dir/$user/'><b>$user</b></a> ($u->{'userid'}) $hook_extra</td>\n";
 }
     
### picture

 my $narrow_left = 2;  ## rows with smaller colspan to 2 
 $body .= "<td align='right' rowspan='3'>";
 if ($u->{'defaultpicid'}) {
     my $picid = $u->{'defaultpicid'};
     my %pic;
     LJ::load_userpics($dbr, \%pic, [ $picid ]);
     $body .= "<a href='/allpics.bml?user=$user'><img src='/userpic/$picid' width='$pic{$picid}->{'width'}' height='$pic{$picid}->{'height'}' vspace='3' border='0'></a>";
 } else {
     $body .= "&nbsp;";
 }
 $body .= "</td>";
### /picture

 $body .= "</tr>\n";

 ### name or 'syndicated from'
 $narrow_left--;
 unless ($synd) {
     $body .= "<tr><td align='right'><b>$ML{'.label.name'}</b></td><td>$u->{'name'}</td></tr>\n";
 } else {
     my $link;
     if (my $url = $u->{'url'}) {
         $link="<a href='" . LJ::ehtml($url) . "'>$u->{'name'}</a>";
     } else {
         $link=$u->{'name'};
     }
     my $icon="<a href='" . LJ::ehtml($synd->{'synurl'}) . "'>".
              "<img src='$LJ::IMGPREFIX/xml.gif' width='36' height='14' align='absmiddle' border='0'></a>";
     $body .= "<tr valign='top'><td align='right'><b>$ML{'.label.syndicatedfrom'}</b></td>\n".
              "<td>$link $icon</td></tr>\n";
 }

 ## text message
 if ($u->{'txtmsg_status'} eq "on" && LJ::get_cap($u, "textmessaging")) {
     my $span = ($narrow_left-- >= 0) ? 1 : 2;
     $body .= "<tr valign='top'><td align='right'><b>$ML{'.label.textmessage'}</b></td><td colspan='$span'>" . BML::ml('.sendmessage.body',{'user'=>$u->{'user'}, 'link'=>"/tools/textmessage.bml?user=$u->{'user'}"}) . "</td></tr>";
 }
 
 if ( ! $synd && $u->{'url'}) {
     my $url = LJ::ehtml($u->{'url'});
     my $span = ($narrow_left-- >= 0) ? 1 : 2;
     unless ($url =~ /^https?:\/\//) {
         $url =~ s/^http\W*//;
         $url = "http://$url";
     }
     my	$urlname = LJ::ehtml($u->{'urlname'} || $url);
     $url = "<a href='$url'>$urlname</a>";
     $body .= "<tr><td align='right'><b>$ML{'.label.website'}</b></td><td colspan='$span'>$url</td></tr>\n" if ($u->{'url'});
 }


  if ( ! $synd && $u->{'allow_infoshow'} eq "Y") {
      if ($u->{'city'} || $u->{'state'} || $u->{'country'}) {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b>$ML{'.label.location'}</b></td><td colspan='$span'>";
          my $estate = LJ::eurl($u->{'state'});
          my $ecity = LJ::eurl($u->{'city'});
          my $ecountry = LJ::eurl($u->{'country'});

          my ($state, $city, $country);

          if ($u->{'country'}) {
              $country = $LJ::DISABLED{'directory'} ? $countries{$u->{'country'}} :
                  "<a href='/directory.bml?opt_sort=ut&s_loc=1&loc_cn=$u->{'country'}'>".
                      $countries{$u->{'country'}} . "</a>";

              my $estate;
              if ($u->{'state'}) {
                  $state = $u->{'state'};
                  if ($u->{'country'} eq "US") { $state = $states{$state}; }
                  $estate = LJ::eurl($state);
                  $state = $LJ::DISABLED{'directory'} ? $state :
                      "<a href='/directory.bml?opt_sort=ut&s_loc=1&loc_cn=".
                          "$u->{'country'}&loc_st=$estate'>$state</a>";
              }

              if ($u->{'city'}) {
                  my $ecity = LJ::eurl($u->{'city'});
                  $city = LJ::ehtml($u->{'city'});
                  unless ($LJ::DISABLED{'directory'}) {
                      $city = "<a href='/directory.bml?opt_sort=ut&s_loc=1&loc_cn=".
                          "$u->{'country'}&loc_st=$estate&loc_ci=$ecity'>$city</a>";
                  }
              }
          }

          $body .= join(", ", grep { $_ } ($city, $state, $country))
      }

      if ($u->{'bdate'} && !$com && $u->{'bdate'} ne "0000-00-00") {
          my $bdate = $u->{'bdate'};
          $bdate =~ s/^0000-//;
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b>$ML{'.label.birthdate'}</b></td><td colspan='$span'>$bdate</td></tr>\n";
      }
  }
 
  if ( ! $synd && ($u->{'allow_contactshow'} eq "Y" ||
      ($u->{'allow_contactshow'} eq "F" && $remote_isfriend)))
  {
      unless ($u->{'opt_whatemailshow'} eq "N") {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr valign='top'><td align='right'><b>Email:</b></td><td colspan='$span'>";
          my @emails = ($u->{'email'});
          if ($u->{'opt_whatemailshow'} eq "L") {
              @emails = ();
          }
          if ($LJ::USER_EMAIL && LJ::get_cap($u, "useremail")) {
              unless ($u->{'opt_whatemailshow'} eq "A") {
                  push @emails, "$u->{'user'}\@$LJ::USER_DOMAIN";
              }
          } 
          foreach my $email (@emails) {
              if ($u->{'opt_mangleemail'} eq "Y" || $email =~ /\@livejournal\.com$/) {
                  $body .= "<table cellpadding='0' cellspacing='0'><tr><td>";
                  for (my $i=0; $i<length($email); $i++) {
                      my $letter = substr($email, $i, 1);
                      if ($letter eq "\@") { $letter = "</td><td align='center'><i>\@</i></td><td>"; }
                      $body .= "$letter";
                  }
                  $body .= "</td></tr></table>\n";
              } else {
                  $body .= "<a href='mailto:$email'>$email</a><br />";
              }
          }
          $body .= "</td></tr>\n";
      }
      
      foreach my $k (qw(aolim icq yahoo msn jabber)) {
          $u->{$k} = LJ::ehtml($u->{$k});
      }

      if ($u->{'aolim'}) {
          my $qim = $u->{'aolim'};
          $qim =~ s/ /+/g;
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b><nobr>AOL IM</nobr>:</b></td><td colspan='$span'>$u->{'aolim'} (<b><a href='aim:addbuddy?screenname=$qim'>$ML{'.label.addbuddy'}</a>, <a href='aim:goim?screenname=$qim&amp;message=Hello+there!.+How+are+you?'>$ML{'.label.sendmessage'}</a></b>)</td></tr>\n";
      }
      if ($u->{'icq'}) {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b><nobr>ICQ UIN</nobr>:</b></td><td colspan='$span'><img src='http://web.icq.com/whitepages/online?icq=$u->{'icq'}&amp;img=5' height='18' width='18'> $u->{'icq'} (<b><a href='http://wwp.icq.com/scripts/search.dll?to=$u->{'icq'}'>$ML{'.label.adduser'}</a>, <a href='http://wwp.icq.com/scripts/contact.dll?msgto=$u->{'icq'}'>$ML{'.label.sendmessage'}</a></b>) </td></tr>\n";
      }
      if ($u->{'yahoo'}) {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b><nobr>Yahoo! ID</nobr>:</b></td><td colspan='$span'><a href='http://profiles.yahoo.com/$u->{'yahoo'}'>$u->{'yahoo'}</a> (<b><a href='http://edit.yahoo.com/config/set_buddygrp?.src=&amp;.cmd=a&amp;.bg=Friends&amp;.bdl=$u->{'yahoo'}'>$ML{'.label.adduser'}</a>, <a href='http://edit.yahoo.com/config/send_webmesg?.target=$u->{'yahoo'}'>$ML{'.label.sendmessage'}</a></b>) </td></tr>\n";
      }
      if ($u->{'msn'}) {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b><nobr>MSN Username</nobr>:</b></td><td colspan='$span'>$u->{'msn'}</td></tr>\n";
      }
      if ($u->{'jabber'}) {
          my $span = ($narrow_left-- >= 0) ? 1 : 2;
          $body .= "<tr><td align='right'><b><nobr>Jabber</nobr>:</b></td><td colspan='$span'>$u->{'jabber'}</td></tr>\n";
      }
  }


 if ($u->{'has_bio'} eq "Y") {
     my $span = ($narrow_left-- > 0) ? 1 : 2;
     my $label = $com ? $ML{'.about.comm'} : $ML{'.about.user'};

     LJ::CleanHTML::clean(\$u->{'bio'}, { 
         'wordlength' => 100,
         'addbreaks' => 1,
         'attrstrip' => [qw[style]],
         'eat' => [qw[head title style layer iframe applet]],
         'mode' => 'allow',
         'deny' => [qw[]],
         'remove' => [qw[marquee bgsound embed object caption link]],
	 'noearlyclose' => 1,
	 'tablecheck' => 1,
	 'autoclose' => [qw[table tr th td]],
     });

     $body .= "<tr><td align='right' valign='top'><b>$label:</b></td><td colspan='$span'>$u->{'bio'}</td></tr>\n";
 }

 ### memories
 {
     $sth = $dbr->prepare("SELECT COUNT(*) FROM memorable WHERE userid=$userid");
     $sth->execute;
     my ($memcount) = $sth->fetchrow_array;
     if ($memcount) {
         my $span = ($narrow_left-- > 0) ? 1 : 2;
         my $noun_name = $memcount == 1 ? '.memories.entry' : '.memories.entries';
         my $count = BML::ml($noun_name, {'count'=>$memcount});
         $body .= "<tr><td align='right' valign='top'><b>$ML{'.label.memories'}</b></td><td colspan='$span'><a href='/tools/memories.bml?user=$user'>$count</a></td></tr>\n";
     }
 }
     
 if (%interests) {
     my $span = ($narrow_left-- > 0) ? 1 : 2;
     $body .= "<tr><td align='right' valign='top'><b><a href='/interests.bml'>$ML{'.label.interests'}</a>:</b></td><td colspan='$span'>";
     my $intcount = 0;
     my $intlist = "";
     foreach (sort keys %interests) {
         $intcount++;
         next if ($intcount > 150);
         LJ::text_out(\$_);
         my $eint = LJ::eurl($_);
         if ($interests{$_}->{'intcount'} > 1) {
             if ($interests{$_}->{'common'}) {
                 $intlist .= "<b><a href='/interests.bml?int=$eint'>$_</a></b>, ";
             } else {
                 $intlist .= "<a href='/interests.bml?int=$eint'>$_</a>, ";
             }
         } else {
             $intlist .= "$_, ";
         }
     }
     chop $intlist; chop $intlist;  # remove trailing ", "
     if ($intcount > 150) {
         my $notshown = $intcount - 150;
         $intlist .= BML::ml('.label.intsnotshown',{'intnotshown'=>$notshown});
     }

     $body .= "<b>$intcount:</b> " . $intlist;

     $body .= "</td></tr>\n";
 }
 
 ##
 ## friends
 ## 
 unless ($synd) {
     my $label = $com ? $ML{'.friends.comm'} : $ML{'.friends.user'};
     my $span = ($narrow_left-- >= 0) ? 1 : 2;
     $body .= "<tr><td align='right' valign='top'><b><a href='$LJ::SITEROOT/$dir/$user/friends'>$label</a>:</b></td><td colspan='$span'>";
     if (!$verbosefriends || $res_fr{'friend_count'} > 500) {
         $body .= "<b>" . $res_fr{'friend_count'} . ":</b> ";
         $body .= "<a href='/directory.bml?s_fro=1&amp;fro_user=$u->{'user'}'>" . BML::ml('.label.viewlabel',{'label'=>$label}) . "</a>.";
     } elsif ($res_fr{'friend_count'}) {
         $body .= "<b>" . $res_fr{'friend_count'} . ":</b> ";
         my $count = 0;
         for (my $i=1; $i<=$res_fr{'friend_count'}; $i++) {
             my $fr = $res_fr{"friend_${i}_user"};
             my $status = $res_fr{"friend_${i}_status"};
             my $frlink = "<a href='/userinfo.bml?user=$fr'>$fr</a>";
             $frlink = "<strike>$frlink</strike>"
                 if ($status && ($status eq 'deleted' || $status eq 'purged' || $status eq 'suspended'));
             $frlink = "<b>$frlink</b>"
                 if $remote_friend{$fr} and $remote->{'userid'} != $u->{'userid'};
             $body .= $frlink;
             $body .= ", ";
         }
         chop $body; chop $body;
     } else {
         $body .= $ML{'.label.nofriends'};
     }
     $body .= "</td></tr>\n";
 }

 ##
 ## friend of
 ##
 unless ($synd) {
     my @friend_of;
     my @member_of;
     my $label;
     for (my $i=1; $i<=$res_fr{'friendof_count'}; $i++) {
         my $fr = $res_fr{"friendof_${i}_user"};
         if ($res_fr{"friendof_${i}_type"} eq "community") {
             push @member_of, $fr;
         } else {
             push @friend_of, $fr;
         }
     }
     if (@friend_of && ($remote_isowner || ! $u->{'opt_hidefriendofs'})) {
         $label = $com ? $ML{'.friendof.comm'} : $ML{'.friendof.user'};
         $body .= "<tr><td align='right' valign='top'><b><nobr>$label:</nobr></b>";
         if ($u->{'opt_hidefriendofs'}) {
             $body  .= "<br /><i>$ML{'.friendof.hidden'}</i>";
         }
         $body .= "</td>";
         $body .= "<td colspan='2' valign='top'><b>" . scalar(@friend_of) . ":</b> ";
         my $count = 0;
         foreach (@friend_of) {
             my $frlink = "<a href=\"/userinfo.bml?user=$_\">$_</a>";
             $frlink = "<b>$frlink</b>"
                 if $remote_friend{$_};
             $body .= "$frlink, ";
             if (++$count == 150 && $FORM{'mode'} ne "full") {
                 $body .= "<a href='" . BML::self_link({ 'mode' => 'full' }) . "'>...</a>";
                 last;
             }
         }
         chop $body; chop $body;
         $body .= "</td></tr>\n";
     };
     if (@member_of) {
         $label = $ML{'.label.memberof'};
         $body .= "<tr><td align='right' valign='top'><b><nobr>$label:</nobr></b></td><td colspan='2'>";
         $body .= "<b>" . scalar(@member_of) . ":</b> ";
         foreach (@member_of) {
             my $frlink = "<a href='/userinfo.bml?user=$_'>$_</a>";
             $frlink = "<b>$frlink</b>"
                 if $remote_friend{$_} && $remote->{'userid'} != $u->{'userid'};
             $body .= "$frlink, ";
         }
         chop $body; chop $body;
         $body .= "</td></tr>\n";
     };
 } else {  # Syndication journals are special
     $body .= "<tr><td align='right' valign='top'><b><nobr>$ML{'.friendof.syndreadcount'}:</nobr></b></td>";
     $body .= "<td colspan='2'><i>$res_fr{'friendof_count'}</i></td></tr>\n";
 }

 ## extra rows generated by hooks
 foreach my $row (LJ::run_hooks("userinfo_rows", {
     'dbs' => $dbs,
     'u' => $u,
     'remote' => $remote,
 })) {
     $body .= "<tr><td align='right' valign='top'><b><nobr>";
     $body .= $row->[0];
     $body .=":</nobr></b></td><td colspan='2'>";
     $body .= $row->[1];
     $body .= "</td></tr>\n";
 }
 
 unless ($synd || $FORM{'mode'} eq "full") {  # Synd accts are always full, but their full ends early (see below)
     $body .= "</table>\n";
     $body .= "<p><center><i><a href='/userinfo.bml?user=$u->{'user'}&amp;mode=full'>$ML{'.label.moredetails'}</a></i></center>";
     return;
 }
 

 ##
 ## interesting times
 ##
 $body .= "<tr><td align='right' nowrap><b>$ML{'.label.datecreated'}</b></td><td colspan='2'>$u->{'timecreate'}</td></tr>";
 $body .= "<tr><td align='right' nowrap><b>$ML{'.label.dateupdated'}</b></td><td colspan='2'>";
 if ($u->{'timeupdate'}) {
     my $secondsold = $u->{'secondsold'};
     my $num;
     my $unit;
     if ($secondsold > 60*60*24*7) {
         $num = int($secondsold / (60*60*24*7));
         $unit = "week";
     } elsif ($secondsold > 60*60*24) {
         $num = int($secondsold / (60*60*24));
         $unit = "day";
     } elsif ($secondsold > 60*60) {
         $num = int($secondsold / (60*60));
         $unit = "hour";
     } elsif ($secondsold > 60) {
         $num = int($secondsold / (60));
         $unit = "minute";
     } else {
         $num = $secondsold;
         $unit = "second";
     }
     $body .= "$u->{'timeupdate'}, <i>$num $unit" . ($num==1?"":"s") . " ago</i>";
 } else {
     $body .= $ML{'.date.never'};
 }
 $body .= "</td></tr>";

 if ($synd) { # The rest of the rows are not useful to synd accts
     $body .= "</table>\n";
     return "";
 }

 {
     $body .= "<tr><td align='right' valign='top'><b>" . BML::ml('.label.clientsused',{'siteroot'=>$LJ::SITEROOT}) . "</b></td><td colspan='2'>";
     $sth = $dbr->prepare("SELECT DISTINCT c.client FROM clients c, clientusage cu ".
                          "WHERE cu.userid=$userid AND cu.clientid=c.clientid ORDER BY c.client");
     $sth->execute;
     my $lastclient = "";
     while ($_ = $sth->fetchrow_hashref) {
         next unless ($_->{'client'} =~ m!(.+)/(.+)!);
         my ($client, $ver) = ($1, $2);
         if ($lastclient ne $client) 
         {
             if ($lastclient) { chop $body; chop $body; $body .= "<BR>"; }
             else { 1; }
             $body .= "<b>$client</b>: ";
             $lastclient = $client;
         }
         $body .= "$ver, ";
     }
     if ($lastclient) { chop $body; chop $body; }
     $body .= "</td></tr>";
 }

 # count journal entries
 {
     my $count;
     
     if ($u->{'clusterid'}) {
         $count = $dbcr->selectrow_array("SELECT COUNT(*) FROM log2 WHERE journalid=$userid");
     } else {
         $count = $dbr->selectrow_array("SELECT COUNT(*) FROM log WHERE ownerid=$userid"); 
     }
     $body .= "<tr><td align='right' nowrap='1'><b>$ML{'.label.journalentrs'}</b></td><td colspan='2'>" .
         &comma($count) . "</td></tr>";
 }
 
 $sth = $dbr->prepare("SELECT SUM(points) AS 'points' FROM supportpoints WHERE userid=$userid");
 $sth->execute;
 $row = $sth->fetchrow_hashref;
 $row->{'points'} += 0;
 if ($row->{'points'}) {
     $body .= "<tr><td align='right' nowrap><b><a href='/support/'>$ML{'.label.supportpoints'}</a>:</b></td><td colspan='2'>" . &comma($row->{'points'}) . "</td></tr>";
 }
 
 sub comma {
     my $num = shift;
     if ($num =~ s/(\d)(\d\d\d)$/$1,$2/) {
         $num =~ s/(\d)(\d\d\d),/$1,$2/g;
     }
     return $num;
 }

##
## journal comments
 {
     my ($com_post, $com_got);
     unless ($LJ::DISABLED{'show-talkleft'}) {
         if ($u->{'clusterid'}) {
             $com_post = comma($dbcr->selectrow_array("SELECT COUNT(*) FROM talkleft ".
                                                       "WHERE userid=$userid"));
         } else {
             $com_post = comma($dbr->selectrow_array("SELECT COUNT(*) FROM talk ".
                                                      "WHERE posterid=$userid"));
         }
         $com_post = BML::ml('.label.composted', {'num'=>$com_post});
     }
     if ($u->{'clusterid'}) {
         $com_got = comma($dbcr->selectrow_array("SELECT COUNT(*) FROM talk2 ".
                                                 "WHERE journalid=$userid"));
     } else {
         $com_got = comma($dbr->selectrow_array("SELECT COUNT(*) FROM talk ".
                                                "WHERE journalid=$userid"));
     }
     $com_got = BML::ml('.label.comreceived', {'num'=>$com_got});
     $body .= "<tr><td align='right'><b>$ML{'.label.comments'}</b></td><td colspan='2'>$com_post" .
         $com_got . "</td></tr>";
 }

###
### shared journal access
###
{
    my $posthere = $dbr->selectcol_arrayref("SELECT u.user FROM logaccess l, user u ".
                                            "WHERE u.userid=l.posterid AND l.ownerid=$u->{'userid'} ".
                                            "AND u.statusvis='V'");
    my $canpost = $dbr->selectcol_arrayref("SELECT u.user FROM logaccess l, user u ".
                                           "WHERE u.userid=l.ownerid AND l.posterid=$u->{'userid'} ".
                                           "AND u.statusvis='V'");

    if (@$posthere || @$canpost) {
        $body .= "<tr valign='top'><td align='right'><b>$ML{'.label.shared'}</b></td><td colspan='2'>";
        foreach (sort @$canpost) {
            $body .= BML::ml('.canpost',{'user'=>$u->{'user'}, 'comm'=>"<a href='userinfo.bml?user=$_'><b>$_</b></a>"}) . "<br>\n";
        }
        foreach (sort @$posthere) {
            $body .= BML::ml('.posthere',{'user'=>"<a href='userinfo.bml?user=$_'><b>$_</b></a>",'comm'=>$u->{'user'}}) . "<br>\n";
        }
        $body .= "</td></tr>";
    }
}

$body .= "</table>\n";

# removed until we run graphviz locally
# $body .= "<p><a href=\"/friends/graph.bml?user=$user\"><b>Graph of friends</b></a></p>";

return;

_code?><?page
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
head=><?_code return $head; _code?>
page?><?_c <LJDEP>
lib: cgi-bin/ljlib.pl, cgi-bin/cleanhtml.pl
link: htdocs/editinfo.bml, htdocs/userinfo.bml, htdocs/users
link: htdocs/community/join.bml, htdocs/community/leave.bml, htdocs/friends/add.bml, htdocs/todo/index.bml
link: htdocs/tools/memories.bml, htdocs/tools/tellafriend.bml, htdocs/allpics.bml
link: htdocs/tools/textmessage.bml, htdocs/interests.bml, htdocs/support/faqbrowse.bml, htdocs/download/index.bml
link: htdocs/support/index.bml
img: img/btn_addfriend.gif, img/btn_todo.gif, img/btn_memories.gif, img/btn_tellfriend.gif, img/talk/md10_thumbup.gif, img/xml.gif
hook: userinfo_html_by_user, userinfo_rows
</LJDEP> _c?>
