(=PAGE
TITLE=>Support Requests
BODY<=

(=_CODE

 &connect_db();
 my ($ret, $sth);

 my $remote = LJ::get_remote($dbh);
 LJ::Support::init_remote($dbh, $remote);

 my $cats = LJ::Support::load_cats($dbh);

 my $filtercat = $FORM{'cat'};
 $filtecat = "" unless ($filtercat =~ /^\w+$/);
 my $filterwhere;

 if ($filtercat eq "_nonpublic") {
     $filterwhere = " AND s.spcatid IN (0";
     foreach my $cat (values %$cats) {
	 if (! $cat->{'public_read'} && LJ::Support::can_read_cat($dbh, $cat, $remote)) {
	     $filterwhere .= ", $cat->{'spcatid'}";
	 }
     }
     $filterwhere .= ")";
 } else {
     my $fcat = LJ::Support::get_cat_by_key($cats, $filtercat);
     if (LJ::Support::can_read_cat($dbh, $fcat, $remote)) {
	 $filterwhere = " AND s.spcatid=$fcat->{'spcatid'}";
     } else {
	 $filtercat = "";
     }
 }

 if ($FORM{'state'} eq "closed")
 {
     $ret .= "(=H1 Recently Closed Support Requests H1=)(=P Below are all support requests that have been recently closed.  To return to the open requests, <a href=\"./help.bml?cat=$filtercat\">click here</a>. P=)";
     
     $sth = $dbh->prepare("SELECT s.* FROM support s WHERE s.state='closed' AND s.timeclosed>UNIX_TIMESTAMP()-(3600*24) $filterwhere ORDER BY timecreate DESC");

 }
 elsif ($FORM{'state'} eq "youreplied") 
 {
     $ret .= "(=H1 Requests you replied to H1=)(=P This shows all open requests you've replied to. P=)";

     unless ($remote) {
	 return "(=H1 Error H1=)(=P You must be logged in to filter on requests that you've replied to. P=)";
     }
     
     $sth = $dbh->prepare("SELECT DISTINCT s.* FROM support s, supportlog sl WHERE s.spid=sl.spid AND s.state='open' AND sl.userid=$remote->{'userid'} $filterwhere ORDER BY timecreate DESC");
     
 }
 else 
 {
     $ret .= "(=H1 Open Support Requests H1=)(=P Below are all support requests that are open (they just came in and haven't been touched yet) or answered (either awaiting to be closed by the person needing help, or the person requested they still need help).  The <a href=\"./help.bml?state=closed&cat=$filtercat\">closed reports</a> are also available.  If you help somebody out and they confirm you helped them, you get the number of points indicated in the status column.  These points will show up on your userinfo page. P=)";
 
     $sth = $dbh->prepare("SELECT COUNT(*) FROM support WHERE state='open'");
     $sth->execute;
     my ($count) = $sth->fetchrow_array;
     unless ($count) {
	 return "(=H1 No support requests! H1=)(=P The support queue is currently empty.  :-) P=)";
     }
     $sth = $dbh->prepare("SELECT s.*, MAX(sl.timelogged) AS 'timelogged' FROM support s, supportlog sl WHERE s.spid=sl.spid AND s.state='open' AND sl.type IN ('req','answer') $filterwhere GROUP BY s.spid ORDER BY timecreate DESC");
 }
 $sth->execute;


 # filter line:
 $ret .= "<form method=get>Show only ";
 $ret .= "<select name=state>";
 {
     my @states = ("" => "Open",
		   "closed" => "Closed",
		   "green" => "Green");
     if ($remote) {
	 push @states, ("youreplied", "You Replied");
     }
     while (@states) {
	 my ($skey, $sname) = splice(@states, 0, 2);
	 my $sel = $FORM{'state'} eq $skey ? " selected" : "";
	 $ret .= "<option value=\"$skey\"$sel>$sname</option>";
     }
 }
 $ret .= "</select>";

 $ret .= " requests of type: <select name=cat>";
 $ret .= "<option value=\"\">(All)</option>";
 my @filter_cats = LJ::Support::filter_cats($remote, $cats);
 if (LJ::check_priv($dbh, $remote, "supportread")) {
     unshift @filter_cats, { 'catkey' => '_nonpublic',
			     'catname' => '(Non-Public)' };
 }
 foreach my $cat (@filter_cats)
 {
     my $sel = $filtercat eq $cat->{'catkey'} ? " SELECTED" : "";
     $ret .= "<option value=\"$cat->{'catkey'}\"$sel>$cat->{'catname'}</option>";
 }
 $ret .= "</select>\n";
 $ret .= "<input type=submit value=\"Filter\"></form>";
 # /filter line
 

 $ret .= "<p><table cellpadding=4 cellspacing=1 border=1 bgcolor=#ffffff><tr bgcolor=#d0d0d0>\n";
 $ret .= "<td><b>ID#</b></td>\n";
 $ret .= "<td><b>Summary</b></td>\n";
 $ret .= "<td><b>Problem Area</b></td>\n";
 $ret .= "<td><b>Posted</b></td>\n";
 $ret .= "<td><b>Status</b></td>\n";
 $ret .= "</tr>";

 while ($sp = $sth->fetchrow_hashref)
 {
     LJ::Support::fill_request_with_cat($sp, $cats);
     next unless (LJ::Support::can_read($dbh, $sp, $remote));

     my $status = "open";
     my $barbg = "BGCOLOR=#D0EED0";
     if ($sp->{'timeclosed'}) { 
	 $status = "closed"; 
	 $barbg = "BGCOLOR=#EED0D0";
     }
     elsif ($sp->{'timelogged'} > $sp->{'timetouched'}+5) { 
	 $status = "answered<BR>awaiting close"; 
	 $barbg = "BGCOLOR=#EEEED0";
     }
     elsif ($sp->{'timetouched'} > $sp->{'timelogged'}+5) { 
	 $status = "answered<BR><B>still needs help</B>"; 
	 $barbg = "BGCOLOR=#D0EED0";	 
     }
       
     next if ($FORM{'state'} eq "green" && $barbg ne "BGCOLOR=#D0EED0");
       
     my $summary = &BMLUtil::ehtml($sp->{'subject'});
     my $secold = time() - $sp->{'timecreate'};
     my $age = &ago_text($secold);
     my $probarea = $sp->{_cat}->{'catname'};
     my $points = LJ::Support::calc_points($sp, $secold);

     unless ($status eq "closed") {
	 $status .= "<BR>($points point";
	 if ($points > 1) { $status .= "s"; }
	 $status .= ")";
     }

     $ret .= "<tr valign=top $barbg>\n";
     $ret .= "<td><b><a href=\"see_request.bml?id=$sp->{'spid'}\">$sp->{'spid'}</a></b></td>\n";
     $ret .= "<td><b>$summary</b></td>\n";
     $ret .= "<td>$probarea</td>\n";
     $ret .= "<td nowrap><font size=-1>$age</font></td>\n";
     $ret .= "<td nowrap><font size=-1>$status</font></td>\n";
     $ret .= "</tr>";

 }
 $ret .= "</table>\n";

 return $ret;

_CODE=)

(=HR=)
Back to the <A HREF="./">support area</A>.

<=BODY
PAGE=)
