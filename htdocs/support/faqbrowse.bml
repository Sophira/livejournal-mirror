<?page
head<=
<?searchcss?>

<script language='JavaScript'>
<!--
    function showAnswer() {
        if (!document.getElementById) {
            return true;
        }
        var a = document.getElementById('answer');
        var r = document.getElementById('rm');
        if (!a || !r) {
            return true;
        }
        r.style.display = 'none';
        a.style.display = 'block';
        return false;
    }
//-->
</script>
<=head
body<=
<?_code
{
    use strict;
    use vars qw(%GET);

    # get faqid and redirect to faq.bml if none
    my $faqidarg = $GET{'faqid'} + 0;
    my $faqcatarg = $GET{'faqcat'};
    
    unless ($faqidarg || $faqcatarg) {
        return BML::redirect("faq.bml");
    }
    
    # make title and body references to BML scratch area
    my $title = \$_[1]->{'title'};
    my $body = \$_[1]->{'body'};
    $$body = '';
    $$title = '';

    # get language settings
    my $curlang = $GET{'lang'} || BML::get_language();
    my $deflang = BML::get_language_default();
    my $altlang = $curlang ne $deflang;
    my $mll = LJ::Lang::get_lang($curlang);
    my $mld = LJ::Lang::get_dom("faq");
    $altlang = 0 unless $mll && $mld;

    my $mode = $GET{'view'} eq 'full' ? 'answer' : 'summary';

    my $where;

    my $dbr = LJ::get_db_reader();
    # loading single faqid
    if ($faqidarg) {
        $$title = BML::ml('.title_num', { 'num' => $faqidarg });
        $where = "faqid=$faqidarg";

    # loading entire faqcat
    } elsif ($faqcatarg) {
        my $catname = $dbr->selectrow_array("SELECT faqcatname FROM faqcat WHERE faqcat=?",
                                            undef, $faqcatarg);
        if ($altlang) {
            $catname = LJ::Lang::get_text($curlang, "cat.$faqcatarg", $mld->{'dmid'});
        }

        $$title = BML::ml('.title_cat', { 'catname' => LJ::ehtml($catname) });

        $where = "faqcat=" . $dbr->quote($faqcatarg);
    }

    my $remote = LJ::get_remote();

    # query db and get data
    my $sth = $dbr->prepare("SELECT faqid, question, summary, answer, faqcat, lastmoduserid, ".
                            "DATE_FORMAT(lastmodtime, '%M %D, %Y'), ".
                            "UNIX_TIMESTAMP(lastmodtime) FROM faq ".
                            "WHERE $where ORDER BY sortorder");
    $sth->execute;
    if ($dbr->err) {
        $$title = $ML{'Error'};
        $$body = "$ML{'error.dberror'} <ul><li>" . $dbr->errstr . "</li></ul>\n";
        return;
    }

    my $count = 0;
    my $dbh;
    my $backfaqcat;
    my $categoryname;
    while (my ($faqid, $question, $summary, $answer, $faqcat,
               $lastmoduserid, $lastmodtime, $unixmodtime) = $sth->fetchrow_array)
    {
        $dbh ||= LJ::get_db_writer();

        # log this faq view
        if ($remote && ! $LJ::DISABLED{faquses}) {
            $dbh->do("REPLACE INTO faquses (faqid, userid, dateview) ".
                     "VALUES ($faqid, ?, NOW())", undef, $remote->{'userid'});
        }

        BML::note_mod_time($unixmodtime);

        # it'd be better to load them in a batch, but this works for now:
        if ($altlang) {
            $question = LJ::Lang::get_text($curlang, "$faqid.1question", $mld->{'dmid'});
            # Load answer anyway since we may need it for old FAQs
            $answer   = LJ::Lang::get_text($curlang, "$faqid.2answer",   $mld->{'dmid'});
            $summary  = LJ::Lang::get_text($curlang, "$faqid.3summary",  $mld->{'dmid'});
        }

        # Old FAQs don't have summaries, so show the answer instead
        my $hassum = 1;
        if ($summary eq "" || $summary eq "-") { # If translators make the summary "-" (they can't save blank strings), then don't show the summary
            $hassum = 0;
            $summary = $answer;
        }

        # escape question
        $question = LJ::ehtml($question);
        $question =~ s/^\s+//; $question =~ s/\s+$//;
        $question =~ s/\n/<br \/>/g;
        
        my @faqids;
        my %faqtitles;
        
        # Create an array of FAQ ids that are needed to display the [[faqtitle:#]] variables in this FAQ
        my $find_faq_ids = sub {
            my $text = shift;

            while ($$text =~ /\[\[faqtitle:(\d+)\]\]/g) {
                push @faqids, LJ::ehtml($1);
            }
        };
        
        # Don't worry about the question, since there shouldn't ever be other FAQ titles in it
        $find_faq_ids->(\$summary);
        $find_faq_ids->(\$answer) if $hassum;

        # Create a hash of faqid->faqtitle from the given faqids for displaying [[faqtitle:#]] variables in this FAQ
        foreach my $faqid (@faqids) {
            my $title;
            if ($mll && $mld) {
                $title = LJ::Lang::get_text($curlang, "$faqid.1question", $mld->{'dmid'});
            } elsif ($mld) {
                $title = LJ::Lang::get_text($deflang, "$faqid.1question", $mld->{'dmid'});
            }
            unless ($faqtitles{$faqid}) {
                $faqtitles{$faqid} = LJ::ehtml($title) || "<b>[Failed to get title of FAQ #$faqid]</b>";
            }
        }

        my $user;
        my $user_url;
        my $u;

        # Get remote username and journal URL, or example user's username and journal URL
        if ($remote) {
            $user = $remote->{'user'};
            $user_url = $remote->journal_base;
        } else {
            $u = LJ::load_user($LJ::EXAMPLE_USER_ACCOUNT);
            $user = $u ? $u->{'user'} : "<b>[Unknown or undefined example username]</b>";
            $user_url = $u ? $u->journal_base : "<b>[Unknown or undefined example username]</b>";
        }

        my $err_bad_variable = sub {
            my $var = LJ::ehtml(shift);
            return "<b>[Unknown or improper variable: $var]</b>";
        };
 
        # Replace a variable like [[var]] or [[var:arg]] with the correct text
        my $replace_var = sub {
            my ($var, $arg, $section) = @_;
            if ($arg && $var eq "journalurl") {
                # They gave us a journalurl argument
                my $u_arg = LJ::load_user($arg)
                    or return "<b>[Unknown username: " . LJ::ehtml($arg) . "]</b>";
                return {
                    journalurl => $u_arg->journal_base,
                }->{$var} || $err_bad_variable->($var . ':' . $arg);
            }
            elsif ($arg && $var eq "faqtitle" && $section ne 'q') {
                # They gave us a FAQ title argument
                my $faqtitle = $faqtitles{$arg}
                    or return "<b>[Unknown FAQ id: " . LJ::ehtml($arg) . "]</b>";
                return {
                    faqtitle => $faqtitle,
                }->{$var} || $err_bad_variable->($var . ':' . $arg);
            }
            elsif (!$arg) {
                # Variable with no argument
                return {
                    username => $user,
                    journalurl => $user_url,
                }->{$var} || $err_bad_variable->($var);
            }
            else {
                # Error
                return $err_bad_variable->($var . ':' . $arg);
            }
        };
        
        # Change [[username]] to remote's username, or site's example username if no remote
        # Change [[journalurl]] to remote's or example's appropriate journal URL
        # Change [[journalurl:username]] to given username's appropriate journal URL
        # Change [[faqtitle:#]] to the given FAQ id's title/question (not valid in titles/questions)
        my $replace_all_vars = sub {
            my ($ref, $section) = @_;
            while ($$ref =~ s/\[\[(\w+)(?::([\w-]+?))?\]\]/$replace_var->($1, $2, $section)/eg) { 1; }
        };
        
        $replace_all_vars->(\$question, 'q');
        $replace_all_vars->(\$summary, 's');
        $replace_all_vars->(\$answer, 'a') if $hassum;

        # Clean this as if it were an entry, but don't allow lj-cuts
        LJ::CleanHTML::clean_event(\$summary, {'ljcut_disable' => 1});
        LJ::CleanHTML::clean_event(\$answer,  {'ljcut_disable' => 1}) if $hassum;

        # Highlight search terms
	my $term = sub {
	    my $xterm = shift;
        return $xterm if $xterm =~ m!^https?://!;
 	    return "<span class='searchhighlight'>" . LJ::ehtml($xterm) . "</span>";
	};
        my $qterm = $GET{'q'};
	if ($qterm) {
	    $question =~ s/(\Q$qterm\E)/$term->($1)/ige;

            # don't highlight things in the FURTHER READING section
            # (a livejournal.com convention)
            $answer =~ s/FURTHER READING.+//s;
            my $fr = $1;

            # don't highlight terms in URLs
            $summary =~ s!((?:https?://[^>]+)?\Q$qterm\E)!$term->($1)!ige;
            $answer =~ s!((?:https?://[^>]+)?\Q$qterm\E)!$term->($1)!ige;

            $answer .= $fr;
	}

        # display output
        $$body .= "<?h1";
        if ($faqcatarg) {
            $$body .= " <a style='text-decoration: none;' " .
                      "href='faqbrowse.bml?faqid=$faqid'>&#x00bb;</a>";
        }
        $$body .= " $question h1?>";
        $$body .= "<div style='margin-left: 20px;'>";

        $$body .= "<div name='summary' id='summary'>$summary</div>";
        $$body .= "<br />";

        if ($mode eq 'summary' && $hassum) {
            my $q = "&amp;q=$qterm" if $qterm;

            $$body .= "<div id='rm' name='rm'>";
            my $oc = $faqcatarg ? '' : "onclick='return showAnswer();'";
            $$body .= "<b>(&nbsp;<a $oc href='faqbrowse.bml?faqid=$faqid$q&view=full'>" .
                "$ML{'.more'}</a>&nbsp;)</b>";
            $$body .= "</div>";
        }

        if (!$faqcatarg && $hassum) { # If we're just viewing one faq and it has a summary
            if ($mode eq 'answer') {
                $$body .= "<div id='answer' name='answer'>$answer</div>";
            } else {
                $$body .= "<div id='answer' name='answer' style='display: none'>$answer</div>";
            }
        }

        $$body .= "</div>";

        if ($altlang) {
            my $itid = LJ::Lang::get_itemid($mld->{'dmid'}, "$faqid.2answer");
            if ($itid) {
                my $sql = "SELECT DATE_FORMAT(l.chgtime, '%Y-%m-%d'), t.userid " .
                    "FROM ml_latest AS l, ml_text AS t WHERE l.dmid = t.dmid AND l.lnid = t.lnid AND l.itid = t.itid" .
                    "AND l.lnid=? AND l.dmid=? AND l.itid=? ORDER BY t.txtid DESC LIMIT 1";
                my $sth = $dbr->prepare($sql);
                $sth->execute($mll->{'lnid'}, $mld->{'dmid'}, $itid);
                ($lastmodtime, $lastmoduserid) = $sth->fetchrow_array;
            }
        }

        my $lastmodwho = LJ::get_username($lastmoduserid);
        if ($lastmodwho) {
            $$body .= "<p align=\"right\"><b>$ML{'.lastupdated'}</b><br />$lastmodtime ($lastmodwho)</p>";
        }

        if (LJ::check_priv($remote, "faqedit", "*") ||
            LJ::check_priv($remote, "faqedit", $faqcat))
        {
            $$body .= "<p align=\"right\"><a href=\"/admin/faq/faqedit.bml?id=$faqid\">$ML{'.edit.faq'}</a></p>";
        }

        $count++;

        # get the name of this faq's category, if loading a single faqid
        if ($faqidarg) {
            $categoryname = $dbr->selectrow_array("SELECT faqcatname FROM faqcat WHERE faqcat=?",
                                             undef, $faqcat);
            if ($altlang) {
                $categoryname = LJ::Lang::get_text($curlang, "cat.$faqcat", $mld->{'dmid'});
            }
        }
        $backfaqcat = $faqcat;
     }

     # nothing found?
     unless ($count) {
         $$title = $ML{'Error'};
         $$body .= "<p><b>$ML{'.error.nofaq'}</b></p>\n";
     }

     $$body .= "<?hr?>";

     if ($categoryname) {
         $$body .= BML::ml('.backfaqcat3', {'aopts' => "href='/support/faqbrowse.bml?faqcat=$backfaqcat'", 'categoryname' => $categoryname}) . "<br />"
            if $backfaqcat && $faqidarg;
     } else {
         $$body .= BML::ml('.backfaqcat2', {'aopts' => "href='/support/faqbrowse.bml?faqcat=$backfaqcat'"}) . "<br />"
            if $backfaqcat && $faqidarg;
     }

     $$body .= BML::ml('.backfaq2', { 'aopts' => 'href="faq.bml"' }) . "<br />";
     $$body .= BML::ml('.backsearch', { 'aopts' => 'href="/support/faqsearch.bml"' }) . "<br />";
     $$body .= BML::ml('.backsupport2', { 'aopts' => 'href="/support/"' });

     # we're dynamic, set title as crumb title
     LJ::set_dynamic_crumb($_[1]->{'title'}, 'faq');

     return $_[1]->{'body'};
}
_code?>
<=body
title=><?_code return $_[1]->{'title'}; _code?>
page?><?_c <LJDEP>
link: htdocs/support/index.bml, htdocs/support/faq.bml
</LJDEP> _c?>
