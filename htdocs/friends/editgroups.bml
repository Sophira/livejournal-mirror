<?_code
{
    use strict;
    use vars qw(%GET %POST $title $body);

    LJ::set_active_crumb('managefriendgrps');

    $title = $ML{'.title2'};
    $body = "";

    my $print_with_ad = sub {
        my $str = shift;

        my $ad_box = LJ::get_ads({ location => 'bml.friends.editgroups/error', ljadwrapper => 1 });
        return $ad_box . $str;
    };

    my $err = sub {
        $title = $ML{'Error'};
        $body = $print_with_ad->(LJ::bad_input(@_));
        return;
    };

    # these are only used by the client-side for JS to play with.
    # we delete them because they may contain embedded NULLs, which
    # text_in won't like.
    delete $POST{'list_in'};
    delete $POST{'list_out'};
    
    unless (LJ::text_in(\%POST)) {
        $body = $print_with_ad->("<?badinput?>");
        return;
    }
    
    my $remote = LJ::get_remote();
    unless ($remote) {
        $body = $print_with_ad->("<?needlogin?>");
        return;
    }

    my $lang = $remote->prop('browselang') || $LJ::DEFAULT_LANG;
    my $authas = $GET{authas};
    my $view_only_mode = 0;
    my $u = LJ::get_effective_remote;
    if ( $authas && !$u ) {
        $u = LJ::load_user($authas);
        if ( LJ::priv_can_view("/friends/editgroups.bml", $remote) ) {
            return LJ::bad_input($ML{'error.invalidauth'}) if LJ::did_post();
            my $warn_foreign = LJ::Lang::get_text(
                $lang,
                'error.warn_foreing',
                undef,
                { username   => $u->ljuser_display, }
            );
            $body .= "<?warningbar $warn_foreign warningbar?><br />";
            $view_only_mode = 1;
        } else {
            $body .= "<?h1 $ML{'Error'} h1?><?p ";
            my $privs = LJ::priv_for_page("/friends/editgroups.bml");
            if ( $privs ) {
                $body .= LJ::Lang::get_text(
                    $lang,
                    'error.no_permission',
                    undef,
                    {
                        username   => $u->ljuser_display,
                        priv       => $privs,
                    }
                );
            } else {
                return LJ::bad_input($ML{'error.invalidauth'});
            }
            $body .= " p?>";
            return $body;
        }
    }
    return LJ::bad_input($ML{'error.invalidauth'}) unless $u;

    # extra arguments for get requests
    my $getextra = $authas ne $remote->{'user'} ? "?authas=$authas" : '';
    
    if ($POST{'mode'} eq "save") {
        unless (LJ::check_form_auth()) {
            $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>");
            return;
        }

        my %res;
        $POST{'mode'} = "editfriendgroups";
        $POST{'user'} = $u->{'user'};
        $POST{'ver'} = $LJ::PROTOCOL_VER;
        LJ::do_request(\%POST, \%res, {
            'u' => $u,
            'noauth' => 1, 
        });
        
        if ($res{'success'} eq "OK") {
            $body .= LJ::get_ads({ 
                location    => 'bml.friends.editgroups/main', 
                ljadwrapper => 1,
                below_ad    => LJ::CProd->full_box_for($remote, width => 300)
            });
            $body .= "<?h1 $ML{'.saved.header'} h1?><?p $ML{'.saved.text'} p?>";
            $body .= LJ::Widget::GettingStarted->render;
        } else {
            $body .= "<?h1 $ML{'Error'} h1?><?p $ML{'.error.text'} p?><?p $res{'errmsg'} p?>";
            $body = $print_with_ad->($body);
        }
        return;
    }
    
    my %res;
    LJ::do_request({ 'mode' => 'getfriends',
                     'user' => $u->{'user'}, 
                     'ver'  => $LJ::PROTOCOL_VER,
                     'includegroups' => 1 },
                   \%res, { 'u' => $u,
                            'noauth' => 1, });
    my @num_used;
    my @num_free;

    # authas switcher form
    $body .= "<form method='get' action='editgroups.bml'>\n";
    $body .= LJ::make_authas_select($remote, { 'authas' => $GET{'authas'} }) . "\n";
    $body .= "</form>\n\n";

    $body .= "<?h1 $ML{'.title'} h1?><?p $ML{'.text'} p?><?p $ML{'.text.sec'} p?>";
    $body .= "<form method='post' name='fg' action='editgroups.bml$getextra' class='lj-widget' data-widget='friendseditgroups'>";
    $body .= LJ::form_auth();
    $body .= "<input type='hidden' name='mode' value='save' />";

    for (my $i=1; $i<=30; $i++) {
        my $sort = 255;
        my $name = "";
        my $public = 0;
        if ($res{"frgrp_${i}_name"}) {
            $sort = $res{"frgrp_${i}_sortorder"}+0;
            $name = LJ::ehtml($res{"frgrp_${i}_name"});
            $public = $res{"frgrp_${i}_public"}+0;
            push @num_used, $i;
        } else {
            push @num_free, $i;
        }
        $body .= "<input type='hidden' name='efg_set_${i}_name' value='$name' />";
        $body .= "<input type='hidden' name='efg_set_${i}_sort' value='$sort' />";
        $body .= "<input type='hidden' name='efg_delete_${i}' value='0' />";
        $body .= "<input type='hidden' name='efg_set_${i}_public' value='$public' />";
    }

    my @friends;

    for (my $i=1; $i<=$res{'friend_count'}; $i++) {
        push @friends, {
            i    => $i,
            user => $res{"friend_${i}_type"} eq 'identity' ? $res{"friend_${i}_name"} : $res{"friend_${i}_user"}
        };
    }

    @friends = sort {
        $a->{user} cmp $b->{user}
    } @friends;

    foreach (@friends) {
        my $i    = $_->{i};
        my $user = $res{"friend_${i}_user"};

        my $mask = $res{"friend_${i}_groupmask"} || 1;
        $body .= "<input type='hidden' name='editfriend_groupmask_$user' value='$mask' />";

        if ($res{"friend_${i}_type"} eq 'identity') {
            my $dn = $res{"friend_${i}_identity_display"};
            $body .= "<input type='hidden' name='nameremap_$user' id='nameremap_$user' value='$dn' />";
        }
    }
    
    # escape strings for JavaScript
    my %T = qw(public  .group.public
               rename  .prompt.rename
               newname .prompt.newname
               delete  .confirm.delete
               max30   .error.max30
               );
    foreach (keys %T) { $T{$_} = LJ::ejs($ML{$T{$_}}); }
    
    LJ::need_string(qw{
    	.group.public
    	.prompt.rename
    	.prompt.newname
    	.confirm.delete
    	.error.max30
    	talk.post.security.maintainers
    });
    
    LJ::need_res('js/jquery/jquery.lj.friendseditgroups.js');

    $body .= "<table cellspacing='5'><tr valign='bottom'>";
    $body .= "<td nowrap='1' colspan='2'><strong>$ML{'.yourgroups'}</strong></td>";
    $body .= "<td nowrap='1' colspan='2'><strong>$ML{'.ingroup.not'}</strong></td>";
    $body .= "<td nowrap='1'><strong>$ML{'.ingroup'}</strong></td></tr>";

    $body .= "<tr valign='top'>";
    $body .= "<td><select name='list_groups' style='width: 150px;' size='15' id='list_groups'>";
    foreach my $num (sort { $res{"frgrp_${a}_sortorder"} <=> 
                            $res{"frgrp_${b}_sortorder"} } @num_used) {

        my $listname = $res{"frgrp_${num}_name"};
        $listname .= " $ML{'.group.public'}" if $res{"frgrp_${num}_public"};
        $body .= "<option value='$num'>" . LJ::ehtml($listname);
    }

    $body .= "</select></td>";
 
    $body .= "<td valign='middle'>";
    $body .= "<input type='button' value='$ML{'.btn.mv.up'}' id='moveGroupUp' /><br /><br />";
    $body .= "<input type='button' value='$ML{'.btn.mv.down'}' id='moveGroupDown' /></td>";

    $body .= "<td><select name='list_out' multiple='1' size='15'>";
    $body .= "<option value=''>---------------</option></select></td>";

    $body .= "<td valign='middle'>";
    $body .= "<input type='button' id='moveIn' value='&gt;&gt;' /><br /><br />";
    $body .= "<input type='button' id='moveOut' value='&lt;&lt;' /></td>";

    $body .= "<td><select name='list_in' multiple='1' size='15' id='list_in'";
    $body .= " data-community='yes'" if ($u && $u->is_community);
    $body .= ">";
    $body .= "<option value=''>$ML{'talk.post.security.maintainers'}</option>" if ($u && $u->is_community);
    $body .= "<option value=''>---------------</option></select></td>";

    $body .= "</tr><tr><td colspan='2'>";
    $body .= "<nobr>";
    $body .= "<input type='button' value='$ML{'.btn.ge.new'}' id='newGroup' /> ";
    $body .= "<input type='button' value='$ML{'.btn.ge.del'}' id='deleteGroup' /> ";
    $body .= "<input type='button' value='$ML{'.btn.ge.ren'}' id='renameGroup' />";
    $body .= "</nobr><br /><nobr>";
    $body .= "<input type='button' value='$ML{'.btn.gs.public'}' id='makePublic' /> ";
    $body .= "<input type='button' value='$ML{'.btn.gs.private'}' id='makePrivate' />";
    $body .= "</nobr></td><td></td><td></td><td></td>";

    $body .= "</tr></table>";

    unless ( $view_only_mode ) {
        $body .= "<?h1 $ML{'.done.header'} h1?><?p $ML{'.done.text'} p?>";
        $body .= "<?p $ML{'.redirect.friends.title'} p?>";
        $body .= "<?p <input type='submit' value='$ML{'.done.btn'}' /> p?>";
    }
    $body .= "</form>";

    $body = $print_with_ad->($body);
    return;
}
_code?><?page
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
page?><?_c <LJDEP>
link: htdocs/login.bml
post: htdocs/friends/editgroups.bml
</LJDEP> _c?>
