<?_code
use strict;

use LJ::JSON;

use vars qw($body $title $windowtitle %GET %POST);

 my $print_with_ad = sub {
    my $str = shift;
    my $ad_box = LJ::get_ads({ location => 'bml.friends.add/error', ljadwrapper => 1 });
    return $ad_box . $str;
 };

 my $head     = \$_[0]->{'head'};

 my $remote = LJ::get_remote();
 my $user = $POST{'user'} || $GET{'user'};
 my $u = LJ::load_user($user);
 my $userid = $u->{userid};
 $body = "";

 LJ::need_res(qw(
                 stc/addfriend.css
                 stc/entry.css
                 js/core.js
                 js/colorpicker.js
                 js/jquery/jquery.ui.position.min.js
                 js/jquery/jquery.ui.autocomplete.min.js
                 js/jquery/jquery.bgiframe.js
                 js/jquery/jquery.tmpl.min.js
                 js/addfriend.js));

 LJ::set_active_crumb('addfriend');

 unless ($remote)
 {
     $title = $ML{'.error1.title'};
     $body = $print_with_ad->("<?needlogin?>");
     return;
 }

 unless ($user && $userid)
 {
     $title = $ML{'Error'};
     $body = $print_with_ad->(BML::ml('.error2.text2', {'aopts' => "href='$LJ::SITEROOT/friends/edit.bml'"}));
     return;
 }

 if ($POST{'mode'} eq "add")
 {
     unless (LJ::did_post()) {
         $title = $ML{'Error'};
         $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p <?requirepost?> p?>");
         return;
     }

     unless (LJ::check_form_auth()) {
         $title = $ML{'Error'};
         $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>");
         return;
     }

     unless ($remote->{'userid'} == $POST{'remid'}) {
         $title = $ML{'Error'};
         $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p $ML{'.error.sessionchanged'} p?>");
         return;
     }

     my $gmask = 1;
     foreach my $bit (1..30) {
         next unless $POST{"bit_$bit"};
         $gmask |= (1 << $bit);
     }

     my $req = {
         "user" => $remote->{'user'},
         "mode" => "editfriends",
         "ver"  => $LJ::PROTOCOL_VER,
     };

     my $friend_tags_str;

     if ($POST{'action:delete'}) {
         $req->{"editfriend_delete_$user"} = 1;
         $friend_tags_str = '';
     } else {
         $req->{"editfriend_add_1_user"} = $user;
         $req->{"editfriend_add_1_fg"} = $POST{'editfriend_add_1_fg'};
         $req->{"editfriend_add_1_bg"} = $POST{'editfriend_add_1_bg'};
         $req->{"editfriend_add_1_groupmask"} = $gmask;
         $friend_tags_str = $POST{'friend_tags'};
     }

     my %res = ();
     LJ::do_request($req, \%res,
                    { "noauth" => 1, "userid" => $remote->{'userid'} } );

     if ($res{'success'} eq "OK")
     {
        if ($remote->get_cap ('aliases')) {
            ## user has been added. setting alias for him
            LJ::set_alias($u, $POST{'user_note'});
        }

         if (defined $friend_tags_str) {
             my $friends_tags = LJ::FriendsTags->load($remote);
             $friends_tags->set($u->{userid}, $POST{friend_tags_mode} || 'A', $friend_tags_str);
             unless ($friends_tags->save()) {
                 $body .= '<br>' . BML::ml('.error.friendstags', { aopts => "href='/friends/add.bml?user=$user'" }) . '<br><br>';
             }
         }
        
         $body .= LJ::get_ads({ 
            location    => 'bml.friends.add/done',
            ljadwrapper => 1,
            below_ad    => LJ::CProd->full_box_for($remote, width => 300) 
         });

         if ($POST{'action:delete'}) {
             $title = $ML{'.remove.title'};
             $body .= "<?h1 $ML{'.remove.header'} h1?><?p ";
             $body .= BML::ml('.remove.text2', {
                                              'ljuser' => LJ::ljuser($u),
                                              'aopts'    => "href='" . $remote->journal_base . "/friends/'",
                                              'aopts2'   => "href='" . $remote->profile_url . "'",
                                              });
             $body .= " p?>";
         } else {
             $title = $ML{'.add.title'};
             $body .= "<?h1 $ML{'.add.header'} h1?>";

             $body .= "<?p " . BML::ml('.add.text2', { 'ljuser' => LJ::ljuser($u) }) . " p?>";
             $body .= "<ul><li><a href='" . $remote->journal_base . "/friends'>$ML{'.add.next.friends'}</a></li>";
             $body .= "<li><a href='$LJ::SITEROOT/manage/subscriptions/user.bml?journal=$u->{user}'>"
                      . $ML{'.add.next.subscribe'} . "</a></li></ul>";
         }

         $body .= LJ::Widget::GettingStarted->render;
     } else {
         $title = $ML{'Error'};
         $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p $res{'errmsg'} p?>");
     }
     return;
 }

 $body .= '<div class="b-addfriend-wrapper">';
 $body .= "<form method='post' name='editFriends' action='add.bml'>\n";
 $body .= LJ::form_auth();
 $body .= LJ::html_hidden(mode  => 'add',
                          user  => $user,
                          remid => $remote->{userid});


 # check to see if user is already a friend.
 # TAG:fr:bml_friends_add:check_is_friend
 my $dbr = LJ::get_db_reader();
 my $sth = $dbr->prepare("SELECT groupmask, fgcolor, bgcolor FROM friends WHERE userid=? AND friendid=?");
 $sth->execute($remote->{'userid'}, $userid);
 my $fr = $sth->fetchrow_hashref;

 if ($fr) {
     $title .= $ML{'.error3.title'};
     if ($u->is_visible) {
         $body .= '<div class="b-addfriend-aside">';
         $body .= '<div class="b-addfriend-status">';
         $body .= "<?p " . BML::ml('.error3.text1', {'user' => LJ::ljuser($user)}) . " p?>";
         $body .= "</div>";
         $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
         $body .= "</div>";
     } else {
         $body .= '<div class="b-addfriend-aside">';
         $body .= '<div class="b-addfriend-status">';
         $body .= "<?p " . BML::ml('.error3.text2', {'user' => LJ::ljuser($user)}) . " p?>";
         $body .= "</div>";
         $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
         $body .= "</div>";
     }
 } else {
     # return an error if user being added isn't visible
     unless ($u->is_visible) {
         $title = $ML{'Error'};
         $body = $print_with_ad->("<?h1 $ML{'Error'} h1?><?p " . BML::ml('.error.notvisible', {'user' => LJ::ljuser($user)}) . " p?>");
         return;
     }
     my $icon = $u->large_journal_icon;
     # was this a syndicated add?
     if ($u->{journaltype} eq 'Y') {
         $windowtitle = BML::ml('.confirm.syn.title1', {'user'=> $user });
         $title = BML::ml('.confirm.syn.title1', {'icon'=> $icon, 'user'=> $user });
         $body .= '<div class="b-addfriend-aside">';
         $body .= '<div class="b-addfriend-status">';
         $body .= "<?p $ML{'.confirm.text1.feed'} p?>";
         $body .= "</div>";
         $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
         $body .= "</div>";

     # Is this account redirected?
     } elsif ($u->{'journaltype'} eq "R" && $u->prop('renamedto')) {
         return BML::redirect("$LJ::SITEROOT/friends/add.bml?user=" . $u->prop('renamedto'));

     } elsif ($u->{'journaltype'} eq "C") {
         $windowtitle = BML::ml('.confirm.title.community', {'user'=> $user });
         $title = BML::ml('.confirm.title.community', {'icon'=> $icon, 'user'=> $user });
         unless (LJ::is_friend($userid, $remote->{userid})) {
             $body .= '<div class="b-addfriend-aside">';
             $body .= '<div class="b-addfriend-status">';
             $body .= "<?p " . BML::ml('.confirm.text1.community2', {'aopts' => "href='$LJ::SITEROOT/community/join.bml?comm=$user'"}) . " p?>";
             $body .= "</div>";
             $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
             $body .= "</div>";
         }
     } elsif ($u->{'journaltype'} eq "N") {
         $windowtitle = BML::ml('.confirm.title.news', {'user'=> $user });
         $title = BML::ml('.confirm.title.news', {'icon'=> $icon, 'user'=> $user });
         $body .= '<div class="b-addfriend-aside">';
         $body .= '<div class="b-addfriend-status">';
         $body .= "<?p " . BML::ml('.confirm.text1.news', {'user' => LJ::ljuser($user)}) . " p?>";
         $body .= "</div>";
         $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
         $body .= "</div>";

     } else {
         if ($u->{'journaltype'} eq "I") {
            $windowtitle = BML::ml('.confirm.title.person', {'user'=> $u->{'name'} });
            $title = BML::ml('.confirm.title.person', {'icon'=> $icon, 'user'=> $u->{'name'} });
         } else {
            $windowtitle = BML::ml('.confirm.title.person', {'user'=> $user });
            $title = BML::ml('.confirm.title.person', {'icon'=> $icon, 'user'=> $user });
         }
         $body .= '<div class="b-addfriend-aside">';
         $body .= '<div class="b-addfriend-status">';
         $body .= "<?p $ML{'.confirm.text1.person'}";
         $body .= "<ul><li>$ML{'.confirm.action1.person'}</li>";
         $body .= "<li>$ML{'.confirm.action2.person'}</li>" if ($u->{'journaltype'} ne "I");
         $body .= "</ul> p?>";
         $body .= "</div>";
         $body .= LJ::get_ads({ location => 'bml.friends.add/main', ljadwrapper => 1, });
         $body .= '</div>';
     }
 }


 $body .= '<div class="b-addfriend-main">';

# users that aren't visible can only be removed, not modified
if ($u->is_visible) {

    ## Add user alias while user's friending
        $body .= '<div class="b-addfriend-option b-addfriend-note">';
        $body .= '<h3 class="b-addfriend-subhead">' . BML::ml('.note.text', {'username' => LJ::ljuser($user), aopts => "href='$LJ::SITEROOT/support/faqbrowse.bml?faqid=295'" }) . '</h3>';
        if ($remote->get_cap ('aliases')) {
            $body .= '<p>' . LJ::html_text ( { name => 'user_note', class => 'type-text', value => LJ::ljuser_alias($u->{user}) } ) . '</p>';
        } else {
            $body .= '<p>' . LJ::html_text ( { class => 'type-text', 'disabled', name => 'user_note' } ) . '<br />';
            $body .= LJ::run_hook("upgrade_link", $u, "paid") . BML::ml('.hint.paid.text', {aopts => "href='$LJ::SITEROOT/manage/account/'" }) . '</p>' unless $remote->get_cap ('paid');
        }
        $body .= "</div>";

 ## let them pick friend groups
 my $err;
 my $greq = LJ::Protocol::do_request("getfriendgroups", {
                                                        'username' => $remote->{'user'},
                                                        'ver'      => $LJ::PROTOCOL_VER,
                                                        },
                                                        \$err, { 'noauth' => 1 });

 if (@{$greq->{'friendgroups'}}) {
 $body .= '<div class="b-addfriend-option b-addfriend-groups">';
 $body .= '<h3 class="b-addfriend-subhead">' . $ML{'.groups.addto'} . '</h3>';
 $body .= '<p class="b-addfriend-notice">' . $ML{'.groups.text1'} . '</p>';
 $body .= '<ul class="b-addfriend-groups-items">';
    foreach my $g (@{$greq->{'friendgroups'}}) {
         my $ck = ($fr && ($fr->{'groupmask'} & (1 << $g->{'id'}))) ||
                  # by default, newly added friends are in default view unless unchecked
                  (! $fr && $g->{'name'} eq 'Default View');

         $body .= '<li>';
         $body .= LJ::html_check({ 'name'     => "bit_$g->{'id'}",
                                   'id'       => "fg:bit_$g->{'id'}",
                                   'selected' => $ck,
                                   'label' => $g->{name}});
         $body .= '</li>';
     }
 $body .= "</ul>";
 $body .= '</div>';
 }

 unless ($u->is_identity()) {

     my $user_tags_map = {};
     {
         my $tags = LJ::Tags::get_usertags($u, { remote => $remote }) || {};
         foreach (values %$tags) { 
             next unless $_->{display};
             next unless $_->{name} =~ /\S/;
             my $normalized_tag = LJ::FriendsTags->normalize_tag($_->{name});
            
             my $tag_data = $user_tags_map->{$normalized_tag};
             unless ($tag_data) {
                 $tag_data = {};
                 $user_tags_map->{$normalized_tag} = $tag_data;
             }
             $tag_data->{total_uses} += $_->{uses};
             if (!$tag_data->{name} || $tag_data->{uses} < $_->{uses}) {
                 $tag_data->{name} = $_->{name};
                 $tag_data->{uses} = $_->{uses};
             }
         }
         foreach (keys %$user_tags_map) {
             my $uses = $user_tags_map->{$_}->{total_uses};
             $user_tags_map->{$_}->{total_uses} = ($uses < 2 ? '' : ($uses > 999 ? '(999+)' : "($uses)"));
         }
     }

     my $friends_tags = LJ::FriendsTags->load($remote);
     my ($friend_tags_mode, $friend_tags_list) = $friends_tags->get_tags($u->{userid});
     my $friend_tags_map = {};
     $friend_tags_list = [ map { LJ::FriendsTags->normalize_tag($_) } grep { /\S/ } @$friend_tags_list ];
     my $not_last = scalar(@$friend_tags_list);

     $body .= '<div class="b-addfriend-option b-addfriend-tags">';
     $body .= '<h3 class="b-addfriend-subhead">' . $ML{'.tags.read'} . '</h3>';
     $body .= '<p class="b-addfriend-notice">' . BML::ml('.tags.text', { ljuser => LJ::ljuser($u), tagscount => scalar(keys %$user_tags_map) }) . '</p>';
     $body .= '<dl class="b-addfriend-showmore' . ($not_last ? '' : ' b-addfriend-showmore-closed') . '">';
     $body .= '<dt class="b-addfriend-showmore-head"><i class="i-addfriend-showmore-arr"></i>' . $ML{'.tags.select'} . '</dt>';
     $body .= '<dd class="b-addfriend-showmore-content">';
     $body .= '<p>';
     $body .= '<input type="radio" name="friend_tags_mode" id="tags_including" value="A" ' . 
              (LJ::FriendsTags->is_allow_mode($friend_tags_mode) ? 'checked="checked" ' : '') .
              '/><label for="tags_including">' . $ML{'.tags.including'} . '</label><br />';
     $body .= '<input type="radio" name="friend_tags_mode" id="tags_excluding" value="D" ' .
              (LJ::FriendsTags->is_allow_mode($friend_tags_mode) ? '' : 'checked="checked" ') .
              '/><label for="tags_excluding">' . $ML{'.tags.excluding'} . '</label>';
     $body .= '</p>';
     
     $body .= "<div class='b-addfriend-yourtags" . ( $not_last > 0 ? '' : ' b-addfriend-nothing') . "'>";
     $body .= '<h4>' . $ML{'.tags.selected.by.you'} . '</h4>';
     $body .= '<ul class="b-pending-users" id="selectedTagsList">';

     {
         foreach (@$friend_tags_list) {
             my $tag_data = $user_tags_map->{$_};
             my $tag_href = $tag_data ?
                                $u->journal_base . '/tag/' . LJ::eurl($tag_data->{name}) :
                                '#';
             $body .= '<li><span><a target="_blank" href="' . $tag_href . '">' . LJ::ehtml($_) . '</a> ' .
                      ($tag_data ? $tag_data->{total_uses} : '(-)') .
                      '<i title="' . $ML{'.tags.cross.tooltip'} . '" class="i-pending-close"></i></span>' .
                      (--$not_last ? '<b>,</b>' : '<b class="i-pending-users-comma">,</b>') . '</li>';
             $friend_tags_map->{$_} = 1;
         }
     }

     $body .= '</ul>';
     $body .= '<p class="i-bubble b-bubble-alert b-bubble-noarrow">' . $ML{'.tags.remove.tags'} . '</p>';
     $body .= '</div>';

     $body .= '<h4>' . $ML{'.tags.select.more'} . '</h4>';
     $body .= '<p><input type="text" class="b-addfriend-input" id="searchTag" autocomplete="off" placeholder="' . $ML{'.tags.input.tag'} . '" /> <input id="selectTag" type="button" value="' . $ML{'.tags.button.select'} . '" /></p>';
     $body .= '<input type="hidden" id="selectedTags" name="friend_tags">';
     $body .= '<p class="i-bubble b-bubble-alert b-bubble-noarrow">' . $ML{'.tags.find.tags'} . '</p>';
     $body .= '<ul class="b-pending-users b-addfriend-alltags" id="allTags">';

     {
         my @tags = sort grep { !$friend_tags_map->{$_} } keys %$user_tags_map;
         my $not_last = scalar(@tags);
         foreach my $tag (@tags) {
             my $tag_data = $user_tags_map->{$tag};
             my $tag_href = $u->journal_base . '/tag/' . LJ::eurl($tag_data->{name});
             $body .= '<li><span><a target="_blank" href="' . $tag_href . '">' . LJ::ehtml($tag) . '</a> ' .
             $tag_data->{total_uses} .
             '<i title="' . $ML{'.tags.cross.tooltip'} . '" class="i-pending-close"></i></span>' .
             (--$not_last ? '<b>,</b>' : '<b class="i-pending-users-comma">,</b>') . '</li>';
         }
     }

     $body .= '</ul>';
     $body .= '</dd>';
     $body .= '</dl>';
     $body .= '</div>';

     $body .= '<script id="tagTmpl" type="text/x-jquery-tmpl">
           <li><span><a href="#" target="_blank">${tagName}</a> (-){{if hasCloseButton }}<i title="' . $ML{'.tags.cross.tooltip'} . '" class="i-pending-close" ></i>{{/if}}</span><b>,</b></li>
    </script>';
 }
 
 # retain existing fgcolor
 my $fgvalue;
 if ($fr) {
     $fgvalue =  '#'.uc(sprintf("%06x", $fr->{'fgcolor'}));
 } else {
     $fgvalue = '#000000';
 }

 # retain existing bgcolor
 my $bgvalue;
 if ($fr) {
     $bgvalue =  '#'.uc(sprintf("%06x", $fr->{'bgcolor'}));
 } else {
     $bgvalue = '#FFFFFF';
 }

 $body .= '<div class="b-addfriend-option b-addfriend-colors">';
 $body .= '<h3 class="b-addfriend-subhead">' . $ML{'.colors.select.user'} . '</h3>';
 $body .= '<p class="b-addfriend-notice">' . BML::ml('.colors.text', {'user' => LJ::ljuser($u)}) . '</p>';
 $body .= '<p class="i-bubble b-bubble-alert b-bubble-noarrow">' . $ML{'.colors.disclaimer'} . '</p>';
 $body .= '<dl class="b-addfriend-showmore' . ($fgvalue eq '#000000' && $bgvalue eq '#FFFFFF' ? ' b-addfriend-showmore-closed' : '') . '">';
 $body .= '<dt class="b-addfriend-showmore-head"><i class="i-addfriend-showmore-arr"></i>' . $ML{'.colors.select'} . '</dt>';
 $body .= '<dd class="b-addfriend-showmore-content">';

 my $ret = "";
 $ret .= "  <div id='color_opt'>\n";

 $ret .= "<?p <script type=\"text/javascript\" language=\"JavaScript\">\n<!--\ndocument.write(\"<span style='font-size: 7pt;'>";
 $ret .= "$ML{'.colors.help.text1'}</span>\")\n// -->\n</script> p?>";
 $ret .= "<?p <noscript>\n<p><span style='font-size: 7pt;'>$ML{'.colors.help.text2'}</span></p>\n</noscript> p?>";

 # foreground
 $ret .= "<table width=\"650\" cellpadding='4'><tr><td><b>$ML{'.colors.fg'}</b></td><td>";

 # custom color selection

 # with javascript
 $ret .= qq~
<script type='text/javascript' language='JavaScript'>
<!--
document.write("<a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"spawnPicker(findel('editfriend_add_1_fg'),findel('editfriend_add_1_fg_value_disp'),'Overall: fgcolor',{obj:'preview',attrib:'color'});return false;\\"><span style='border: 1px solid #000000; padding-left: 2em; background-color: $fgvalue\;' id='editfriend_add_1_fg_value_disp'>&nbsp;</span></a>");
// -->
</script>
~;

 # without javascript
 $ret .= qq~
<noscript>
&nbsp;
</noscript>
~;


 # hex value input
 $ret .= "</td>";
 $ret .= "<td><input type=\"text\" maxlength=\"7\" value=\"$fgvalue\" ";
 $ret .= "name=\"editfriend_add_1_fg\" size=\"8\" ";
 $ret .= "onchange=\"setBGColorWithId(findel('editfriend_add_1_fg_value_disp'),";
 $ret .= "'editfriend_add_1_fg');";
 $ret .= "findel('preview')";
 $ret .= ".style.color = findel('editfriend_add_1_fg').value;\" onfocus=\"\" ";
 $ret .= "id=\"editfriend_add_1_fg\" /></td>";

 my @color = ();
 LJ::load_codes({ "color" => \@color });

 ### color swatch
 my $col = 0;
 $ret .= "<td><table border='0' cellspacing='0' cellpadding='0'>";

 # with javascript
 foreach (@color) {
     if ($col==0) { $ret .= "<tr>\n"; }
     $col++;
     my $ecolor = LJ::ehtml($_->{'item'});
     my $colspan = '';
     my $wh = '16';
     if ($_ eq $color[$#color]) {
         $colspan = "colspan='2'"; 
         $wh = '32';
     }
     $ret .= qq~
<script type='text/javascript' language='JavaScript'>
<!--
document.write("<td $colspan bgcolor='$_->{code}'><a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"setBGColor(findel('editfriend_add_1_fg_value_disp'),'$_->{code}');document.editFriends.editfriend_add_1_fg.value = '$_->{code}';document.getElementById('preview').style.color = '$_->{code}';\\"><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></a></td>");
// -->
</script>
~;
     if ($col==23) { $ret .= "</tr>\n"; $col==0; }
 }
 if ($col) { $ret .= "</tr>\n"; $col==0; }
 my $col2 = 0;

 # without javascript
 my $ret2 = "<noscript>\n";
 foreach (@color) {
     if ($col2==0) { $ret2 .= "<tr>\n"; }
     $col2++;
     my $colspan = '';
     my $wh = '16';
     if ($_ eq $color[$#color]) {
         $colspan = "colspan='2'";
         $wh = '32';
     }
     my $ecolor = LJ::ehtml($_->{'item'});
     $ret2 .= qq~
<td $colspan bgcolor='$_->{code}'><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' 
border='0'></td>
~;
     if ($col2==23) { $ret2 .= "</tr>\n"; $col2==0; }
 }
 if ($col2) { $ret2 .= "</tr>\n"; $col2==0; }

 $ret2 .= "</noscript>";

 $ret .= $ret2;
 $ret .= "</table></td></tr>\n";


 # background
 $ret .= "<tr><td><b>$ML{'.colors.bg'}</b></td><td>";

 # custom color selection

 # with javascript
 $ret .= qq~
<script type='text/javascript' language='JavaScript'>
<!--
document.write("<a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"spawnPicker(findel('editfriend_add_1_bg'),findel('editfriend_add_1_bg_value_disp'),'Overall: bgcolor',{obj:'preview',attrib:'backgroundColor'});return false;\\"><span style='border: 1px solid #000000; padding-left: 2em; background-color: $bgvalue\;' id='editfriend_add_1_bg_value_disp'>&nbsp;</span></a>");
// -->
</script>
~;

 # without javascript
 $ret .= qq~
<noscript>
&nbsp;
</noscript>
~;

 # hex value input
 $ret .= "</td>";
 $ret .= "<td><input type=\"text\" maxlength=\"7\" value=\"$bgvalue\" ";
 $ret .= "name=\"editfriend_add_1_bg\" size=\"8\" ";
 $ret .= "onchange=\"setBGColorWithId(findel('editfriend_add_1_bg_value_disp'),";
 $ret .= "'editfriend_add_1_bg');setBGColorwithId(findel('";
 $ret .= "preview'),'editfriend_add_1_bg');\" onfocus=\"\" ";
 $ret .= "id=\"editfriend_add_1_bg\" /></td>";

 ### color swatch
 my $col = 0;
 $ret .= "<td><table border='0' cellspacing='0' cellpadding='0'>";
 # with javascript
 foreach (@color) {
     if ($col==0) { $ret .= "<tr>\n"; }
     $col++;
     my $colspan = '';
     my $wh = '16';
     if ($_ eq $color[$#color]) {
         $colspan = "colspan='2'";
         $wh = '32';
     }
     my $ecolor = LJ::ehtml($_->{'item'});
     $ret .= qq~
<script type='text/javascript' language='JavaScript'>
<!--
document.write("<td $colspan bgcolor='$_->{code}'><a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"setBGColor(findel('editfriend_add_1_bg_value_disp'),'$_->{code}');document.editFriends.editfriend_add_1_bg.value = '$_->{code}';setBGColor(findel('preview'),'$_->{code}');\\"><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></a></td>");
// -->
</script>
~;
     if ($col==23) { $ret .= "</tr>\n"; $col==0; }
 }
 if ($col) { $ret .= "</tr>\n"; $col==0; }

 my $col2 = 0;

 # without javascript
 my $ret2 = "<noscript>\n";
 foreach (@color) {
     if ($col2==0) { $ret2 .= "<tr>\n"; }
     $col2++;
     my $colspan = '';
     my $wh = '16';
     if ($_ eq $color[$#color]) {
         $colspan = "colspan='2'";
         $wh = '32';
     }
     my $ecolor = LJ::ehtml($_->{'item'});
     $ret2 .= qq~
<td $colspan bgcolor='$_->{code}'><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></td>
~;
     if ($col2==23) { $ret2 .= "</tr>\n"; $col2==0; }
 }
 if ($col2) { $ret2 .= "</tr>\n"; $col2==0; }


 $ret2 .= "</noscript>";

 $ret .= $ret2;
 $ret .= "</table></td></tr></table>";

 # preview
 $ret .= qq~
<?p
<script language='JavaScript' type='text/javascript'>
<!--
document.write("<span style='border: 1px solid #666666; padding: 10px; background-color: $bgvalue\; color: $fgvalue\;' id='preview'>$user</span>");
// -->
</script>
p?>
~;

 $ret .= "</div>\n";

 $body .= $ret;
 $body .= '</dd>';
 $body .= '</dl>';
 $body .= '</div>';


 if ($u->{'journaltype'} eq "C") {
     $body .= "<p>$ML{'.disclaimer'}</p>";
 }

} # end is_visible if statement

$body .= "<?p ";
 # Form submit buttons
 if ($fr) {
     if ($u->is_visible) {
         $body .= "<input type='submit' value=\"$ML{'.btn.modify'}\"> - ";
     }
     $body .= "<input type='submit' name='action:delete' value=\"$ML{'.btn.remove'}\">\n";
 } else {
     $body .= "<input type='submit' value=\"&nbsp; $ML{'.btn.add.friend'} &nbsp;\">\n";
 }

 my $cancel_btn = LJ::ejs($ML{'.btn.cancel'});

 $body .= "<script type='text/javascript' language='Javascript'> \n <!-- \n
    document.write(\"<input type='button' value='$cancel_btn' onclick='history.go(-1); return false;'>\");
     \n // -->\n ";
 $body .= '</script> p?>';


 $body .= "</form>";
 $body .= '</div>';
 $body .= '</div>';
 
 return;

_code?>
<?page
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<?_code return $_[0]->{'head'}; _code?>
<=head
body=><?_code return $body; _code?>
page?><?_c <LJDEP>
link: htdocs/login.bml, htdocs/create.bml, htdocs/friends/edit.bml, htdocs/users
img: htdocs/img/dot.gif
post: htdocs/friends/add.bml
</LJDEP> _c?>
