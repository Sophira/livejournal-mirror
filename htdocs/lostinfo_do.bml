(=_INFO
NOCACHE=>1
_INFO=)(=PAGE
TITLE=>Lost Password
BODY<=

(=_CODE

 return LJ::server_down_html() if ($LJ::SERVER_DOWN);

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my @errors = ();

 if ($FORM{'lostpass'})
 {
     my $user = LJ::canonical_username($FORM{'user'});
     my $quser = $dbr->quote($user);
     my $email = LJ::trim($FORM{'email_p'});

     my $u = LJ::load_user($dbs, $user);

     if (! $u)
     {
	 push @errors, "Username not found.";
     }

     # can we send them the password where they want it?
     # if blank email, then yes.
     elsif ($email eq "") {
	 $email = $u->{'email'};
     }

     # if their current email address, then yes.
     # otherwise, check:
     # if an old validated email address, then yes.

     elsif (lc($email) ne lc($u->{'email'})) 
     {
	 my $qe = $dbr->quote($email);
	 my $sth = $dbr->prepare("SELECT COUNT(*) FROM infohistory WHERE userid=$u->{'userid'} AND what='email' AND oldvalue=$qe AND other='A'");
	 $sth->execute;
	 ($okay) = $sth->fetchrow_array;

	 unless ($okay) {
	     push @errors, "You never used that email address with this account or it was never validated.";
	 }
     }

     return LJ::bad_input(@errors) if @errors;

     open (MAIL, "|$LJ::SENDMAIL") || die "Couldn't send mail";
     print MAIL "To: $email\n";
     print MAIL "From: $LJ::ADMIN_EMAIL ($LJ::SITENAME)\n";
     print MAIL "Subject: Lost Password\n\n";
     print MAIL "*** This is an automated email.  You do not need to respond to it. ***\n\n";
     print MAIL "This is your requested password reminder from $LJ::SITENAME.  Below is your username, password, and email address your journal is registered under.\n\n";
     print MAIL "          Username: $u->{'user'}\n";
     print MAIL "          Password: $u->{'password'}\n";
     print MAIL "     EMail Address: $u->{'email'}\n\n";
     if ($u->{'status'} ne "A"){
	 my $aa = {};
	 $aa = LJ::register_authaction($dbs, $u->{'userid'}, "validateemail", $u->{'email'});
	 print MAIL "To confirm your email address, go here:\n\n";
	 print MAIL "    $LJ::SITEROOT/confirm/$aa->{'aaid'}.$aa->{'authcode'}\n\n";	
     }
     print MAIL "This information was requested on the website from $ENV{'REMOTE_HOST'} ($ENV{'REMOTE_ADDR'}).\n\n";
     print MAIL "Useful links:\n\n";
     print MAIL "  Your LiveJournal:\n";
     print MAIL "    $LJ::SITEROOT/users/$u->{'user'}/\n\n";
     print MAIL "  Update your journal online:\n";
     print MAIL "    $LJ::SITEROOT/update.bml?$u->{'user'}\n\n";
     print MAIL "Regards,\n$LJ::SITENAME Team\n\n$LJ::SITEROOT/\n";
     close MAIL;

     return "(=H1 Password mailed! H1=)\n(=P Success.  Your password has been mailed. P=)";
 }


 if ($FORM{'lostuser'})
 {
     my $sendto = "";
     my $email = LJ::trim($FORM{'email_u'});
     my $qe = $dbh->quote($email);

     $sth = $dbr->prepare("SELECT user, status FROM user WHERE email=$qe");
     $sth->execute;
     my @users;
     while (my ($ru, $rs) = $sth->fetchrow_array) {
	 push @users, $ru;
     }

     unless (@users) {
	 push @errors, "No username(s) for that email address. qe=$qe";
     }
     
     return LJ::bad_input(@errors) if @errors;
     
     open (MAIL, "|$LJ::SENDMAIL") || die "Couldn't send mail";
     print MAIL "To: $email\n";
     print MAIL "From: $LJ::ADMIN_EMAIL ($LJ::SITENAME)\n";
     print MAIL "Subject: Lost Username\n\n";
     print MAIL "This is your requested username reminder from $LJ::SITENAME.  Below are the usernames you have registered for the email address $email:\n\n";
     foreach my $ru (@users) {
	 print MAIL "          $ru\n";
     }

     print MAIL "\nThis information was requested on the website from $ENV{'REMOTE_HOST'} ($ENV{'REMOTE_ADDR'}).\n\n";
     print MAIL "Regards,\n$LJ::SITENAME Team\n\n$LJ::SITEROOT/\n";
     close MAIL;

     return "(=H1 Username mailed! H1=)\n(=P Success.  Your usename has been mailed. P=)";
 }

 return "No button pressed?";

_CODE=)

<=BODY
PAGE=)(=_C <LJDEP>
</LJDEP> _C=)

