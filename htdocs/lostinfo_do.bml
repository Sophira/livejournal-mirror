<?_info
nocache=>1
_info?><?page
title=><?_ml .title _ml?>
body<=

<?_code

 return LJ::server_down_html() if ($LJ::SERVER_DOWN);

 my @errors = ();

 if ($FORM{'lostpass'})
 {
     my $user = LJ::canonical_username($FORM{'user'});
     my $email = LJ::trim($FORM{'email_p'});

     my $u = LJ::load_user($user);

     if (! $u)
     {
         push @errors, $ML{'error.username_notfound'};
     }

     # can we send them the password where they want it?
     # if blank email, then yes.
     elsif ($email eq "") {
         $email = $u->{'email'};
     }

     # if their current email address, then yes.
     # otherwise, check:
     # if an old validated email address, then yes.

     elsif (lc($email) ne lc($u->{'email'})) 
     {
         my $dbr = LJ::get_db_reader();
         my $sth = $dbr->prepare("SELECT COUNT(*) FROM infohistory ".
                                 "WHERE userid=? AND what='email' ".
                                 "AND oldvalue=? AND other='A'");
         $sth->execute($u->{'userid'}, $email);
         ($okay) = $sth->fetchrow_array;

         unless ($okay) {
             push @errors, $ML{'.error1.text'};
         }
     }

     return LJ::bad_input(@errors) if @errors;

     my $body;
     $body .= BML::ml('.lostpasswordmail.part1', {
                 'sitename' => $LJ::SITENAME,
                 'username' => $u->{'user'},
                 'password' => $u->{'password'},
                 'emailadr' => $u->{'email'}     }) . "\n\n";
     if ($u->{'status'} ne "A") {
         my $aa = {};
         $aa = LJ::register_authaction($u->{'userid'}, "validateemail", $u->{'email'});
         $body .= $ML{'.lostpasswordmail.part2'} . "\n\n";
         $body .= "    $LJ::SITEROOT/confirm/$aa->{'aaid'}.$aa->{'authcode'}\n\n";
     }
     $body .= BML::ml('.lostpasswordmail.part3', {
                 'remoteip' => BML::get_remote_host() . " (" . BML::get_remote_ip() . ")" }) . "\n\n";
     my $mline = $ML{'.lostpasswordmail.part4'};
     $body .= $mline . "\n\n" if ($mline ne "");
     $body .= BML::ml('.lostpasswordmail.part5', {
                 'journalurl' => "$LJ::SITEROOT/users/$u->{'user'}/",
                 'updateurl'  => "$LJ::SITEROOT/update.bml?$u->{'user'}",
                 'rooturl'    => "$LJ::SITEROOT/" }) . "\n";

     LJ::send_mail({
         'to' => $email,
         'from' => $LJ::ADMIN_EMAIL,
         'fromname' => $LJ::SITENAME,
         'charset' => 'utf-8',
         'subject' => $ML{'.lostpasswordmail.subject'},
         'body' => $body,
     }) or die "Error: couldn't send email";

     return "<?h1 $ML{'.password_mailed.title'} h1?>\n<?p $ML{'.password_mailed.text'} p?>";
 }


 if ($FORM{'lostuser'})
 {
     my $sendto = "";
     my $email = LJ::trim($FORM{'email_u'});

     my $dbr = LJ::get_db_reader();
     $sth = $dbr->prepare("SELECT user, status FROM user WHERE email=?");
     $sth->execute($email);;
     my @users;
     while (my ($ru, $rs) = $sth->fetchrow_array) {
         push @users, $ru;
     }

     unless (@users) {
         push @errors, BML::ml('.error.no_usernames_for_email', {'address'=>LJ::ehtml($email)});
     }
     
     return LJ::bad_input(@errors) if @errors;
     
     my $body;
     $body .= "This is your requested username reminder from $LJ::SITENAME.  Below are the usernames you have registered for the email address $email:\n\n";
     foreach my $ru (@users) {
         $body .= "          $ru\n";
     }

     $body .= "\nThis information was requested on the website from " . BML::get_remote_host() . 
         " (" . BML::get_remote_ip() . ").\n\n";
     $body .= "Regards,\n$LJ::SITENAME Team\n\n$LJ::SITEROOT/\n";

     LJ::send_mail({
         'to' => $email,
         'from' => $LJ::ADMIN_EMAIL,
         'fromname' => $LJ::SITENAME,
         'charset' => 'utf-8',
         'subject' => "Lost Username",
         'body' => $body,
     }) or die "Error: couldn't send email";

     return "<?h1 $ML{'.username_mailed.title'} h1?>\n<?p $ML{'.username_mailed.text'} p?>";
 }

 return $ML{'error.nobutton'};

_code?>

<=body
page?><?_c <LJDEP>
</LJDEP> _c?>

