<?_info
nocache=>1
_info?><?page
title=><?_ml .title _ml?>
body<=

<?_code

 return LJ::server_down_html() if ($LJ::SERVER_DOWN);

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};

 my @errors = ();

 if ($FORM{'lostpass'})
 {
     my $user = LJ::canonical_username($FORM{'user'});
     my $quser = $dbr->quote($user);
     my $email = LJ::trim($FORM{'email_p'});

     my $u = LJ::load_user($dbs, $user);

     if (! $u)
     {
         push @errors, $ML{'error.username_notfound'};
     }

     # can we send them the password where they want it?
     # if blank email, then yes.
     elsif ($email eq "") {
         $email = $u->{'email'};
     }

     # if their current email address, then yes.
     # otherwise, check:
     # if an old validated email address, then yes.

     elsif (lc($email) ne lc($u->{'email'})) 
     {
         my $qe = $dbr->quote($email);
         my $sth = $dbr->prepare("SELECT COUNT(*) FROM infohistory WHERE userid=$u->{'userid'} AND what='email' AND oldvalue=$qe AND other='A'");
         $sth->execute;
         ($okay) = $sth->fetchrow_array;

         unless ($okay) {
             push @errors, $ML{'.error1.text'};
         }
     }

     return LJ::bad_input(@errors) if @errors;

     open (MAIL, "|$LJ::SENDMAIL") || die "Couldn't send mail";

     print MAIL "To: $email\n";
     print MAIL "From: $LJ::ADMIN_EMAIL ($LJ::SITENAME)\n";
     print MAIL "Subject: $ML{'.lostpasswordmail.subject'}\n\n";

     print MAIL BML::ml('.lostpasswordmail.part1', {
                 'sitename' => $LJ::SITENAME,
                 'username' => $u->{'user'},
                 'password' => $u->{'password'},
                 'emailadr' => $u->{'email'}     }) . "\n\n";
     if ($u->{'status'} ne "A") {
         my $aa = {};
         $aa = LJ::register_authaction($dbs, $u->{'userid'}, "validateemail", $u->{'email'});
         print MAIL $ML{'.lostpasswordmail.part2'} . "\n\n";
         print MAIL "    $LJ::SITEROOT/confirm/$aa->{'aaid'}.$aa->{'authcode'}\n\n";
     }
     print MAIL BML::ml('.lostpasswordmail.part3', {
                 'remoteip' => BML::get_remote_host() . " (" . BML::get_remote_ip() . ")" }) . "\n\n";
     my $mline = $ML{'.lostpasswordmail.part4'};
     print MAIL $mline . "\n\n" if ($mline ne "");
     print MAIL BML::ml('.lostpasswordmail.part5', {
                 'journalurl' => "$LJ::SITEROOT/users/$u->{'user'}/",
                 'updateurl'  => "$LJ::SITEROOT/update.bml?$u->{'user'}",
                 'rooturl'    => "$LJ::SITEROOT/" }) . "\n";

     close MAIL;

     return "<?h1 $ML{'.password_mailed.title'} h1?>\n<?p $ML{'.password_mailed.text'} p?>";
 }


 if ($FORM{'lostuser'})
 {
     my $sendto = "";
     my $email = LJ::trim($FORM{'email_u'});
     my $qe = $dbh->quote($email);

     $sth = $dbr->prepare("SELECT user, status FROM user WHERE email=$qe");
     $sth->execute;
     my @users;
     while (my ($ru, $rs) = $sth->fetchrow_array) {
         push @users, $ru;
     }

     unless (@users) {
         push @errors, BML::ml('.error.no_usernames_for_email', {'address'=>$qe});
     }
     
     return LJ::bad_input(@errors) if @errors;
     
     open (MAIL, "|$LJ::SENDMAIL") || die "Couldn't send mail";
     print MAIL "To: $email\n";
     print MAIL "From: $LJ::ADMIN_EMAIL ($LJ::SITENAME)\n";
     print MAIL "Subject: Lost Username\n\n";
     print MAIL "This is your requested username reminder from $LJ::SITENAME.  Below are the usernames you have registered for the email address $email:\n\n";
     foreach my $ru (@users) {
         print MAIL "          $ru\n";
     }

     print MAIL "\nThis information was requested on the website from " . BML::get_remote_host() . 
         " (" . BML::get_remote_ip() . ").\n\n";
     print MAIL "Regards,\n$LJ::SITENAME Team\n\n$LJ::SITEROOT/\n";
     close MAIL;

     return "<?h1 $ML{'.username_mailed.title'} h1?>\n<?p $ML{'.username_mailed.text'} p?>";
 }

 return $ML{'error.nobutton'};

_code?>

<=body
page?><?_c <LJDEP>
</LJDEP> _c?>

