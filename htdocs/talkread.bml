<?page
body<=
<?_code
#BML:cache:talkread

 use strict;
 use vars qw($r_head $r_title %GET %ML);

 # make refs to both title and head, that work in cached or non-cached contexts
 # $_[0] is the BML $req object, $_[1] is a pre-request scratch area.
 $r_head = "";
 $r_title = "";
 my $head = $_[1] ? \$_[1]->{'head'} : \$r_head;
 my $title = $_[1] ? \$_[1]->{'title'} : \$r_title;

 return LJ::server_down_html() if $LJ::SERVER_DOWN;

 my $dbs = LJ::get_dbs();
 my $dbh = $dbs->{'dbh'};
 my $dbr = $dbs->{'reader'};
 my ($sth, $sql);
 my $errtxt;

 my $pics = LJ::Talk::get_subjecticons();

 ## workaround mail client bug when don't understand quoted-printable.
 ## Only correct 'journal' if 'itemid' was also broken, to avoid the 
 ## unlikely clash with a journal name.
 if ($GET{'itemid'} =~ s/^3D//) {
     $GET{'journal'} =~ s/^3D//;
     $GET{'thread'} =~ s/^3D//; 
 }

 my $r = Apache->request;

my $uri = BML::get_uri();
my $itemid;
my $new_url;

if ($uri =~ m!/(\d+)\.html$!) {
    $new_url = 1;
    $itemid = $1;
    $GET{'itemid'} = $itemid;
    $GET{'journal'} = $r->notes("_journal");
    BML::set_language_scope("/talkread.bml");
}

 # pre-load common strings for little speed and less typing later
 # (we're doing this *after* set_language_scope is called, because
 # two below are relative strings)
 my %T = qw(postcomments   talk.commentpost
            readcomments   talk.commentsread
            parent         talk.parentlink
            thread         talk.threadlink
            replythis      talk.replytothis
            link           talk.commentpermlink
            deleted        .subjectdeleted
            nosubject      .nosubject
            );
 foreach (keys %T) { $T{$_} = $ML{$T{$_}}; }

 my $init = LJ::Talk::init($dbs, \%GET);
 my $u = $init->{'journalu'};

 $r->notes("journalid" => $u->{'userid'});
 $r->notes("codepath" => "bml.talkread");

 return "<?h1 $ML{'Error'} h1?><?p $init->{'error'} p?>" if $init->{'error'}; 
 return $ML{'talk.error.nojournal'} unless $u;

 my $thread = $init->{'thread'};
 $itemid = $init->{'itemid'}+0;

 my $dbcs = LJ::get_cluster_set($u);
 my $dbcm = $dbcs->{'dbh'};
 my $dbcr = $dbcs->{'reader'};

 my $item = LJ::Talk::get_journal_item($dbs, $dbcs, $u, $itemid);

 if ($init->{'oldurl'} && $item) {
     $init->{'anum'} = $item->{'anum'};
     $init->{'ditemid'} = $init->{'itemid'}*256 + $item->{'anum'};
 }

 unless ($item && $item->{'anum'} == $init->{'anum'}) {
     return "<?h1 $ML{'Error'} h1?><?p $ML{'talk.error.noentry'} p?>";
 }

 my $ditemid = $init->{'ditemid'}+0;
 my $jarg = "journal=$u->{'user'}&";
 my $jargent ="journal=$u->{'user'}&amp;";

 my $talkurl = LJ::journal_base($u) . "/$ditemid.html";

 my $talkargs = sub {
     my $args = shift;
     my $sep = ($talkurl =~ /\?/) ? "&" : "?";
     return "$talkurl$sep$args";
 };

 my $ret = "";

 # redirect if account was renamed
 if ($u->{'journaltype'} eq "R") {
     LJ::load_user_props($dbs, $u, "renamedto");
     if ($u->{'renamedto'} ne "") {
         my $id = $GET{'itemid'}+0;
         return BML::redirect(LJ::journal_base($u) . "/$id.html");
     }
 }

 my $props = $item->{'props'};

 ### load users
 my ($up);  # $up = user posted journal item
 LJ::load_userids_multiple($dbs, [
                                  $item->{'posterid'} => \$up,
                                  ], [ $u ]);

 LJ::text_out(\$u->{'name'});

 # check suspended
 return "<?h1 $ML{'talk.error.suspended.title'} h1?><?p $ML{'talk.error.suspended'} p?>"
    if ($u->{'statusvis'} eq "S" || $up->{'statusvis'} eq "S");

 # check deleted
 return "<?h1 $ML{'talk.error.deleted.title'} h1?><?p $ML{'talk.error.deleted'} p?>"
    if ($u->{'statusvis'} eq "D");

 my $remote = LJ::get_remote($dbs);

 ####  Check security before viewing this post
 return $errtxt unless LJ::Talk::check_viewable($dbs, $remote, $item, \%GET, \$errtxt);

 my $showmultiform = $remote &&
    ($remote->{'user'} eq $u->{'user'} ||
     $remote->{'user'} eq $up->{'user'} ||
     LJ::check_rel($dbs, $u, $remote, 'A'));
 my $multiform_selects = 0;  # are there select boxes?  don't show form if not.

 my $event = $item->{'event'};

 LJ::expand_embedded($dbs, $ditemid, $remote, \$event);
 LJ::CleanHTML::clean_event(\$event, $props->{'opt_preformatted'});
 BML::ebml(\$event);

 # make the title
{
    my $subject = $item->{'subject'} || $event;
    LJ::CleanHTML::clean_subject_all(\$subject);
    $subject =~ s/\n.*//s;
    # yes, the 3 param to text_trim is chars, and length returns bytes, but
    # it works, as bytes >= chars:
    $subject = LJ::text_trim($subject, 0, length($item->{'subject'}) || 40);
    $$title = "$u->{'user'}: $subject";
}

 $ret .= "<p>";
 $ret .= "<table><tr valign='middle'>";

 my $picid;
 if ($props->{'picture_keyword'}) {
     my $qkw = $dbr->quote($props->{'picture_keyword'});
     $picid = $dbr->selectrow_array("SELECT m.picid FROM userpicmap m, keywords k ".
                                    "WHERE m.userid=$up->{'userid'} ".
                                    "AND m.kwid=k.kwid AND k.keyword=$qkw");
 }

 $picid ||= $up->{'defaultpicid'};

 my %userpics;
 if ($picid) {
     LJ::load_userpics($dbs, \%userpics, [ $picid ]);
     my $alt = $up->{'name'};
     if ($props->{'picture_keyword'}) {
         $alt .= ": $props->{'picture_keyword'}";
     }
     LJ::text_out(\$alt);
     $alt = LJ::ehtml($alt);
     $ret .= "<td><img src='$LJ::USERPIC_ROOT/$picid/$up->{'userid'}' width='$userpics{$picid}->{'width'}' ".
         "height='$userpics{$picid}->{'height'}' align='absmiddle' ".
         "hspace='3' title='$alt' alt=''></td>";
 }

 $ret .= "<td>";
 if ($up->{'user'} eq $u->{'user'}) {
     $ret .= BML::ml("talk.somebodywrote", { 'realname' => BML::eall($up->{'name'}),
                                             'userlink' => LJ::ljuser($up->{'user'}) });
 } else {
     $ret .= BML::ml("talk.somebodywrote_comm", { 'realname' => BML::eall($up->{'name'}),
                                                  'userlink' => LJ::ljuser($up->{'user'}),
                                                  'commlink' => "<?ljcomm $u->{'user'} ljcomm?>" });
 }

 my $etime = $item->{'eventtime'};
 $etime =~ s!(\d\d\d\d)-(\d\d)-(\d\d)!LJ::date_to_view_links($u, $&)!e;
 $ret .= "<br /><font size='-1'>@ $etime</font>";
 $ret .= "</td></tr></table>";

 ## standout bar
 $ret .= LJ::Talk::link_bar($dbs, { 'u' => $u, 'up' => $up, 'headref' => $head,
                                    'remote' => $remote, 'itemid' => $ditemid, });

 ## dump the log entry, unless we're browsing a thread.
 unless ($thread)
 {
     my %current;
     if ($props->{'current_mood'} || $props->{'current_moodid'}) {
         LJ::load_moods($dbs);
         $current{'Mood'} = $props->{'current_mood'};
         LJ::CleanHTML::clean_subject(\$current{'Mood'});
         my $mid = $props->{'current_moodid'};
         if ($mid) {
             my $theme = $up->{'moodthemeid'};
               LJ::load_mood_theme($dbs, $theme);
             my %pic;
             my $name = defined $LJ::CACHE_MOODS{$mid} ? $LJ::CACHE_MOODS{$mid}->{'name'} : '';
             if (LJ::get_mood_picture($theme, $mid, \%pic)) {
                 $current{'Mood'} = "<img src='$pic{'pic'}' align='absmiddle' width='$pic{'w'}' height='$pic{'h'}' vspace='1'> $name";
             } else {
                 $current{'Mood'} = $name;
             }
         }
     }
     if ($props->{'current_music'}) {
         $current{'Music'} = $props->{'current_music'};
         LJ::CleanHTML::clean_subject(\$current{'Music'});
     }

     $ret .= "<div style='margin-left: 30px'>";

     if (%current) 
     {
         $ret .= "<table border=0>\n";
         foreach (sort keys %current) {
             my $curkey = "talk.curname_" . $_;
             my $curname = BML::ml($curkey);
             $curname = "<b>Current $_:</b>" unless $curname;
             $ret .= "<tr><td align=right>$curname</td><td>$current{$_}</td></tr>\n";
         }
         $ret .= "</table><p>\n";
     }

     ### security indicator
     my $sec = "";
     if ($item->{'security'} eq "private") {
         $sec = "<?securityprivate?>";
     } elsif ($item->{'security'} eq "usemask") {
         $sec = "<?securityprotected?>";
     }

     $sec .= "<br />\n" unless $sec eq "" or $item->{'subject'};
     $ret .= $sec;

     ###
     if ($item->{'subject'}) {
         my $subject = $item->{'subject'};
         LJ::CleanHTML::clean_subject(\$subject);
         BML::ebml(\$subject);
         $ret .= "<font face='Arial,Helvetica' size='+1'><i><b>$subject</b></i></font><br />\n";
     }

     $ret .= $event;
     $ret .= "</div>";
 }


 $ret .= "<br clear='all' /><hr width='100%' size='2' align='center' />";

 my %user;
 my $opts = {
     'thread' => $init->{'thread'},
     'page' => $GET{'page'},
     'view' => $GET{'view'},
     'userpicref' => \%userpics,
     'userref' => \%user,
 };

 my @comments = LJ::Talk::load_comments($u, $remote, "L", $itemid, $opts);
 return $ML{'error.nodbmaintenance'} if $opts->{'out_error'} eq "nodb";

 my $page = $opts->{'out_page'};
 my $pages = $opts->{'out_pages'};

 ########## make the navcrap
 my $navcrap;
 if ($pages > 1) {
     $navcrap .= "<div align='center'><font face='Arial,Helvetica' size='-1'><b>";
     $navcrap .= BML::ml('.pageofpages',{'page'=>$page, 'total'=>$pages}) . "<br />";
     my $left = "<b>&lt;&lt;</b>";
     if ($page > 1) { $left = "<a href='" . BML::self_link({ 'page' => $page-1 }) . "'>$left</a>"; }
     my $right = "<b>&gt;&gt;</b>";
     if ($page < $pages) { $right = "<a href='" . BML::self_link({ 'page' => $page+1 }) . "'>$right</a>"; }
     $navcrap .= $left . " ";
     for (my $i=1; $i<=$pages; $i++) {
         my $link = "[$i]";
         if ($i != $page) { $link = "<a href='" . BML::self_link({ 'page' => $i }) . "'>$link</a>"; }
         else { $link = "<font size='+1'><b>$link</b></font>"; }
         $navcrap .= "$link ";
     }
     $navcrap .= "$right";
     $navcrap .= "</font></div>\n";
     $navcrap = BML::fill_template("standout", { 'DATA' => $navcrap });
 }
 ####### end navcrap

 my $recurse_post = sub
 {
     my ($self_sub, $post, $opts) = @_;

     $opts ||= { 'depth' => 0 };

     my $bgcolor = ($opts->{'depth'} % 2) ? "emcolorlite" : "emcolor";
     $bgcolor = BML::get_template_def($bgcolor);
     if ($post->{'state'} eq "S") {
         $bgcolor = BML::get_template_def("screenedbarcolor") || $bgcolor;
     }

     my $tid = $post->{'talkid'};
     my $dtid = $tid * 256 + $init->{'anum'};
     my $datepost = "<font size='-1'>" . substr($post->{'datepost'}, 0, 16) . "</font>";

     my $pu = $post->{'posterid'} ? $user{$post->{'posterid'}} : undef;
     my $userpost = $post->{'userpost'};
     my $user;
     if ($post->{'props'}->{'deleted_poster'}) {
         $user = BML::ml('.deleteduser', {'username'=>$post->{'deleted_poster'}});
     }
     else {
         $user = $ML{'.anonuser'};
     }

     if ($post->{'state'} eq "D") {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         $ret .= "<td>$ML{'.deletedpost'}</td></tr></table>\n";
     } elsif ($post->{'state'} eq "S" && ! $post->{'_loaded'}) {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         my $screenedtext = $ML{'.screenedpost'};
         $ret .= "<td>$screenedtext</td></tr></table>\n";
     } elsif ($userpost && $user{$userpost}->{'statusvis'} eq "S") {
         $ret .= "<p><a name='t$dtid'></a><table><tr>";
         $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
         $ret .= "<td>$ML{'.replysuspended'}";
         if (LJ::Talk::can_delete($dbs, $remote, $u, $up, $userpost)) {
             $ret .= " <a href='/delcomment.bml?${jargent}id=$dtid'>" . LJ::img("btn_del", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
         }
         $ret .= "</td></tr></table>\n";
     } else {
         if ($userpost) {
             $user = LJ::ljuser($userpost);
         }
         my $icon = LJ::Talk::show_image($pics, $post->{'props'}->{'subjecticon'});

         if ($post->{'_loaded'}) {
             $ret .= "<a name='t$dtid'></a><table width='100%' class='talk-comment'><tr>";
             $ret .= "<td rowspan='2'><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
             $ret .= "<td bgcolor='$bgcolor' width='100%'>";
             if (my $picid = $post->{'picid'}) {
                 my $alt = $pu->{'name'};
                 if ($post->{'props'}->{'picture_keyword'}) {
                     $alt .= ": $post->{'props'}->{'picture_keyword'}";
                 }
                 $alt = LJ::ehtml($alt);
                 my ($w, $h) = ($userpics{$picid}->{'width'}, $userpics{$picid}->{'height'});
                 $ret .= "<img align='left' hspace='3' src='$LJ::USERPIC_ROOT/$picid/$post->{'posterid'}'";
                 $ret .= " width='$w' title='$alt' alt='' height='$h' />";
             }

             my $cleansubject = LJ::eall($post->{'subject'});
             $ret .= "<font size='+1' face='Arial,Helvetica'><b>$cleansubject</b></font> $icon";
             $ret .= "<br />$user\n";
             $ret .= "<br />$datepost\n";
             if ($post->{'props'}->{'poster_ip'} && $remote &&
                 ($remote->{'user'} eq $up->{'user'} ||
                  LJ::check_rel($dbs, $u, $remote, 'A')))
             {
                 $ret .= BML::ml('.fromip', {'ip'=>$post->{'props'}->{'poster_ip'}});
             }
             
             $ret .= " <font size='-1'>(<a href='" . $talkargs->("thread=$dtid#t$dtid") . "'>$T{'link'}</a>)</font> ";
             
             if (LJ::Talk::can_delete($dbs, $remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/delcomment.bml?${jargent}id=$dtid'>" . LJ::img("btn_del", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }
             
             if ($post->{'state'} eq 'A' && 
                 LJ::Talk::can_screen($dbs, $remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=screen&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_scr", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }
             
             if ($post->{'state'} eq 'S' && 
                 LJ::Talk::can_unscreen($dbs, $remote, $u, $up, $userpost)) {
                 $ret .= "<a href='/talkscreen.bml?mode=unscreen&amp;${jargent}talkid=$dtid'>" . LJ::img("btn_unscr", "", { 'align' => 'absmiddle', 'hspace' => 2, 'vspace' => }) . "</a>";
             }

             if ($showmultiform) {
                 $ret .= " <nobr><input type='checkbox' name='selected_$tid' id='s$tid' />";
                 $ret .= " <label for='s$tid'>$ML{'.select'}</label></nobr>";
                 $multiform_selects = 1;
             }
             $ret .= "</td></tr><tr><td>";

             ## escape BML block codes.  so <?tag ... tag?> turns into (&#0061; ... tag?>
             $post->{'body'} =~ s/\(=/\(&\#0061\;/g;
             LJ::CleanHTML::clean_comment(\$post->{'body'}, $post->{'props'}->{'opt_preformatted'});
             BML::ebml(\$post->{'body'});
             $ret .= $post->{'body'};

             $ret .= "<p style='margin: 0.7em 0 0.2em 0'><font size='-2'>";
             my $replyurl = $talkargs->("replyto=$dtid");
             $ret .= "(<a href='$replyurl'>$T{'replythis'}</a>) ";
             
             if ($post->{'parenttalkid'} != 0) {
                 my $dpid = $post->{'parenttalkid'} * 256 + $init->{'anum'};
                 $ret .= "(<a href='" . $talkargs->("thread=$dpid") . "'>$T{'parent'}</a>) ";
             }
             if ($post->{'children'} && @{$post->{'children'}}) {
                 my $url = $talkargs->("thread=$dtid");
                 $ret .= "(<a href='$url'>$T{'thread'}</a>)";
             }
             $ret .= "</font></p>";
             $ret .= "</td></tr></table>\n";  # close colored table
         } else {
             # link to message

             $ret .= "<a name='t$dtid'></a><table><tr>";
             $ret .= "<td><img src='$LJ::IMGPREFIX/dot.gif' height='1' width='" . ($opts->{'depth'} * 25) . "'></td>";
             $ret .= "<td><a href='" . $talkargs->("thread=$dtid") . "'>" . BML::eall($post->{'subject'} || $T{'nosubject'}) . "</a> - $user, <i>$post->{'datepost'}</i></td></tr></table>\n";
         }
     }
     
     if ($post->{'children'}) {
         foreach my $childpost (@{$post->{'children'}}) {
             $self_sub->($self_sub, $childpost, { "depth" => $opts->{'depth'} + 1 });
         }
     } 
 };

 unless ($props->{'opt_nocomments'} or $u->{'opt_showtalklinks'} eq "N")
 {
     $ret .= "$navcrap" if $navcrap;
     my $readlink;
     if ($GET{'thread'} && $pages == 1) {
         my $readurl = LJ::journal_base($u) . "/$ditemid.html";
         $readlink = "(<a href='$readurl'>$T{'readcomments'}</a>) - ";
     }

     my $posturl = "$LJ::SITEROOT/talkpost.bml?${jargent}itemid=$ditemid";
     $posturl = "$ditemid.html?mode=reply" if $new_url;

     $ret .= "<p align='center' class='lesstop'><b>$readlink(<a href='$posturl'>$T{'postcomments'}</a>)</b></p>";

     if (@comments > 0)
     {
         $ret .= "<form style='display: inline' method='post' action='/talkmulti.bml' name='multiform'>";
         $ret .= LJ::html_hidden("ditemid", $ditemid);
         $ret .= LJ::html_hidden("journal", $u->{'user'});

         $recurse_post->($recurse_post, $_) foreach (@comments);

         $ret .= "<hr /><p class='lesstop' align='center'><b>$readlink(<a href='$posturl'>$T{'postcomments'}</a>)</b></p>";

         if ($showmultiform && $multiform_selects) {
             $ret .= "<p>$ML{'.talkmulti.des'} ";
             $ret .= LJ::html_select({'name' => 'mode' },
                                     "" => "",
                                     "unscreen" => $ML{'.talkmulti.unscreen'},
                                     "screen" => $ML{'.talkmulti.screen'},
                                     "delete" => $ML{'.talkmulti.delete'});
             $ret .= " " . LJ::html_submit('', $ML{'.talkmulti.submit'},
                                    { "onClick" => "return (document.multiform.mode.value != \"delete\") " .
                                                   "|| confirm(\"" . LJ::ejs($ML{'.confirm.action'}) . "\");" });
             $ret .= "</p>";
         }
         $ret .= "</form>";

     }
     if ($navcrap) {
         $ret .= "<p>$navcrap</p>";
     }
 }

 return $ret;

_code?>
<=body
windowtitle=><?_code return $_[1] ? $_[1]->{'title'} : $r_title _code?>
head=><?_code return $_[1] ? $_[1]->{'head'} : $r_head _code?>
page?><?_c <LJDEP>
link: htdocs/talkpost.bml, htdocs/talkread.bml, htdocs/delcomment.bml
img: htdocs/img/dot.gif, htdocs/img/delcomment.gif
</LJDEP> _c?>
