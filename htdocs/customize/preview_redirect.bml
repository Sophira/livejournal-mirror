<?page
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use Class::Autouse qw( LJ::S2Theme );

    my $u = LJ::get_effective_remote();
    return $ML{'.error.user'} unless LJ::isu($u);

    my $themeid = $GET{themeid}+0;
    my $layoutid = $GET{layoutid}+0;

    my $theme;
    if ($themeid) {
        $theme = LJ::S2Theme->load_by_themeid($themeid, $u);
    } elsif ($layoutid) {
        $theme = LJ::S2Theme->load_custom_layoutid($layoutid, $u);
    } else {
        return $ML{'.error.id'};
    }

    my $styleid = $theme->get_preview_styleid($u);

    my @purchased = LJ::Pay::Theme->get_purchased ($u);
    if ($theme->is_buyable && !grep { $theme->s2lid == $_->s2lid } @purchased) {
        eval {
            my $default_theme = LJ::S2Theme->load_default_of($theme->layoutid, user => $u);

            my @themes = LJ::S2Theme->load_by_uniq($default_theme->uniq);
            LJ::Customize->apply_theme($u, $themes[0]);
        };
    }

    return $ML{'.error.preview'} unless $styleid;
    return BML::redirect($u->journal_base . "/?s2id=$styleid");
}
_code?>
<=body
title=><?_code return $title; _code?>
head<=
<?_code return $headextra; _code?>
<=head
page?>
