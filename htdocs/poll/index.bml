<?_code
{
    use strict;
    use vars qw(%FORM $title $body);
    use LJ::Poll;

    $title = $ML{'.title'};
    $body = "";

    # answers to checkbox questions are null-separated sequences
    # since our inout correctness check rules out nulls, we change them
    # to commas here rather than inside LJ::Poll::submit() .
    foreach (values %FORM) {
        s/\0/,/g;
    }
    unless (LJ::text_in(\%FORM)) {
        $body = "<?badinput?>";
        return;
    }

    my $remote = LJ::get_remote();

    my $pollid = ($FORM{'id'} || $FORM{'pollid'})+0;

    unless ($pollid) {
        $body .= BML::ml('.gotocreate2', {'aopts' => "href='$LJ::SITEROOT/poll/create.bml'"});
        return;
    }

    my $poll = LJ::Poll->new($pollid);
    my $is_super = $poll->prop ('supermaintainer');

    unless ($poll && $poll->valid) {
        $title = $ML{'Error'};
        $body = $ML{'.pollnotfound'};
        return;
    }

    my $u = $poll->journal;

    LJ::set_active_journal($u);

    my $mode = "";
    $mode = $FORM{'mode'} if ($FORM{'mode'} =~ /(enter|results|ans)/);

    ## Supermaintainer election has only one mode - voting
    $mode = "enter" if $is_super;

    # Handle opening and closing of polls
    # We do this first because a closed poll will alter how a poll is displayed
    if ($poll->is_owner($remote)) {
        if ($FORM{'mode'} =~ /(close|open)/) {
            $mode = $FORM{'mode'};
            $poll->close_poll if ($mode eq 'close' && !$is_super);
            $poll->open_poll if ($mode eq 'open' && !$is_super);
            $mode = 'results' ;

            BML::redirect($poll->entry->mobile_url())
                if LJ::Request->get_param('mobile');
        }
    }

    foreach my $m ([ "enter", $ML{'.filloutpoll'} ], [ "results" , $ML{'.viewresults'} ]) {
        next if ($m->[0] eq "enter" && $poll->is_closed);
        if ($mode eq $m->[0]) {
            $body .= "<b>[ $m->[1] ]</b> ";
        } else {
            $body .= "<a href=\"$LJ::SITEROOT/poll/?id=$pollid&amp;mode=$m->[0]\">[ $m->[1] ]</a> ";
        }
    }

    # load the item being shown
    my $entry = $poll->entry;
    unless ($entry) {
        $body = $ML{'.error.postdeleted'};
        return;
    }
    
    my $sm_u = LJ::load_userid($is_super);
    unless (($sm_u && $remote && $remote->can_manage($sm_u)) || $entry->visible_to($remote)) {
        $body = $ML{'.error.cantview'};
        return;
    }

    $body .= "<a href='" . $entry->url . "'>[ $ML{'.discuss'} ]</a> ";

    # Links for closing/reopening polls
    if ($poll->is_owner($remote)) {
        $body .= $poll->is_closed ?
            "<a href='$LJ::SITEROOT/poll/?id=$pollid&amp;mode=open'>[ $ML{'.reopen'} ]</a> " :
            "<a href='$LJ::SITEROOT/poll/?id=$pollid&amp;mode=close'>[ $ML{'.close'} ]</a> ";
    }

    $body .= "<hr><p>";

    if (defined $FORM{'poll-submit'})
    {
        unless (LJ::did_post()) {
            $title = $ML{'Error'};
            $body  = $ML{'bml.requirepost'};
            return;
        }

        unless (LJ::check_form_auth()) {
            $title = $ML{'Error'};
            $body  = $ML{'error.invalidform'};
            return;
        }

        my $error;
        my @warnings;
        LJ::Poll->process_submission(\%FORM, \$error, \@warnings);
        if ($error) {
            $title = $ML{'Error'};
            $body .= $error;
            return;
        }
        if (@warnings) {
            $title = $ML{'.title.warnings'};

            unshift @warnings, $ML{'.text.warnings'};
            push @warnings, LJ::Lang::ml('.text.warnings.back', {
                url => $entry->url,
            });
            $body .= join('', map { "<p>$_</p>" } @warnings);
            return;
        }
        if ($is_super) {
            my $journal = LJ::want_user($is_super);
            return BML::redirect($LJ::SITEROOR."/community/election.bml?authas=".$journal->user);
        }

        return BML::redirect($entry->mobile_url)
            if $FORM{mobile};

        return BML::redirect($entry->url);
    }

    $body .= $poll->render_new(mode => $mode, qid => $FORM{qid},
                page => $FORM{page}, pagesize => $FORM{pagesize});
    return;
}
_code?><?page
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
page?>
