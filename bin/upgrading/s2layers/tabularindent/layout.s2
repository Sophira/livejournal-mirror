# -*-s2-*-

layerinfo type = "layout";
layerinfo name = "Tabular Indent";
layerinfo redist_uniq = "tabularindent/layout";
layerinfo previews = "tabularindent/tabularindent.jpg";

propgroup colors {
  property Color body_bgcolor { 
      des = "Body background color";
      s1color = "page_back";
  }
  property Color main_bgcolor { 
      des = "Background of main text areas";
      s1color = "page_back";
  }
  property Color main_fgcolor { 
      des = "Main text color"; 
      s1color = "page_text";
  }
  property Color border_color { 
      des = "Color of borders";
      # No s1color equivalent
  }
  property Color headerbar_bgcolor { 
      des = "Background color of header bar(s)";
      s1color = "stronger_back";
  }
  property Color headerbar_fgcolor { 
      des = "Header bar text color";
      s1color = "stronger_text";
  }
  property Color captionbar_mainbox_bgcolor { 
      des = "Main background color of caption bar";
      s1color = "page_back";
  }
  property Color captionbar_mainbox_fgcolor { 
      des = "Text color of caption bar";
      s1color = "page_text";
  }
  property Color captionbar_userpicbox_color { 
      des = "User picture background color of caption bar";
      s1color = "strong_back";
  }
  property Color accent_bgcolor { 
      des = "Background color of accented areas";
      s1color = "weak_back";
  }
  property Color accent_fgcolor { 
      des = "Accented area text color";
      s1color = "weak_text";
  }
  property Color link_color { 
      des = "Link color";
      s1color = "page_link";
  }
  property Color vlink_color {
      des = "Visited link color";
      s1color = "page_vlink";
  }
  property Color alink_color {
      des = "Active link color";
      s1color = "page_alink";
  }
  property Color comment_bar_one_bgcolor {
      des = "Alternating background color for comment bars (one)";
  }
  property Color comment_bar_two_fgcolor {
      des = "Text color on alternating comment bars (one)";
  }
  property Color comment_bar_two_bgcolor {
      des = "Alternating background color for comment bars (two)";
  }
  property Color comment_bar_one_fgcolor {
      des = "Text color on alternating comment bars (two)";
  }
}
set body_bgcolor = "#ffffff";
set main_bgcolor = "#ffffff";
set main_fgcolor = "#000000";
set border_color = "#000000";
set headerbar_bgcolor = "#6666cc";
set headerbar_fgcolor = "#ffffff";
set captionbar_mainbox_bgcolor = "#ffffff";
set captionbar_mainbox_fgcolor = "#000000";
set captionbar_userpicbox_color = "#c0c0ff";
set accent_bgcolor = "#eeeeff";
set accent_fgcolor = "#000000";
set link_color = "#000050";
set vlink_color = "#500050";
set alink_color = "#ff00c0";
set comment_bar_one_bgcolor = "#c0c0ff";
set comment_bar_one_fgcolor = "#000000";
set comment_bar_two_bgcolor = "#eeeeff";
set comment_bar_two_fgcolor = "#000000";

propgroup presentation {
  property bool show_entry_userpic { 
      des = "Show the userpic on the journal entries?";
  }
  property use page_recent_items;
  property use page_friends_items;
  property use view_entry_disabled;
}
set show_entry_userpic = false;
set page_recent_items = 20;
set page_friends_items = 20;
set view_entry_disabled = false;

propgroup text {
  property use text_post_comment;
  property use text_read_comments;
  property use text_post_comment_friends;
  property use text_read_comments_friends;
}

function Page::lay_captionbar_navigation () { }

function captionbar (Page p) {
    var string title = $p->title();

    var string userpic;
    var Image up_img = $p.journal.default_pic;
    if (defined $up_img) {
        $userpic = """<img src="$up_img.url" height="$up_img.height" width="$up_img.width" alt="[icon]" />""";
    }
    var string website;
    if ($p.journal.website_url != "") {
        $website = """<tr><td>View:</td><td><a href="$p.journal.website_url">Website ($p.journal.website_name)</a>.</td></tr>""";
    }

    var string links;
    $links = "$links<tr><td>View:</td><td>" + ($p.view == "recent" ? 
                       $*text_view_recent :
                       "<a href='$p.base_url/'>$*text_view_recent</a>") + ".</td></tr>";

    $links = "$links<tr><td>View:</td><td>" + ($p.view == "friends" ? 
                       $*text_view_friends :
                       "<a href='$p.base_url/friends/'>$*text_view_friends</a>") + ".</td></tr>";

    $links = "$links<tr><td>View:</td><td>" + ($p.view == "archive" ? 
                       $*text_view_archive :
                       "<a href='$p.base_url/calendar/'>$*text_view_archive</a>") + ".</td></tr>";

    $links = "$links<tr><td>View:</td><td><a href='" + get_url($p.journal, "userinfo") + "'>$*text_view_userinfo</a>.</td></tr>";

    "<table border='0' width='100%' height='100' cellpadding='5' cellspacing='1' bgcolor='$*border_color'>";
    "<tr><td bgcolor='$*captionbar_userpicbox_color' align='center' valign='center' width='100'>";
    "$userpic</td><td bgcolor='$*captionbar_mainbox_bgcolor'>";
    "<b>$title</b><br /><table border='0'>$links$website";
    "<tr><td>View:</td><td><a href='$*SITEROOT/memories.bml?user=$p.journal.username'>Memories</a>.<br></td></tr>";
    "<tr><td colspan='2'>"; $p->lay_captionbar_navigation(); "</td></tr></table></td></tr></table>";
}

function print_stylesheet ()
{
    """body {
    background-color:  $*body_bgcolor;
}
body,td,p {
    font-family:       verdana, arial, helvetica, sans-serif; 
    font-size:         8pt;
}
a {
    color:             $*link_color;
    font-family:       verdana, arial, helvetica, sans-serif; 
    font-size:         8pt;
    text-decoration:   none;
}
a:visited {
    color:             $*vlink_color;
    font-family:       verdana, arial, helvetica, sans-serif;
    font-size:         8pt;
    text-decoration:   none; 
}
a:active {
    color:             $*alink_color;
    font-family:       verdana, arial, helvetica, sans-serif;
    font-size:         8pt;
    text-decoration:   none;
}
a:hover {
    color:             $*alink_color;
    font-family:       verdana, arial, helvetica, sans-serif; 
    font-size:         8pt;
    text-decoration:   underline;
}
h3.page-header {
    font-size:         8pt;
    font-family:       verdana, arial, helvetica, sans-serif;
    font-weight:       normal;
    background-color:  $*headerbar_bgcolor;
    color:             $*headerbar_fgcolor;
    padding: 6px;
    border:            1px solid $*border_color;
}
""";
}

function Page::print () 
{
    var string title = $this->title();
"""
<html>
<head>
  <link rel="stylesheet" href="$.stylesheet_url" type="text/css"/>
  $.head_content
  <title>$title</title>
 </head>
 <body>
    """;
    "<p>"; captionbar($this); "</p>";

    "<p>"; $this->print_body(); "</p>";

    "<p>"; captionbar($this); "</p>";

    "</body></html>";
}

function print_entry (Page p, Entry e, Color bgcolor, Color fgcolor, bool hide_text)
{
    if ($p.view == "recent") {
        if ($e.new_day) {
            "<h3 class='page-header'>";
            print $e.time->date_format("%%month%% %%dayord%%, %%yyyy%%");
            "</h3>\n";
        }
    } else {
        "<h3 class='page-header'>";
        print $e.time->date_format("%%month%% %%dayord%%, %%yyyy%%");
        "</h3>\n";
    }
    "<div align='right'><table border='0' width='95%' cellpadding='5' cellspacing='1' bgcolor='$*accent_bgcolor'>";
    "<tr><td bgcolor='$*accent_bgcolor'>";
    "<table border='0' width='100%'><tr>";
    # Userpic
    if ($p.view == "friends" or
        $*show_entry_userpic == true or
        $e.journal.username != $e.poster.username)
    {
        var string userpic = defined $e.userpic ? "<img src='$e.userpic.url' />" : "";
        "<td width='100' valign='top' bgcolor='$bgcolor' align='center'>";
        var string url = $e.journal->base_url() + "/";
        "<a href='$url'>$userpic</a>";
        if ($e.journal.username != $e.poster.username) { 
            var string purl = $e.poster->base_url() + "/";
            "<br /><font color='$fgcolor'>[<a href='$purl'>$e.poster.username</a>]</font>"; 
        } 
        if ($p.view == "friends") { "<br /><font color='$fgcolor'><a href='$url'>$e.journal.username</a></font>"; }
        "</td>";
    }
    "<td valign='top'><table border='0'>";
    # Security Icon
    if ($e.security != "") {
        "<tr><td align='right'><font color='$*accent_fgcolor'>Security:</font>";
        "</td><td><font color='$*accent_fgcolor'>"; $e.security_icon->print(); " $e.security</font></td></tr>";
    }
    # Subject
    if ($e.subject != "") {
        "<tr><td align='right'><font color='$*accent_fgcolor'>Subject:</font>";
        "</td><td><font color='$*accent_fgcolor'>$e.subject</font></td></tr>";
    }
    # Time posted
    var string time = $e.time->time_format();
    "<tr><td align='right'><font color='$*accent_fgcolor'>Time:</font></td>";
    "<td><font color='$*accent_fgcolor'>$time</font></td></tr>";
    # Current
    if (size $e.metadata) {
        foreach var string k ($e.metadata) {
            var string key = $k;
            var string val = $e.metadata{$k};
            if ($k == "mood") {
                $key = $*text_meta_mood;
            } elseif ($k == "music") {
                $key = $*text_meta_music;
            }
            if ($k == "mood" and defined $e.mood_icon) {
                var Image i = $e.mood_icon;
                $val = "<img src='$i.url' width='$i.width' height='$i.height' align='absmiddle' alt='[mood icon]' /> $val";
            }
            "<tr><td align='right'><font color='$*accent_fgcolor'>$key:</font></td>";
            "<td><font color='$*accent_fgcolor'>$val</font></td></tr>";
        }
    }
    "</table></td></tr></table></td></tr>";
    "<tr><td bgcolor='$*main_bgcolor'><font color='$*main_fgcolor'>";
    if (not $hide_text) { print $e.text; }
    "</font></td></tr>";
    $e.comments->print();
    "</table></div><br />";
}

function Page::print_entry (Entry e) 
{
    print_entry($this, $e, null Color, null Color, false);
}

function FriendsPage::print_entry (Entry e) {
    var Friend f = $.friends{$e.journal.username};
    print_entry($this, $e, $f.bgcolor, $f.fgcolor, false);
}

function RecentPage::lay_captionbar_navigation() 
{
    var int total = size $.entries;
    var string nav = "";
    if ($.nav.backward_url != "") {
        $nav = """<a href="$.nav.backward_url">back $total entries</a>""";
    }
    if ($.nav.forward_url != "" and $.nav.backward_url != "") {
        $nav = "$nav or ";
    }
    if ($.nav.forward_url != "") {
        $nav = """$nav<a href="$.nav.forward_url">forward $total entries</a>""";
    }
    print "You're looking at the latest ";
    print size $.entries;
    print ($.nav.skip > 0) ? " entries, after skipping $.nav.skip newer ones." :" entries.";
    if ($nav != "") { print "<br />Missed some entries?  Then simply jump $nav"; }
}

function RecentPage::print_body {
    foreach var Entry e ($.entries) {
        $this->print_entry($e);
    }
}

function FriendsPage::print_body {
    foreach var Entry e ($.entries) {
        $this->print_entry($e);
    }
}

function CommentInfo::print()
{
    if (not $.enabled) { return; }
    "<tr><td bgcolor='$*accent_bgcolor'><font color='$*accent_fgcolor'>";
    "<nobr>comments: ";
    if ($.count > 0 or $.screened) {
        $this->print_readlink(); " or ";
    }
    $this->print_postlink();
    "</nobr></font></td></tr>";
}

function YearPage::print_body {
    foreach var YearMonth m ($.months) {
        $this->print_month($m);
    }
}

function YearPage::lay_captionbar_navigation()
{
    $this->print_year_links();
}

function YearPage::print_year_links ()
{
    foreach var YearYear y ($.years) {
        if ($y.displayed) {
            "$y.year&nbsp;";
        } else {
            "<a href=\"$y.url\">$y.year</a>&nbsp;";
        }
    }
}

function YearPage::print_month(YearMonth m)
{
    if (not $m.has_entries) { return; }
    "<center><table border='1' cellpadding='4' width='80%'>";
    # Month header
    "<tr align='center'><td colspan='7' bgcolor='$*headerbar_bgcolor'>";
    "<font color='$*headerbar_fgcolor'><b>"; print $m->month_format(); "</b></font></td></tr>";
    # Weekdays
    "<tr align='center' bgcolor='$*accent_bgcolor'>";
    foreach var int d (weekdays()) {
        "<td><font color='$*accent_fgcolor'>"+$*lang_dayname_short[$d]+"</font></td>\n";
    }
    "</tr>";
    foreach var YearWeek w ($m.weeks) {
        $w->print();
    }
    "<tr align='center'><td colspan='7'><a href='$m.url'>View Subjects</a>";
    "</td></tr></table></center>";
}

function YearWeek::print () {
    "<tr>";
    if ($.pre_empty) { "<td colspan='$.pre_empty' bgcolor='$*accent_bgcolor'>&nbsp;</td>"; }
    foreach var YearDay d ($.days) {
        "<td valign='top'><b>$d.day</b>";
        "<div align='center'>";
        if ($d.num_entries) {
            """<a href="$d.url">$d.num_entries</a>""";
        } else {
            "&nbsp;";
        }
        "</div></td>";
    }
    if ($.post_empty) { "<td colspan='$.post_empty' bgcolor='$*accent_bgcolor'>&nbsp;</td>"; }
    "</tr>";
}

function DayPage::lay_captionbar_navigation()
{
    print "Missed some entries? Then simply jump to the <a href='$.prev_url'>previous day</a> or the <a href='$.next_url'>next day</a>.";
}

function DayPage::print_body () 
{
    if (not $.has_entries) {
        "<table border='0' width='100%' cellpadding='5' cellspacing='1' bgcolor='$*border_color'>";
        "<tr><td bgcolor='$*headerbar_bgcolor'><font color='$*headerbar_fgcolor'>";
        print $.date->date_format("%%month%% %%dayord%%, %%yyyy%%");
        "</font></td></tr></table><br />";
        print "No journal entries for this day.";
    } else {
        foreach var Entry e ($.entries) {
            $this->print_entry($e);
        }
    }
}

function EntryPage::print_body () {
    print_entry($this, $.entry, null Color, null Color, $.viewing_thread);
    print "<h3 class='page-header'>Comments:</h3>";
    if ($.comment_pages.total_subitems > 0) {
        $.comment_pages->print();
        $this->print_comments($.comments);
    }
}

function EntryPage::print_comment (Comment c) {
    var Color background; var Color color;
    if ($c.depth % 2) {
        $background = $*comment_bar_one_bgcolor;
        $color = $*comment_bar_one_fgcolor;
    } else {
        $background = $*comment_bar_two_bgcolor;
        $color = $*comment_bar_two_fgcolor;
    }
    var string poster = defined $c.poster ? $c.poster->as_string() : "<i>(Anonymous)</i>";
    var string sub_icon;
    if (defined $c.subject_icon) {
        $sub_icon = $c.subject_icon->as_string();
    }
    "<div align='right'><table border='0' width='95%' cellpadding='5' cellspacing='1' bgcolor='$*accent_bgcolor'>";
    "<tr><td bgcolor='$background'>";
    "<table border='0' width='100%'><tr>";
    # Userpic
    if (defined $c.userpic and $*comment_userpic_style != "off")
    {
        var string userpic = defined $c.userpic ? "<img src='$c.userpic.url' />" : "";
        "<td width='100' valign='top' align='center'>";
        print $userpic;
        "</td>";
    }
    "<td valign='top'><table border='0'>";
    # Poster
    "<tr><td align='right'><font color='$color'>From:</font>";
    "</td><td><font color='$color'>$poster</font></td></tr>";
    # Subject
    if ($c.subject != "") {
        "<tr><td align='right'><font color='$color'>Subject:</font>";
        "</td><td><font color='$color'>$c.subject</font></td></tr>";
    }
    # Time posted
    var string time = $c.time->time_format();
    "<tr><td align='right'><font color='$color'>Time:</font></td>";
    "<td><font color='$color'>$time</font></td></tr>";
    # Link
    "<tr><td align='right'><font color='$color'>Link:</font>";
    "</td><td><font color='$color'>(<a href='$c.permalink_url'>Link</a>)</font></td></tr>";
    # IP Address:
    if ($c.metadata{"poster_ip"}) {
        "<tr><td align='right'><font color='$color'>IP Address:</font>";
        "</td><td><font color='$color'>" + $c.metadata{"poster_ip"} + "</font></td></tr>";
    }
    "</table></td></tr></table></td></tr>";
    "<tr><td bgcolor='$*main_bgcolor'><font color='$*main_fgcolor'>$c.text";
    "</font></td></tr>";
    "<tr><td bgcolor='$background'><font color='$color'><nobr>";
    print "<div style='margin-top: 3px; font-size: smaller'>(<a href='$c.reply_url'>Reply to this</a>) ";
    if ($c.parent_url != "") { "(<a href='$c.parent_url'>Parent</a>) "; }
    if ($c.thread_url != "") { "(<a href='$c.thread_url'>Thread</a>) "; }
    "</div></nobr></font></td></tr>";
    "</table></div><br />";
}

function ReplyPage::print_body () {
    "<div align='right'><table border='0' width='95%' cellpadding='5' cellspacing='1' bgcolor='$*accent_bgcolor'>";
    "<tr><td bgcolor='$*accent_bgcolor'>";
    "<table border='0' width='100%'><tr>";
    # Userpic
    if (defined $.replyto.userpic and $*comment_userpic_style != "off")
    {
        var string userpic = "<img src='$.replyto.userpic.url' />";
        "<td width='100' valign='top' align='center'>";
        print $userpic;
        "</td>";
    }
    "<td valign='top'><table border='0'>";
    # Subject
    if ($.replyto.subject != "") {
        "<tr><td align='right'><font color='$*accent_fgcolor'>Subject:</font>";
        "</td><td><font color='$*accent_fgcolor'>$.replyto.subject</font></td></tr>";
    }
    # Time posted
    var string time = $.replyto.time->time_format();
    "<tr><td align='right'><font color='$*accent_fgcolor'>Time:</font></td>";
    "<td><font color='$*accent_fgcolor'>$time</font></td></tr>";
    "</table></td></tr></table></td></tr>";
    "<tr><td bgcolor='$*main_bgcolor'><font color='$*main_fgcolor'>";
    print $.replyto.text;
    "</font></td></tr>";
    "</table></div><br />";

    print "<h3 class='page-header'>Reply:</h3>";
    $.form->print();
}

function print_theme_preview()
{
    "<table width='100%' bgcolor='$*body_bgcolor' cellpadding=10><tr><td>";
    "<table border='0' width='100%' cellpadding='5' cellspacing='1' bgcolor='$*border_color'>";
    "<tr><td bgcolor='$*headerbar_bgcolor'><font color='$*headerbar_fgcolor'>October 29th, 2003";
    "</font></td></tr></table><br />";
    "<div align='right'><table border='0' width='95%' cellpadding='5' cellspacing='1' bgcolor='$*accent_bgcolor'>";
    "<tr><td align='left' bgcolor='$*accent_bgcolor'>";
    "<table border='0' width='100%'><tr>";
    "<td valign='top'><table border='0'>";
    "<tr><td align='right'><font color='$*accent_fgcolor'>Subject:</font>";
    "</td><td><font color='$*accent_fgcolor'>Words Words Words</font></td></tr>";
    "<tr><td align='right'><font color='$*accent_fgcolor'>Time:</font></td>";
    "<td><font color='$*accent_fgcolor'>1:37 pm</font></td></tr>";
    "</table></td></tr></table></td></tr>";
    "<tr><td align='left' bgcolor='$*main_bgcolor'><font color='$*main_fgcolor'>Preview text, preview text, etc, etc..... words, words and more words.</font></td></tr>";
    """<tr><td align='left' bgcolor='$*accent_bgcolor'><font color='$*accent_fgcolor'><nobr>comments: <a href="#">20 comments</a> or <a href="#">Leave a comment</a></nobr></font></td></tr>""";
    "</table></div><br />";
    "</td></tr></table>";
}
