<?page
title=>Journal Display
body<=
<?_code
{
    use strict;
    use vars qw(%POST %GET);
    LJ::need_res( 'stc/customize.css', 'js/core.js', 'js/dom.js', 'js/customize.js' );

    BML::decl_params(authas            => '.',
                     stylesys          => qr/^[12]$/,
                     journaltitle      => qr/./,
                     journalsubtitle   => qr/./,
                     friendspagetitle  => qr/./,
                     "action:redir"    => 'word',
                     lj_form_auth      => qr/./,
                     );

    return LJ::server_down_html() if $LJ::SERVER_DOWN;

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my $authas = $GET{'authas'} || $remote->{'user'};
    my $u = LJ::get_authas_user($authas);
    return LJ::bad_input("You could not be authenticated as the specified user.")
        unless $u;

    return $LJ::MSG_READONLY_USER if $u->readonly;

    # extra arguments for get requests
    my $getextra = $authas ne $remote->{'user'} ? "?authas=$authas" : '';

    # Return strings
    my $ret; my $saved_msg; my $err_msg;

    ### Save settings
    if (LJ::did_post()) {
        return "<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>"
            unless LJ::check_form_auth();

        # journal / friends titles

        $POST{'stylesys'}         = $POST{'stylesys'} == 2 ? 2 : 1;
        $POST{'journaltitle'}     = LJ::text_trim($POST{'journaltitle'}, 0, LJ::std_max_length()) if $POST{'journaltitle'};
        $POST{'journalsubtitle'}  = LJ::text_trim($POST{'journalsubtitle'}, 0, LJ::std_max_length()) if $POST{'journalsubtitle'};
        $POST{'friendspagetitle'} = LJ::text_trim($POST{'friendspagetitle'}, 0, LJ::std_max_length()) if $POST{'friendspagetitle'};

        # set userprops
        my @uprops = qw(journaltitle journalsubtitle friendspagetitle stylesys);

        foreach my $uprop (@uprops) {
            my $eff_val = $POST{$uprop};   # effective value, since 0 isn't stored
            $eff_val = "" unless $eff_val;
            $u->set_prop( $uprop, $eff_val );
        }

        LJ::cmize::js_redirect(\%POST);
        $saved_msg .= "Your settings have been saved. <a href='" . $u->journal_base() . "'>View your Journal</a>.";

        # Reload the user object to force the display of these changes
        $u = LJ::load_user($u->{user}, 'force');
    }

    my $ad =  LJ::ads( type => 'app', orient => 'BML-App-Customize' );
    if ($ad) {
        $ret .= "<div id='CustomizeAdBox'>$ad</div>";
        $ret .= "<div style='clear: both; margin: 0; padding: 0; width: 0; height: 0;'></div>";
    }

    $ret .= "<?warningbar $saved_msg warningbar?>" if $saved_msg;
    $ret .= "<?errorbar $err_msg errorbar?>" if $err_msg;

    $ret .= "<form action='./' method='get' id='Authas'>\n";
    $ret .= LJ::make_authas_select($remote, { 'authas' => $GET{'authas'} });
    $ret .= "</form>\n\n";

    $ret .= LJ::cmize::html_tablinks("index", $getextra);
    $ret .= "<div id='CurrentTab'>";

    ### Sidebar
    {
        $ret .= "<div id='CurrentTabSide'>";
        $ret .= LJ::cmize::display_current_summary($u);
        $ret .= "</div>";
    }

    $ret .= "<div id='CurrentTabMain'><form id='display_form' method='post' action='./?authas=$authas'>";
    $ret .= LJ::form_auth();

    ### Journal Titles
    {
        $ret .= "<fieldset><legend>Journal Titles</legend><table>";
        # journaltitle
        $ret .= "<tr><th style='text-align: right'>Journal Title:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'journaltitle', 'value' => $u->prop('journaltitle'),
                                'size' => '30', 'maxlength' => LJ::std_max_length() });
        $ret .= " </td></tr>\n";
        # journalsubtitle
        $ret .= "<tr><th style='text-align: right'>Subtitle:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'journalsubtitle', 'value' => $u->prop('journalsubtitle'),
                                'size' => '30', 'maxlength' => LJ::std_max_length() });
        $ret .= " </td></tr>\n";

        # friendspagetitle
        $ret .= "<tr><th style='text-align: right'>Friends Page Title:</th><td>";
        $ret .= LJ::html_text({ 'name' => 'friendspagetitle', 'value' => $u->prop('friendspagetitle'),
                                'size' => '30', 'maxlength' => LJ::std_max_length() });
        $ret .= "</td></tr>\n";
        $ret .= "</table></fieldset>";
    }

    ### Link List
    if($u->prop('stylesys') == 2) {
        $ret .= "<fieldset><legend>Link List</legend>";
        $ret .= "Many S2 layouts can display <a href='$LJ::SITEROOT/manage/links.bml$getextra'>your link ";
        $ret .= "list</a>. Once you've set it up, you can display it in your journal by turning on the \"Display ";
        $ret .= "Link List\" custom option in your layout.</fieldset>";
    }

    ### Style System
    {
        $ret .= "<fieldset><legend>Style System</legend>";
        $ret .= "LiveJournal provides two style systems that allow you varying control over how your journal is displayed:";
        $ret .= "<table><tr><td>";
        my $checked = $u->prop('stylesys') != 2 ? 1 : 0;
        $ret .= LJ::html_check({ 'id' => "S1", 'name' => 'stylesys', 'value' => "1",
                                 'type' => "radio", 'selected' => $checked });
        $ret .= "</td><td><label for='S1'><strong>S1</strong> - For users who are comfortable with HTML and CSS.</label></td></tr>";
        $ret .= "<tr><td>";
        $checked = $u->prop('stylesys') == 2 ? 1 : 0;
        $ret .= LJ::html_check({ 'id' => "S2", 'name' => 'stylesys', 'value' => "2",
                                 'type' => "radio", 'selected' => $checked, });
        $ret .= "</td><td><label for='S2'><strong>S2</strong> - For users who don't know HTML or CSS, or make ".
          " only minor alterations.</label></td></tr>";
        $ret .= "</table></fieldset>";
    }

    $ret .= LJ::cmize::html_save();
    $ret .= "</form></div></div>";

    return $ret;
}
_code?>
<=body
page?>
